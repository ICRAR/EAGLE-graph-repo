{
    "modelData": {
        "fileType": "Graph",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE-graph-repo",
        "filePath": "examples/branchDemo.graph",
        "sha": "",
        "git_url": "",
        "eagleVersion": "v3.2.0",
        "eagleCommitHash": "12c7792d06b4408b43647bb764b03616eab8dd8a",
        "schemaVersion": "OJS",
        "readonly": true
    },
    "nodeDataArray": [
        {
            "category": "Description",
            "isData": false,
            "isGroup": false,
            "canHaveInputs": false,
            "canHaveOutputs": false,
            "color": "rgb(157 43 96)",
            "drawOrderHint": 0,
            "key": -1,
            "text": "Description",
            "description": "",
            "x": 392.61464198071883,
            "y": 25.11521521288031,
            "width": 203.32409704359478,
            "height": 138.7811321752724,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "readonly": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "",
                    "name": "",
                    "value": "This pattern shows a branch construct. NOTE: Branches are still work in progress and will not work as desired in the execution engine. This graph will also be used to guide and test the further implementation.",
                    "description": "",
                    "readonly": false,
                    "type": "Unknown"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "exitAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "exitApplicationName": "",
            "exitApplicationType": "None",
            "exitApplicationKey": null
        },
        {
            "category": "Branch",
            "isData": false,
            "isGroup": false,
            "canHaveInputs": true,
            "canHaveOutputs": true,
            "color": "rgb(88 167 94)",
            "drawOrderHint": 0,
            "key": -2,
            "text": "Branch",
            "description": "A conditional branch to control flow.",
            "x": 707,
            "y": 360,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "readonly": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [
                {
                    "Id": "ba9ffc7a-9ef2-4ef4-860f-c167a9f2fb55",
                    "IdText": "array",
                    "text": "Array",
                    "event": false,
                    "type": "Array",
                    "description": " Port carrying the averaged array"
                }
            ],
            "outputPorts": [
                {
                    "Id": "aaa06365-563e-4d9a-95ec-99effbcd4b5a",
                    "IdText": "Y",
                    "text": "",
                    "event": false,
                    "type": "String",
                    "description": ""
                },
                {
                    "Id": "9936b611-99c7-469d-901f-1dd060faf239",
                    "IdText": "N",
                    "text": "",
                    "event": false,
                    "type": "String",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Execution time",
                    "name": "execution_time",
                    "value": 5,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Float"
                },
                {
                    "text": "Num CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer"
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean"
                },
                {
                    "text": "Appclass",
                    "name": "appclass",
                    "value": "branch.MyBranch",
                    "description": "The python class that implements this branch construct",
                    "readonly": false,
                    "type": "String"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "exitAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "exitApplicationName": "",
            "exitApplicationType": "None",
            "exitApplicationKey": null
        },
        {
            "category": "PythonApp",
            "isData": false,
            "isGroup": false,
            "canHaveInputs": true,
            "canHaveOutputs": true,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -9,
            "text": "RandomArrayApp",
            "description": "A testing APP that does not take any input and produces a random array of type int64, if integer is set to True, else of type float64. size indicates the number of elements ranging between the values low and high. The resulting array will be send to all connected output apps. \ninteger: bool [True], generate integer array low: float, lower boundary (will be converted to int for integer arrays) high: float, upper boundary (will be converted to int for integer arrays) size: int, number of array elements",
            "x": 372.92233798875964,
            "y": 255.49267696337097,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "readonly": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "4fcfb7e",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "4a373676-d2de-42e2-a89a-20f5bf5e5b2c",
                    "IdText": "array",
                    "text": "Array",
                    "event": false,
                    "type": "Array",
                    "description": " Port carrying the averaged array"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Size",
                    "name": "size",
                    "value": 100,
                    "description": "The size of the array",
                    "readonly": false,
                    "type": "Integer"
                },
                {
                    "text": "Integer",
                    "name": "integer",
                    "value": false,
                    "description": "Generate integer array?",
                    "readonly": false,
                    "type": "Boolean"
                },
                {
                    "text": "Low",
                    "name": "low",
                    "value": "0",
                    "description": "Low value of range in array [inclusive]",
                    "readonly": false,
                    "type": "float"
                },
                {
                    "text": "High",
                    "name": "high",
                    "value": "1",
                    "description": "High value of range of array [exclusive]",
                    "readonly": false,
                    "type": "float"
                },
                {
                    "text": "Application class",
                    "name": "appclass",
                    "value": "dlg.apps.simple.RandomArrayApp",
                    "description": "Application class",
                    "readonly": true,
                    "type": "String"
                },
                {
                    "text": "Execution time",
                    "name": "execution_time",
                    "value": 5,
                    "description": "Estimated execution time",
                    "readonly": false,
                    "type": "Float"
                },
                {
                    "text": "Num CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "description": "Number of cores used",
                    "readonly": false,
                    "type": "Integer"
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "description": "Component is start of a group",
                    "readonly": false,
                    "type": "Boolean"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "exitAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "exitApplicationName": "",
            "exitApplicationType": "None",
            "exitApplicationKey": null
        },
        {
            "category": "Memory",
            "isData": true,
            "isGroup": false,
            "canHaveInputs": true,
            "canHaveOutputs": true,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -5,
            "text": "Memory",
            "description": "In-memory storage of intermediate data products",
            "x": 549.3166684521676,
            "y": 323.1026132077936,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "readonly": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [
                {
                    "Id": "d79a8293-20ea-4c96-9722-b77fa773e844",
                    "IdText": "array",
                    "text": "Array",
                    "event": false,
                    "type": "Array",
                    "description": " Port carrying the averaged array"
                }
            ],
            "outputPorts": [
                {
                    "Id": "dbadf028-89cb-45ae-8c48-86f9c8b23be1",
                    "IdText": "array",
                    "text": "Array",
                    "event": false,
                    "type": "Array",
                    "description": " Port carrying the averaged array"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float"
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "exitAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "exitApplicationName": "",
            "exitApplicationType": "None",
            "exitApplicationKey": null
        },
        {
            "category": "File",
            "isData": true,
            "isGroup": false,
            "canHaveInputs": true,
            "canHaveOutputs": true,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -3,
            "text": "File",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 985.2948519078232,
            "y": 386.71467696337095,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "readonly": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [
                {
                    "Id": "68d06d64-3c4a-4577-b5c0-54aeebfe4f33",
                    "IdText": "N",
                    "text": "",
                    "event": false,
                    "type": "String",
                    "description": ""
                }
            ],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float"
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean"
                },
                {
                    "text": "Check file path exists",
                    "name": "check_filepath_exists",
                    "value": true,
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean"
                },
                {
                    "text": "File path",
                    "name": "filepath",
                    "value": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String"
                },
                {
                    "text": "Directory name",
                    "name": "dirname",
                    "value": "",
                    "description": "Name of the directory containing the file for this node",
                    "readonly": false,
                    "type": "String"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "exitAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "exitApplicationName": "",
            "exitApplicationType": "None",
            "exitApplicationKey": null
        },
        {
            "category": "File",
            "isData": true,
            "isGroup": false,
            "canHaveInputs": true,
            "canHaveOutputs": true,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -4,
            "text": "File",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 916.2948519078232,
            "y": 523.714676963371,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "readonly": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [
                {
                    "Id": "b740e062-aeb1-4244-b39b-3ebfae28b59d",
                    "IdText": "Y",
                    "text": "",
                    "event": false,
                    "type": "String",
                    "description": ""
                }
            ],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float"
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean"
                },
                {
                    "text": "Check file path exists",
                    "name": "check_filepath_exists",
                    "value": true,
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean"
                },
                {
                    "text": "File path",
                    "name": "filepath",
                    "value": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String"
                },
                {
                    "text": "Directory name",
                    "name": "dirname",
                    "value": "",
                    "description": "Name of the directory containing the file for this node",
                    "readonly": false,
                    "type": "String"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "exitAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "exitApplicationName": "",
            "exitApplicationType": "None",
            "exitApplicationKey": null
        }
    ],
    "linkDataArray": [
        {
            "from": -9,
            "fromPort": "4a373676-d2de-42e2-a89a-20f5bf5e5b2c",
            "to": -5,
            "toPort": "d79a8293-20ea-4c96-9722-b77fa773e844",
            "loop_aware": "0"
        },
        {
            "from": -5,
            "fromPort": "dbadf028-89cb-45ae-8c48-86f9c8b23be1",
            "to": -2,
            "toPort": "ba9ffc7a-9ef2-4ef4-860f-c167a9f2fb55",
            "loop_aware": "0"
        },
        {
            "from": -2,
            "fromPort": "9936b611-99c7-469d-901f-1dd060faf239",
            "to": -3,
            "toPort": "68d06d64-3c4a-4577-b5c0-54aeebfe4f33",
            "loop_aware": "0"
        },
        {
            "from": -2,
            "fromPort": "aaa06365-563e-4d9a-95ec-99effbcd4b5a",
            "to": -4,
            "toPort": "b740e062-aeb1-4244-b39b-3ebfae28b59d",
            "loop_aware": "0"
        }
    ]
}