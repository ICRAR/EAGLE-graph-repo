{
    "modelData": {
        "fileType": "Palette",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE-graph-repo",
        "filePath": "examples/ehtim-calibrating.palette",
        "eagleVersion": "v4.5.5",
        "eagleCommitHash": "33c76f928cb1ba8317f079f74a48af13e50df702",
        "schemaVersion": "",
        "readonly": true,
        "sha": "",
        "gitUrl": "",
        "lastModifiedName": "",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 0,
        "numLGNodes": 16
    },
    "nodeDataArray": [
        {
            "category": "PythonApp",
            "key": -5,
            "text": "get_network_scan_cal",
            "description": "",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.network_cal.get_network_scan_cal",
                    "defaultValue": "ehtim.calibrating.network_cal.get_network_scan_cal",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "args",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.args",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -6,
            "text": "get_network_scan_cal2",
            "description": "",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.network_cal.get_network_scan_cal2",
                    "defaultValue": "ehtim.calibrating.network_cal.get_network_scan_cal2",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "i",
                    "name": "i",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.i",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "n",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.n",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "scan",
                    "name": "scan",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.scan",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "zbl",
                    "name": "zbl",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.zbl",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.sites",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "cluster_data",
                    "name": "cluster_data",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.cluster_data",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "polrep",
                    "name": "polrep",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.polrep",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pol",
                    "name": "pol",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.pol",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.method",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.pad_amp",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "gain_tol",
                    "name": "gain_tol",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.gain_tol",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.caltable",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.show_solution",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "debias",
                    "name": "debias",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.debias",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "msgtype",
                    "name": "msgtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.msgtype",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -12,
            "text": "get_polgains_scan_cal",
            "description": "",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.polgains_cal.get_polgains_scan_cal",
                    "defaultValue": "ehtim.calibrating.polgains_cal.get_polgains_scan_cal",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "args",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.args",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -13,
            "text": "get_polgains_scan_cal2",
            "description": "",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.polgains_cal.get_polgains_scan_cal2",
                    "defaultValue": "ehtim.calibrating.polgains_cal.get_polgains_scan_cal2",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "i",
                    "name": "i",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.i",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "n",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.n",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "scan",
                    "name": "scan",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.scan",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "reference",
                    "name": "reference",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.reference",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.sites",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.method",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.pad_amp",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.caltable",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.show_solution",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "msgtype",
                    "name": "msgtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.msgtype",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -17,
            "text": "get_selfcal_scan_cal",
            "description": "",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.self_cal.get_selfcal_scan_cal",
                    "defaultValue": "ehtim.calibrating.self_cal.get_selfcal_scan_cal",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "args",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.args",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -18,
            "text": "get_selfcal_scan_cal2",
            "description": "",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.self_cal.get_selfcal_scan_cal2",
                    "defaultValue": "ehtim.calibrating.self_cal.get_selfcal_scan_cal2",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "i",
                    "name": "i",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.i",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "n",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.n",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "scan",
                    "name": "scan",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.scan",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "im",
                    "name": "im",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.im",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "V_scan",
                    "name": "V_scan",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.V_scan",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.sites",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "polrep",
                    "name": "polrep",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.polrep",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pol",
                    "name": "pol",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.pol",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.method",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "minimizer_method",
                    "name": "minimizer_method",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.minimizer_method",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.show_solution",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.pad_amp",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "gain_tol",
                    "name": "gain_tol",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.gain_tol",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.caltable",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "debias",
                    "name": "debias",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.debias",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "msgtype",
                    "name": "msgtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.msgtype",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -4,
            "text": "init",
            "description": "",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.network_cal.init",
                    "defaultValue": "ehtim.calibrating.network_cal.init",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "x",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.x",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -7,
            "text": "leakage_cal",
            "description": "Polarimetric calibration (detects and removes polarimetric leakage,\n   based on consistency with a given image)\n\n   ",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "afdca944-626d-4e23-a575-999c6d3e93b6",
                    "IdText": "Obsdata",
                    "text": "Obsdata",
                    "event": false,
                    "type": "None",
                    "description": " the calibrated observation, with computed leakage values added to the obs.tarr"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.pol_cal.leakage_cal",
                    "defaultValue": "ehtim.calibrating.pol_cal.leakage_cal",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "obs",
                    "name": "obs",
                    "value": "",
                    "defaultValue": "",
                    "description": "The observation to be calibrated",
                    "readonly": false,
                    "type": "Object.obs",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "im",
                    "name": "im",
                    "value": "None",
                    "defaultValue": "None",
                    "description": "the reference image used for calibration",
                    "readonly": false,
                    "type": "Object.im",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "[]",
                    "defaultValue": "[]",
                    "description": "list of sites to include in the polarimetric calibration.",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "leakage_tol",
                    "name": "leakage_tol",
                    "value": 0.1,
                    "defaultValue": "0.1",
                    "description": "leakage values exceeding this value will be disfavored by the prior",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pol_fit",
                    "name": "pol_fit",
                    "value": "[RL",
                    "defaultValue": "[RL",
                    "description": "list of visibilities to use; e.g., ['RL','LR'] or ['RR','LL','RL','LR']",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "dtype",
                    "name": "dtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "Type of data to fit ('vis' for complex visibilities;",
                    "readonly": false,
                    "type": "Object.'LR']",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "const_fpol",
                    "name": "const_fpol",
                    "value": "vis",
                    "defaultValue": "vis",
                    "description": "If true, solve for a single fractional polarization",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "inverse",
                    "name": "inverse",
                    "value": false,
                    "defaultValue": "False",
                    "description": "",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "minimizer_method",
                    "name": "minimizer_method",
                    "value": false,
                    "defaultValue": "False",
                    "description": "Method for scipy.optimize.minimize (e.g., 'CG', 'BFGS')",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "ttype",
                    "name": "ttype",
                    "value": "L-BFGS-B",
                    "defaultValue": "L-BFGS-B",
                    "description": "if \"fast\" or \"nfft\" use FFT to produce visibilities. Else \"direct\" for DTFT",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "fft_pad_factor",
                    "name": "fft_pad_factor",
                    "value": "direct",
                    "defaultValue": "direct",
                    "description": "zero pad the image to fft_pad_factor * image size in FFT",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": 2,
                    "defaultValue": "2",
                    "description": "if True, display the solution as it is calculated",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "obs_apply",
                    "name": "obs_apply",
                    "value": true,
                    "defaultValue": "True",
                    "description": "",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "",
                    "name": "",
                    "value": false,
                    "defaultValue": "False",
                    "description": "",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -1,
            "text": "make_cluster_data",
            "description": "Cluster sites in an observation into groups\n   with intra-group basline length not exceeding zbl_uvdist_max\n",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.cal_helpers.make_cluster_data",
                    "defaultValue": "ehtim.calibrating.cal_helpers.make_cluster_data",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "obs",
                    "name": "obs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.obs",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "zbl_uvdist_max",
                    "name": "zbl_uvdist_max",
                    "value": "ZBLCUTOFF",
                    "defaultValue": "ZBLCUTOFF",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -2,
            "text": "network_cal",
            "description": "Network-calibrate a dataset with zero baseline constraints.\n\n   ",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "fbadc665-4aaa-444f-8fde-4f262cb4be70",
                    "IdText": "Obsdata",
                    "text": "Obsdata",
                    "event": false,
                    "type": "None",
                    "description": " the calibrated observation, if caltable==False"
                },
                {
                    "Id": "c1cb5609-2c51-4113-b2fd-cd1a6001e76f",
                    "IdText": "Caltable",
                    "text": "Caltable",
                    "event": false,
                    "type": "None",
                    "description": " the derived calibration table, if caltable==True"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.network_cal.network_cal",
                    "defaultValue": "ehtim.calibrating.network_cal.network_cal",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "obs",
                    "name": "obs",
                    "value": "",
                    "defaultValue": "",
                    "description": "The observation to be calibrated",
                    "readonly": false,
                    "type": "Object.obs",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "zbl",
                    "name": "zbl",
                    "value": "",
                    "defaultValue": "",
                    "description": "constant zero baseline flux in Jy, or a function of UT hour.",
                    "readonly": false,
                    "type": "Object.zbl",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "[]",
                    "defaultValue": "[]",
                    "description": "list of sites to include in the network calibration.",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "zbl_uvdist_max",
                    "name": "zbl_uvdist_max",
                    "value": "ZBLCUTOFF",
                    "defaultValue": "ZBLCUTOFF",
                    "description": "maximum uv-distance considered a zero baseline",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "amp",
                    "defaultValue": "amp",
                    "description": "chooses what to calibrate, 'amp', 'phase', or 'both'.",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "minimizer_method",
                    "name": "minimizer_method",
                    "value": "BFGS",
                    "defaultValue": "BFGS",
                    "description": "Method for scipy.optimize.minimize (e.g., 'CG', 'BFGS')",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pol",
                    "name": "pol",
                    "value": "I",
                    "defaultValue": "I",
                    "description": "which visibility to compute gains for",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "adds fractional uncertainty to amplitude sigmas in quadrature",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "gain_tol",
                    "name": "gain_tol",
                    "value": 0.2,
                    "defaultValue": "0.2",
                    "description": "gains that exceed this value will be disfavored by the prior",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "solution_interval",
                    "name": "solution_interval",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "solution interval in seconds;",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "scan_solutions",
                    "name": "scan_solutions",
                    "value": false,
                    "defaultValue": "False",
                    "description": "If True, determine one gain per site per scan.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, returns a Caltable instead of an Obsdata",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "processes",
                    "name": "processes",
                    "value": -1,
                    "defaultValue": "-1",
                    "description": "number of cores to use in multiprocessing",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, display the solution as it is calculated",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "debias",
                    "name": "debias",
                    "value": true,
                    "defaultValue": "True",
                    "description": "If True, debias the amplitudes",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "msgtype",
                    "name": "msgtype",
                    "value": "bar",
                    "defaultValue": "bar",
                    "description": "type of progress message to be printed, default is 'bar'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -3,
            "text": "network_cal_scan",
            "description": "Network-calibrate a scan with zero baseline constraints.\n\n   ",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "e1ecf4f4-c47e-44cc-a98d-d70ee6b8237d",
                    "IdText": "Obsdata",
                    "text": "Obsdata",
                    "event": false,
                    "type": "None",
                    "description": " the calibrated scan, if caltable==False"
                },
                {
                    "Id": "dadbc3fb-afcc-4475-9222-63658c065876",
                    "IdText": "Caltable",
                    "text": "Caltable",
                    "event": false,
                    "type": "None",
                    "description": " the derived calibration table, if caltable==True"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.network_cal.network_cal_scan",
                    "defaultValue": "ehtim.calibrating.network_cal.network_cal_scan",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "scan",
                    "name": "scan",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.scan",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "zbl",
                    "name": "zbl",
                    "value": "",
                    "defaultValue": "",
                    "description": "constant zero baseline flux in Jy, or a function of UT hour.",
                    "readonly": false,
                    "type": "Object.zbl",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "",
                    "defaultValue": "",
                    "description": "list of sites to include in the network calibration.",
                    "readonly": false,
                    "type": "Object.sites",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "clustered_sites",
                    "name": "clustered_sites",
                    "value": "",
                    "defaultValue": "",
                    "description": "information  on clustered sites, returned by make_cluster_data",
                    "readonly": false,
                    "type": "Object.clustered_sites",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "polrep",
                    "name": "polrep",
                    "value": "stokes",
                    "defaultValue": "stokes",
                    "description": "'stokes' or 'circ' to specify the  polarization products in scan",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pol",
                    "name": "pol",
                    "value": "I",
                    "defaultValue": "I",
                    "description": "which image polarization to self-calibrate visibilities to",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "zbl_uvidst_max",
                    "name": "zbl_uvidst_max",
                    "value": "ZBLCUTOFF",
                    "defaultValue": "ZBLCUTOFF",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "both",
                    "defaultValue": "both",
                    "description": "chooses what to calibrate, 'amp', 'phase', or 'both'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "minimizer_method",
                    "name": "minimizer_method",
                    "value": "BFGS",
                    "defaultValue": "BFGS",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, display the solution as it is calculated",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "adds fractional uncertainty to amplitude sigmas in quadrature",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "gain_tol",
                    "name": "gain_tol",
                    "value": 0.2,
                    "defaultValue": "0.2",
                    "description": "gains that exceed this value will be disfavored by the prior",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, returns a Caltable instead of an Obsdata",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "debias",
                    "name": "debias",
                    "value": true,
                    "defaultValue": "True",
                    "description": "If True, debias the amplitudes",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -8,
            "text": "plot_leakage",
            "description": "Plot polarimetric leakage terms in an observation\n\n   ",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "e3a56474-71e0-4e87-a924-5ad103934184",
                    "IdText": "matplotlib.axes.Axes",
                    "text": "matplotlib.axes.Axes",
                    "event": false,
                    "type": "None",
                    "description": " Axes object with data plot"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.pol_cal.plot_leakage",
                    "defaultValue": "ehtim.calibrating.pol_cal.plot_leakage",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "obs",
                    "name": "obs",
                    "value": "",
                    "defaultValue": "",
                    "description": "observation (or Array) containing the tarr",
                    "readonly": false,
                    "type": "Object.obs",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "[]",
                    "defaultValue": "[]",
                    "description": "",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "axis",
                    "name": "axis",
                    "value": false,
                    "defaultValue": "False",
                    "description": "add plot to this axis",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "rangex",
                    "name": "rangex",
                    "value": false,
                    "defaultValue": "False",
                    "description": "[xmin, xmax] x-axis limits",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "rangey",
                    "name": "rangey",
                    "value": false,
                    "defaultValue": "False",
                    "description": "[ymin, ymax] y-axis limits",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "markers",
                    "name": "markers",
                    "value": "[o",
                    "defaultValue": "[o",
                    "description": "pair of matplotlib plot markers (for RCP and LCP)",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "markersize",
                    "name": "markersize",
                    "value": "",
                    "defaultValue": "",
                    "description": "size of plot markers",
                    "readonly": false,
                    "type": "Object.'s']",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "export_pdf",
                    "name": "export_pdf",
                    "value": 6,
                    "defaultValue": "6",
                    "description": "path to pdf file to save figure",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "axislabels",
                    "name": "axislabels",
                    "value": "",
                    "defaultValue": "",
                    "description": "Show axis labels if True",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "legend",
                    "name": "legend",
                    "value": true,
                    "defaultValue": "True",
                    "description": "Show legend if True",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sort_tarr",
                    "name": "sort_tarr",
                    "value": true,
                    "defaultValue": "True",
                    "description": "",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show",
                    "name": "show",
                    "value": true,
                    "defaultValue": "True",
                    "description": "Display the plot if true",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "",
                    "name": "",
                    "value": true,
                    "defaultValue": "True",
                    "description": "",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -9,
            "text": "polgains_cal",
            "description": "Polarimeteric-phase-gains-calibrate a dataset.\n    Numerically solves for polarimetric gains to align RCP and LCP feeds.\n    Uses all baselines to find the solution. Effectively assumes phase of Stokes V to be zero.\n    Because fits are local, it's not providing absolute phase calibration.\n\n   ",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "d40d2aa6-01b4-4fa2-ac41-349545a84058",
                    "IdText": "Obsdata",
                    "text": "Obsdata",
                    "event": false,
                    "type": "None",
                    "description": " the calibrated observation, if caltable==False"
                },
                {
                    "Id": "9bf9d0c7-4932-4ae8-95d6-3a3c6c78d595",
                    "IdText": "Caltable",
                    "text": "Caltable",
                    "event": false,
                    "type": "None",
                    "description": " the derived calibration table, if caltable==True"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.polgains_cal.polgains_cal",
                    "defaultValue": "ehtim.calibrating.polgains_cal.polgains_cal",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "obs",
                    "name": "obs",
                    "value": "",
                    "defaultValue": "",
                    "description": "The observation to be calibrated",
                    "readonly": false,
                    "type": "Object.obs",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "reference",
                    "name": "reference",
                    "value": "AA",
                    "defaultValue": "AA",
                    "description": "station used as reference to break the degeneracy",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "[]",
                    "defaultValue": "[]",
                    "description": "list of sites to include in the polarimetric calibration.",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "phase",
                    "defaultValue": "phase",
                    "description": "chooses what to calibrate, 'phase' or 'both'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "minimizer_method",
                    "name": "minimizer_method",
                    "value": "BFGS",
                    "defaultValue": "BFGS",
                    "description": "Method for scipy.optimize.minimize (e.g., 'CG', 'BFGS')",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "adds fractional uncertainty to amplitude sigmas in quadrature",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "solution_interval",
                    "name": "solution_interval",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "solution interval in seconds; one gain is derived per interval.",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "scan_solutions",
                    "name": "scan_solutions",
                    "value": false,
                    "defaultValue": "False",
                    "description": "If True, determine one gain per site per scan",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, returns a Caltable instead of an Obsdata",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "processes",
                    "name": "processes",
                    "value": -1,
                    "defaultValue": "-1",
                    "description": "number of cores to use in multiprocessing",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, display the solution as it is calculated",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "msgtype",
                    "name": "msgtype",
                    "value": "bar",
                    "defaultValue": "bar",
                    "description": "type of progress message to be printed, default is 'bar'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -10,
            "text": "polgains_cal_scan",
            "description": "Polarimeteric-phase-gains-calibrate a dataset.\n    Numerically solves for polarimetric gains to align RCP and LCP feeds.\n    Uses all baselines to find the solution. Effectively assumes phase of Stokes V to be zero.\n    Because fits are local, it's not providing absolute phase calibration.\n\n   ",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "a922c4dd-dca3-4432-8962-27faa3d8fb68",
                    "IdText": "Obsdata",
                    "text": "Obsdata",
                    "event": false,
                    "type": "None",
                    "description": " the calibrated observation, if caltable==False"
                },
                {
                    "Id": "ba865a0a-d4d3-48cc-86af-108f1ca10a7e",
                    "IdText": "Caltable",
                    "text": "Caltable",
                    "event": false,
                    "type": "None",
                    "description": " the derived calibration table, if caltable==True"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.polgains_cal.polgains_cal_scan",
                    "defaultValue": "ehtim.calibrating.polgains_cal.polgains_cal_scan",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "scan",
                    "name": "scan",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Object.scan",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "reference",
                    "name": "reference",
                    "value": "AA",
                    "defaultValue": "AA",
                    "description": "station used as reference to break the degeneracy",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "[]",
                    "defaultValue": "[]",
                    "description": "list of sites to include in the polarimetric calibration.",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "phase",
                    "defaultValue": "phase",
                    "description": "chooses what to calibrate, 'phase' or 'both'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "minimizer_method",
                    "name": "minimizer_method",
                    "value": "BFGS",
                    "defaultValue": "BFGS",
                    "description": "Method for scipy.optimize.minimize (e.g., 'CG', 'BFGS')",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, display the solution as it is calculated",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "adds fractional uncertainty to amplitude sigmas in quadrature",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, returns a Caltable instead of an Obsdata",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "msgtype",
                    "name": "msgtype",
                    "value": "bar",
                    "defaultValue": "bar",
                    "description": "type of progress message to be printed, default is 'bar'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -14,
            "text": "self_cal",
            "description": "Self-calibrate a dataset to an image.\n\n   ",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "6526a3d9-53e7-481d-8229-e5b79fac9dbd",
                    "IdText": "Obsdata",
                    "text": "Obsdata",
                    "event": false,
                    "type": "None",
                    "description": " the calibrated observation, if caltable==False"
                },
                {
                    "Id": "89e19a95-d13e-4348-908b-1a4b0ed1c74f",
                    "IdText": "Caltable",
                    "text": "Caltable",
                    "event": false,
                    "type": "None",
                    "description": " the derived calibration table, if caltable==True"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.self_cal.self_cal",
                    "defaultValue": "ehtim.calibrating.self_cal.self_cal",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "obs",
                    "name": "obs",
                    "value": "",
                    "defaultValue": "",
                    "description": "The observation to be calibrated",
                    "readonly": false,
                    "type": "Object.obs",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "im",
                    "name": "im",
                    "value": "",
                    "defaultValue": "",
                    "description": "the image to be calibrated  to",
                    "readonly": false,
                    "type": "Object.im",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "[]",
                    "defaultValue": "[]",
                    "description": "list of sites to include in the self calibration.",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "both",
                    "defaultValue": "both",
                    "description": "chooses what to calibrate, 'amp', 'phase', or 'both'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pol",
                    "name": "pol",
                    "value": "I",
                    "defaultValue": "I",
                    "description": "which image polarization to self-calibrate visibilities to",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "minimizer_method",
                    "name": "minimizer_method",
                    "value": "BFGS",
                    "defaultValue": "BFGS",
                    "description": "Method for scipy.optimize.minimize (e.g., 'CG', 'BFGS')",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "adds fractional uncertainty to amplitude sigmas in quadrature",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "gain_tol",
                    "name": "gain_tol",
                    "value": 0.2,
                    "defaultValue": "0.2",
                    "description": "gains that exceed this value will be disfavored by the prior",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "solution_interval",
                    "name": "solution_interval",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "solution interval in seconds;",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "scan_solutions",
                    "name": "scan_solutions",
                    "value": false,
                    "defaultValue": "False",
                    "description": "If True, determine one gain per site per scan",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "ttype",
                    "name": "ttype",
                    "value": "direct",
                    "defaultValue": "direct",
                    "description": "if \"fast\" or \"nfft\" use FFT to produce visibilities. Else \"direct\" for DTFT",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "fft_pad_factor",
                    "name": "fft_pad_factor",
                    "value": 2,
                    "defaultValue": "2",
                    "description": "zero pad the image to fft_pad_factor * image size in FFT",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, returns a Caltable instead of an Obsdata",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "debias",
                    "name": "debias",
                    "value": true,
                    "defaultValue": "True",
                    "description": "If True, debias the amplitudes",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "apply_dterms",
                    "name": "apply_dterms",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, apply dterms (in obs.tarr) to clean data before calibrating",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "copy_closure_tables",
                    "name": "copy_closure_tables",
                    "value": true,
                    "defaultValue": "True",
                    "description": "",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "processes",
                    "name": "processes",
                    "value": -1,
                    "defaultValue": "-1",
                    "description": "number of cores to use in multiprocessing",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, display the solution as it is calculated",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "msgtype",
                    "name": "msgtype",
                    "value": "bar",
                    "defaultValue": "bar",
                    "description": "type of progress message to be printed, default is 'bar'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "key": -15,
            "text": "self_cal_scan",
            "description": "Self-calibrate a scan to an image.\n\n   ",
            "streaming": false,
            "precious": false,
            "git_url": "",
            "sha": "",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "3b0e8623-6617-42e3-a095-dff18b1a2706",
                    "IdText": "Obsdata",
                    "text": "Obsdata",
                    "event": false,
                    "type": "None",
                    "description": " the calibrated observation, if caltable==False"
                },
                {
                    "Id": "a4f8e608-7726-40f2-aeaa-ff1f7babc10f",
                    "IdText": "Caltable",
                    "text": "Caltable",
                    "event": false,
                    "type": "None",
                    "description": " the derived calibration table, if caltable==True"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "1",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "false",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "ehtim.calibrating.self_cal.self_cal_scan",
                    "defaultValue": "ehtim.calibrating.self_cal.self_cal_scan",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Input Parser",
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "Output Parser",
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "readonly": false,
                    "type": "Select",
                    "precious": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "positional": false
                },
                {
                    "text": "scan",
                    "name": "scan",
                    "value": "",
                    "defaultValue": "",
                    "description": "data array of type DTPOL_STOKES or DTPOL_CIRC",
                    "readonly": false,
                    "type": "Object.scan",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "im",
                    "name": "im",
                    "value": "",
                    "defaultValue": "",
                    "description": "the image to be calibrated  to",
                    "readonly": false,
                    "type": "Object.im",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "V_scan",
                    "name": "V_scan",
                    "value": "[]",
                    "defaultValue": "[]",
                    "description": "precomputed scan visibilities",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "sites",
                    "name": "sites",
                    "value": "[]",
                    "defaultValue": "[]",
                    "description": "list of sites to include in the self calibration.",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "polrep",
                    "name": "polrep",
                    "value": "stokes",
                    "defaultValue": "stokes",
                    "description": "'stokes' or 'circ' to specify the  polarization products in scan",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pol",
                    "name": "pol",
                    "value": "I",
                    "defaultValue": "I",
                    "description": "which image polarization to self-calibrate visibilities to",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "method",
                    "name": "method",
                    "value": "both",
                    "defaultValue": "both",
                    "description": "chooses what to calibrate, 'amp', 'phase', or 'both'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "minimizer_method",
                    "name": "minimizer_method",
                    "value": "BFGS",
                    "defaultValue": "BFGS",
                    "description": "Method for scipy.optimize.minimize",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "show_solution",
                    "name": "show_solution",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, display the solution as it is calculated",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "pad_amp",
                    "name": "pad_amp",
                    "value": 0,
                    "defaultValue": "0.0",
                    "description": "adds fractional uncertainty to amplitude sigmas in quadrature",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "gain_tol",
                    "name": "gain_tol",
                    "value": 0.2,
                    "defaultValue": "0.2",
                    "description": "gains that exceed this value will be disfavored by the prior",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "debias",
                    "name": "debias",
                    "value": true,
                    "defaultValue": "True",
                    "description": "If True, debias the amplitudes",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "caltable",
                    "name": "caltable",
                    "value": false,
                    "defaultValue": "False",
                    "description": "if True, returns a Caltable instead of an Obsdata",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        }
    ],
    "linkDataArray": []
}