{
    "modelData": {
        "fileType": "Graph",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE-graph-repo",
        "filePath": "SDP Pipelines/cont_img_YAN-970-sub-sub.graph",
        "eagleVersion": "v4.3.0",
        "eagleCommitHash": "8562e7655820654e447ed750dba8f53dea117481",
        "schemaVersion": "OJS",
        "readonly": true,
        "sha": "",
        "gitUrl": "",
        "lastModifiedName": "",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 0,
        "numLGNodes": 28
    },
    "nodeDataArray": [
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -60,
            "text": "create_low_test_skycomponents_from_gleam",
            "description": "Create sky components from the GLEAM survey\n\nStokes I is estimated from a cubic spline fit to the measured fluxes. The polarised flux is always zero.\n\nSee http://www.mwatelescope.org/science/gleam-survey The catalog is available from Vizier.\n\nVIII/100   GaLactic and Extragalactic All-sky MWA survey  (Hurley-Walker+, 2016)\n\nGaLactic and Extragalactic All-sky Murchison Wide Field Array (GLEAM) survey. I: A low-frequency extragalactic\ncatalogue. Hurley-Walker N., et al., Mon. Not. R. Astron. Soc., 464, 1146-1167 (2017), 2017MNRAS.464.1146H",
            "x": 697.0584045746984,
            "y": -447.8256309607313,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "6fb15dd1-add1-464c-a9fc-da3b8d01389b",
                    "IdText": "phasecentre",
                    "text": "phasecentre",
                    "event": false,
                    "type": "Complex",
                    "description": ""
                },
                {
                    "Id": "fccdd5a5-a3eb-46f9-bc01-95dd790501a2",
                    "IdText": "polarisation_frame",
                    "text": "polarisation_frame",
                    "event": false,
                    "type": "Complex",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "4b637a76-127e-4185-bdd8-e880ef9c78b9",
                    "IdText": "sc_ref",
                    "text": "sc_ref",
                    "event": false,
                    "type": "Complex",
                    "description": "Model as Components"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.simulation.testing_support.create_low_test_skycomponents_from_gleam",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "flux_limit",
                    "name": "flux_limit",
                    "value": 0.01,
                    "defaultValue": "",
                    "description": "Only write components brighter than this (Jy)",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "kind",
                    "name": "kind",
                    "value": "cubic",
                    "defaultValue": "",
                    "description": "Kind of interpolation (see scipy.interpolate.interp1d) Default: linear",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "radius",
                    "name": "radius",
                    "value": 0.03,
                    "defaultValue": "",
                    "description": "Radius of sources selected around phasecentre (default 1.0 rad)",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -61,
            "text": "sc",
            "description": "In-memory storage of intermediate data products",
            "x": 988.4493108321822,
            "y": -444.7102434161408,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "226fab0",
            "inputPorts": [
                {
                    "Id": "9dc02a00-1e9e-4d91-8f5f-b7fc1f61eb7a",
                    "IdText": "sc_ref",
                    "text": "sc_ref",
                    "event": false,
                    "type": "sc",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "80259270-474d-45d6-b3e0-7642d68db29e",
                    "IdText": "sc",
                    "text": "sc",
                    "event": false,
                    "type": "sc",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -31,
            "text": "dft_skycomponent_visibility",
            "description": "DFT to get the visibility from a Skycomponent, for BlockVisibility",
            "x": 1138.8191641506064,
            "y": -378.0589805119058,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "68c46c4a-1b4c-49f3-9db8-8bfbd461a163",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "Complex",
                    "description": "BlockVis "
                },
                {
                    "Id": "46b6390e-4cd7-4e39-827a-31b7ed1003de",
                    "IdText": "sc",
                    "text": "sc",
                    "event": false,
                    "type": "sc",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "9fd9a7ec-1cc7-4e60-bb79-9804b7082208",
                    "IdText": "modelvis",
                    "text": "modelvis",
                    "event": false,
                    "type": "modelvis",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": true,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.imaging.dft.dft_skycomponent_visibility",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "kwargs",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -63,
            "text": "create_blockvisibility_from_ms",
            "description": "Minimal MS to BlockVisibility converter\n\nThe MS format is much more general than the RASCIL BlockVisibility so we cut many corners.\nThis requires casacore to be installed. If not an exception ModuleNotFoundError is raised.\n\nCreates a list of BlockVisibility's, split by field and spectral window\n\nReading of a subset of channels is possible using either start_chan and end_chan or channnum. Using start_chan\nand end_chan is preferred since it only reads the channels required. Channum is more flexible and can be used to\nread a random list of channels.",
            "x": 654.1698499525706,
            "y": -252.79133722932903,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "54cf5e0d-1989-470f-97a8-7566e72afa6b",
                    "IdText": "start_chan",
                    "text": "start_chan",
                    "event": false,
                    "type": "String",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "a1a56047-81b2-4aab-8441-978d73679680",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "vis",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.visibility.base.create_blockvisibility_from_ms",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "msname",
                    "name": "msname",
                    "value": "$DLG_ROOT/testdata/1197634128-cal_avg32.ms",
                    "defaultValue": "",
                    "description": "File name of MS",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "channum",
                    "name": "channum",
                    "value": "[0]",
                    "defaultValue": "",
                    "description": "range of channels e.g. range(17,32), default is None meaning all",
                    "readonly": false,
                    "type": "Complex",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "end_chan",
                    "name": "end_chan",
                    "value": "None",
                    "defaultValue": "",
                    "description": "End channel to read",
                    "readonly": false,
                    "type": "Complex",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "ack",
                    "name": "ack",
                    "value": false,
                    "defaultValue": "",
                    "description": "Ask casacore to acknowledge each table operation",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "datacolumn",
                    "name": "datacolumn",
                    "value": "DATA",
                    "defaultValue": "",
                    "description": "MS data column to read DATA, CORRECTED_DATA, or MODEL_DATA",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "selected_dds",
                    "name": "selected_dds",
                    "value": "[0]",
                    "defaultValue": "",
                    "description": "Data descriptors to select",
                    "readonly": false,
                    "type": "Json",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "average_channels",
                    "name": "average_channels",
                    "value": false,
                    "defaultValue": "",
                    "description": "Average all channels read",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -4,
            "text": "polarisation_frame_from_names",
            "description": "An application that wraps a simple python function. The inputs of the application are treated as the arguments of the function. Conversely, the output of the function is treated as the output of the application. If the application has more than one output, the result of calling the function is treated as an iterable, with each individual object being written to its corresponding output.",
            "x": 367.45610650912664,
            "y": -86.07157479312451,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "0e3ef1e",
            "inputPorts": [],
            "outputPorts": [
                {
                    "Id": "71bcad54-dcd2-4a78-bf68-cbf04ef9161a",
                    "IdText": "polarisation_frame",
                    "text": "polarisation_frame",
                    "event": false,
                    "type": "Complex",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "Application class",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated execution time",
                    "readonly": true,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of cores used",
                    "readonly": true,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Input error rate (%)",
                    "name": "input_error_threshold",
                    "value": 0,
                    "defaultValue": "",
                    "description": "The allowed failure rate of the inputs (in percent), before this component goes to ERROR state and is not executed",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Number of tries",
                    "name": "n_tries",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Specifies the number of times the 'run' method will be executed before finally giving up",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.data_models.polarisation.polarisation_frame_from_names",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Function Code",
                    "name": "func_code",
                    "value": "",
                    "defaultValue": "",
                    "description": "Python function code, e.g. 'def function_name(args): return args'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Function Defaults",
                    "name": "func_defaults",
                    "value": "",
                    "defaultValue": "",
                    "description": "Mapping from argname to default value. Should match only the last part of the argnames list. Values are interpreted as Python code literals and that means string values need to be quoted.",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Function Arguments Mapping",
                    "name": "func_arg_mapping",
                    "value": "",
                    "defaultValue": "",
                    "description": "Mapping between argument name and input drop uids",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "names",
                    "name": "names",
                    "value": "linear",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "File",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -6,
            "text": "modelvis",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 1206.6651594782033,
            "y": -299.28480681637916,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "0e3ef1e",
            "inputPorts": [
                {
                    "Id": "2e39b455-8993-4b4d-90f1-484c57ce8d2e",
                    "IdText": "modelvis",
                    "text": "modelvis",
                    "event": false,
                    "type": "modelvis",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "cc538b7a-2b62-4314-8f61-0623681725e5",
                    "IdText": "modelvis",
                    "text": "modelvis",
                    "event": false,
                    "type": "modelvis",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Check file path exists",
                    "name": "check_filepath_exists",
                    "value": true,
                    "defaultValue": "",
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "File Path",
                    "name": "filepath",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Directory name",
                    "name": "dirname",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -13,
            "text": "solve_gaintable",
            "description": "Solve a gain table by fitting an observed visibility to a model visibility\n\nIf modelvis is None, a point source model is assumed.",
            "x": 1306.0871710150134,
            "y": -220.69564738870952,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "f1bc021f-c230-4d1f-baf8-7bdb6371da23",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "Complex",
                    "description": "BlockVis "
                },
                {
                    "Id": "a2bcbe28-dbc5-4302-ba9a-382a34b56e34",
                    "IdText": "modelvis",
                    "text": "modevis",
                    "event": false,
                    "type": "Complex",
                    "description": "Model as BlockVis "
                }
            ],
            "outputPorts": [
                {
                    "Id": "1ca9a714-7b1d-454b-89e0-21809f37c75b",
                    "IdText": "gt",
                    "text": "gt",
                    "event": false,
                    "type": "Complex",
                    "description": "Gain Table"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.calibration.solvers.solve_gaintable",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "true"
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "true"
                },
                {
                    "text": "phase_only",
                    "name": "phase_only",
                    "value": true,
                    "defaultValue": "",
                    "description": "Solve only for the phases (default=True)",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "niter",
                    "name": "niter",
                    "value": 200,
                    "defaultValue": "",
                    "description": "Number of iterations (default 30)",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "tol",
                    "name": "tol",
                    "value": 1e-06,
                    "defaultValue": "",
                    "description": "Iteration stops when the fractional change in the gain solution is below this tolerance",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "crosspol",
                    "name": "crosspol",
                    "value": false,
                    "defaultValue": "",
                    "description": "Do solutions including cross polarisations i.e. XY, YX or RL, LR",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "normalise_gains",
                    "name": "normalise_gains",
                    "value": true,
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "jones_type",
                    "name": "jones_type",
                    "value": "T",
                    "defaultValue": "",
                    "description": "Type of calibration matrix T or G or B",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "kwargs",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "File",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -11,
            "text": "gt",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 1419.0950252103742,
            "y": -220.59609352808283,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "0e3ef1e",
            "inputPorts": [
                {
                    "Id": "0658e057-f6c4-422c-8dbd-8b3be12e9275",
                    "IdText": "gt",
                    "text": "gt",
                    "event": false,
                    "type": "Complex",
                    "description": "Gain Table"
                }
            ],
            "outputPorts": [],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Check file path exists",
                    "name": "check_filepath_exists",
                    "value": true,
                    "defaultValue": "",
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "File Path",
                    "name": "filepath",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Directory name",
                    "name": "dirname",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "File",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -12,
            "text": "ObsVisData",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 773.6520254465858,
            "y": -249.9406906101852,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "0e3ef1e",
            "inputPorts": [
                {
                    "Id": "8fa2592d-cfb0-4bd6-87af-ad41aa9202e9",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "vis",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "6494bb91-b776-4c36-8e1f-c30595d29d84",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "Complex",
                    "description": "BlockVis "
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Check file path exists",
                    "name": "check_filepath_exists",
                    "value": true,
                    "defaultValue": "",
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "File Path",
                    "name": "filepath",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Directory name",
                    "name": "dirname",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "BashShellApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -14,
            "text": "first element",
            "description": "An application component able to run an arbitrary command within the Bash Shell",
            "x": 869.8964792711682,
            "y": -249.84547852452698,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "0e3ef1e",
            "inputPorts": [
                {
                    "Id": "6a1a6438-9f13-49e8-aee0-59c5ed9fae6a",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "vis",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "95abcba3-f1b1-4d04-95d5-135ba80b35f1",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "vis",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Command",
                    "name": "command",
                    "value": "export PYTHONPATH=$DLG_ROOT/code/lib/python3.8/site-packages && python -c \"import pickle, rascil;o = open('%i0','rb'); x = pickle.load(o); o.close(); f=open('%o0','wb'); pickle.dump(x[0],f)\"",
                    "defaultValue": "",
                    "description": "The command to be executed",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Input Redirection",
                    "name": "input_redirection",
                    "value": "",
                    "defaultValue": "",
                    "description": "The command line argument that specifies the input into this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Output Redirection",
                    "name": "output_redirection",
                    "value": "",
                    "defaultValue": "",
                    "description": "The command line argument that specifies the output from this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Command Line Arguments",
                    "name": "command_line_arguments",
                    "value": "",
                    "defaultValue": "",
                    "description": "Additional command line arguments to be added to the command line to be executed",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Param value separator",
                    "name": "paramValueSeparator",
                    "value": " ",
                    "defaultValue": "",
                    "description": "Separator character(s) between parameters on the command line",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Argument prefix",
                    "name": "argumentPrefix",
                    "value": "--",
                    "defaultValue": "",
                    "description": "Prefix to each keyed argument on the command line",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated execution time",
                    "readonly": true,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of cores used",
                    "readonly": true,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Input error rate (%)",
                    "name": "input_error_threshold",
                    "value": 0,
                    "defaultValue": "",
                    "description": "the allowed failure rate of the inputs (in percent), before this component goes to ERROR state and is not executed",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Number of tries",
                    "name": "n_tries",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Specifies the number of times the 'run' method will be executed before finally giving up",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "File",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -15,
            "text": "vis",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 979.4359956199617,
            "y": -248.29594841690988,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "0e3ef1e",
            "inputPorts": [
                {
                    "Id": "fd2c6c17-884d-4557-9376-08de402c36f3",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "vis",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "251f8926-4714-4b71-aac8-b3815a9f5615",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "vis",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Check file path exists",
                    "name": "check_filepath_exists",
                    "value": true,
                    "defaultValue": "",
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "File Path",
                    "name": "filepath",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Directory name",
                    "name": "dirname",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -21,
            "text": "grid_blockvisibility_to_griddata",
            "description": "Grid BlockVisibility onto a GridData",
            "x": 1110.3895101017476,
            "y": -70.34935184484635,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "7770f9bc-5d2b-460b-9382-a6e1977cd523",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "Complex",
                    "description": "BlockVis "
                },
                {
                    "Id": "737201a4-3c7c-472b-b73f-09bceb6662bf",
                    "IdText": "cf",
                    "text": "cf",
                    "event": false,
                    "type": "Complex",
                    "description": "Convolution Function"
                },
                {
                    "Id": "45f2694f-6984-47ae-9225-3c763eafb671",
                    "IdText": "griddata",
                    "text": "griddata",
                    "event": false,
                    "type": "griddata",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "1955dcf3-ea70-494f-9406-240f64297bef",
                    "IdText": "griddata",
                    "text": "griddata",
                    "event": false,
                    "type": "Complex",
                    "description": "Visibilities, Gridded"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": true,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.griddata.gridding.grid_blockvisibility_to_griddata",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "true"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -22,
            "text": "fft_griddata_to_image",
            "description": "FFT griddata after applying gcf\n\nIf imaginary is true the data array is complex",
            "x": 1334.4334066455472,
            "y": -28.271858613233665,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "19fe7867-7275-449f-80a9-c6545d26faab",
                    "IdText": "griddata",
                    "text": "griddata",
                    "event": false,
                    "type": "Complex",
                    "description": "Visibilities, Gridded"
                }
            ],
            "outputPorts": [
                {
                    "Id": "ef74c66f-4b17-4f1d-bc4c-2e5ffa874ade",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "Complex",
                    "description": "Image"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.griddata.gridding.fft_griddata_to_image",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "true"
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "true"
                },
                {
                    "text": "template",
                    "name": "template",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Unknown",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "gcf",
                    "name": "gcf",
                    "value": "None",
                    "defaultValue": "",
                    "description": "Grid correction image",
                    "readonly": false,
                    "type": "Unknown",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -27,
            "text": "griddata",
            "description": "In-memory storage of intermediate data products",
            "x": 1221.992764289204,
            "y": -16.33213098707783,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "226fab0",
            "inputPorts": [
                {
                    "Id": "3cd55223-dcea-480f-aa91-67dd93d1828c",
                    "IdText": "griddata",
                    "text": "griddata",
                    "event": false,
                    "type": "griddata",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "4ec7581f-17bb-411c-88fc-79f003f6ca19",
                    "IdText": "griddata",
                    "text": "griddata",
                    "event": false,
                    "type": "griddata",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -28,
            "text": "im",
            "description": "In-memory storage of intermediate data products",
            "x": 1445.98674046867,
            "y": -16.6114160133704,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "226fab0",
            "inputPorts": [
                {
                    "Id": "15f466bf-8bcc-4422-977e-52793c578f11",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "im",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "3019ba7b-87ee-4234-b904-eabb88e456bb",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "im",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -29,
            "text": "find_skycomponents",
            "description": "Find gaussian components in Image above a certain threshold as Skycomponent",
            "x": 1562.0112317878595,
            "y": -19.76993104354677,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "724b5aec-d081-467c-92c7-93e31965a247",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "im",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "8ac988bd-4af5-441f-8dd2-d28a0f91bd60",
                    "IdText": "sc",
                    "text": "sc",
                    "event": false,
                    "type": "sc",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": true,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.skycomponent.operations.find_skycomponents",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": "true"
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "true"
                },
                {
                    "text": "fwhm",
                    "name": "fwhm",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Full width half maximum of gaussian in pixels",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "threshold",
                    "name": "threshold",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Threshold for component detection. Default: 1 Jy.",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "npixels",
                    "name": "npixels",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Number of connected pixels required",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -30,
            "text": "sc",
            "description": "In-memory storage of intermediate data products",
            "x": 1675.904848263125,
            "y": -21.34030964307656,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "226fab0",
            "inputPorts": [
                {
                    "Id": "cc739dd9-47d3-4d39-b2d4-ee2e5a05f0ca",
                    "IdText": "sc",
                    "text": "sc",
                    "event": false,
                    "type": "sc",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "a82d4417-e5a8-4fd2-9ce9-b8b29490bce8",
                    "IdText": "sc",
                    "text": "sc",
                    "event": false,
                    "type": "sc",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -32,
            "text": "cg",
            "description": "In-memory storage of intermediate data products",
            "x": 1737.7611758304006,
            "y": 66.1262971502278,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "226fab0",
            "inputPorts": [
                {
                    "Id": "7cc2693e-0b94-4615-a222-4b5315357382",
                    "IdText": "cg",
                    "text": "cg",
                    "event": false,
                    "type": "cg",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "3f2a20e5-dd84-43d8-90f5-f091c1969d52",
                    "IdText": "cg",
                    "text": "cg",
                    "event": false,
                    "type": "cg",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": "false"
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -37,
            "text": "create_convolutionfunction_from_image",
            "description": "Create a convolution function from an image\n\nThe griddata has axes [chan, pol, z, dy, dx, y, x] where z, y, x are spatial axes in either sky or Fourier plane. The\norder in the WCS is reversed so the grid_WCS describes UU, VV, WW, STOKES, FREQ axes\n\nThe axes UU,VV have the same physical stride as the image, The axes DUU, DVV are subsampled.\n\nConvolution function holds the original sky plane projection in the projection_wcs.",
            "x": 1548.844600811341,
            "y": 67.05262569581825,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "841ba111-dea2-44fb-8e4d-ec3c45f7d189",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "Complex",
                    "description": "Image parameters"
                },
                {
                    "Id": "96c8024b-222b-489d-8193-50871f29b3f2",
                    "IdText": "polarisation_frame",
                    "text": "polarisation_frame",
                    "event": false,
                    "type": "polarisation_frame",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "f572a630-ed19-4bd5-98d7-4c50e1d9b982",
                    "IdText": "cg",
                    "text": "cg",
                    "event": false,
                    "type": "cg",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.griddata.convolution_functions.create_convolutionfunction_from_image",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "nw",
                    "name": "nw",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of z axes, usually z is W",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "wstep",
                    "name": "wstep",
                    "value": 1000000000000000,
                    "defaultValue": "",
                    "description": "Step in z, usually z is W",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "wtype",
                    "name": "wtype",
                    "value": "WW",
                    "defaultValue": "",
                    "description": "Type of z, usually 'WW'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "oversampling",
                    "name": "oversampling",
                    "value": 8,
                    "defaultValue": "",
                    "description": "Oversampling (size of dy, dx axes)",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "support",
                    "name": "support",
                    "value": 16,
                    "defaultValue": "",
                    "description": "Support of final convolution function (size of y, x axes)",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -18,
            "text": "create_griddata_from_image",
            "description": "Create a GridData from an image",
            "x": 822.9213233962979,
            "y": -77.80467586997857,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "7b5cefd3-399a-47af-8e85-74aa973cc788",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "Complex",
                    "description": "Image"
                },
                {
                    "Id": "7d5496f8-e269-473c-bea5-e6548b11f91e",
                    "IdText": "polarisation_frame",
                    "text": "polarisation_frame",
                    "event": false,
                    "type": "polarisation_frame",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "2a02298b-0b8d-47cb-b85a-0c5fdff39712",
                    "IdText": "griddata",
                    "text": "output",
                    "event": false,
                    "type": "None",
                    "description": "GridData"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.griddata.operations.create_griddata_from_image",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "ft_types",
                    "name": "ft_types",
                    "value": "None",
                    "defaultValue": "",
                    "description": "",
                    "readonly": false,
                    "type": "Unknown",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -19,
            "text": "griddata",
            "description": "In-memory storage of intermediate data products",
            "x": 959.7063942143702,
            "y": -74.47486763599218,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "a8844e1",
            "inputPorts": [
                {
                    "Id": "e8f4bd58-e856-4091-82d9-1a3d5d059f36",
                    "IdText": "griddata",
                    "text": "griddata",
                    "event": false,
                    "type": "griddata",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "cee397c3-1bcc-4885-85f7-3235f2c6dcd4",
                    "IdText": "griddata",
                    "text": "griddata",
                    "event": false,
                    "type": "griddata",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -16,
            "text": "template image",
            "description": "In-memory storage of intermediate data products",
            "x": 666.6844268419129,
            "y": -82.42436651872367,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "a8844e1",
            "inputPorts": [
                {
                    "Id": "6ce73fd9-d7a6-4662-b5b2-ae8df126540c",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "im",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "006798c0-4b7c-4075-8918-d550fb4865f4",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "im",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -20,
            "text": "create_convolutionfunction_from_image",
            "description": "Create a convolution function from an image\n\nThe griddata has axes [chan, pol, z, dy, dx, y, x] where z, y, x are spatial axes in either sky or Fourier plane. The\norder in the WCS is reversed so the grid_WCS describes UU, VV, WW, STOKES, FREQ axes\n\nThe axes UU,VV have the same physical stride as the image, The axes DUU, DVV are subsampled.\n\nConvolution function holds the original sky plane projection in the projection_wcs.",
            "x": 754.3907241643747,
            "y": -0.29413605360288386,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "25c00e81-a694-4d7d-a82b-7e20371c7807",
                    "IdText": "im",
                    "text": "output",
                    "event": false,
                    "type": "Image",
                    "description": "Image"
                },
                {
                    "Id": "f4ad698e-4513-46fa-aa95-7f46ef680ad2",
                    "IdText": "polarisation_frame",
                    "text": "polarisation_frame",
                    "event": false,
                    "type": "Complex",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "914137c9-82ef-48a9-905e-fe0a9660bf71",
                    "IdText": "cf",
                    "text": "cf",
                    "event": false,
                    "type": "Complex",
                    "description": "Convolution Function"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.griddata.convolution_functions.create_convolutionfunction_from_image",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "nw",
                    "name": "nw",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of z axes, usually z is W",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "wstep",
                    "name": "wstep",
                    "value": 1000000000000000,
                    "defaultValue": "",
                    "description": "Step in z, usually z is W",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "wtype",
                    "name": "wtype",
                    "value": "WW",
                    "defaultValue": "",
                    "description": "Type of z, usually 'WW'",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "oversampling",
                    "name": "oversampling",
                    "value": 8,
                    "defaultValue": "",
                    "description": "Oversampling (size of dy, dx axes)",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "support",
                    "name": "support",
                    "value": 16,
                    "defaultValue": "",
                    "description": "Support of final convolution function (size of y, x axes)",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -23,
            "text": "cf",
            "description": "In-memory storage of intermediate data products",
            "x": 950.4615365954077,
            "y": -1.9031293557696713,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "a8844e1",
            "inputPorts": [
                {
                    "Id": "0f9c65ab-c356-48db-888f-db9b9af5a9b7",
                    "IdText": "cf",
                    "text": "cf",
                    "event": false,
                    "type": "cf",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "99eb384e-aff2-43c7-b9dd-69689b898442",
                    "IdText": "cf",
                    "text": "cf",
                    "event": false,
                    "type": "cf",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "PythonApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -1,
            "text": "create_image_from_visibility",
            "description": "Make an empty image from params and BlockVisibility\n\nThis makes an empty, template image consistent with the visibility, allowing optional overriding of select\nparameters. This is a convenience function and does not transform the visibilities.",
            "x": 836.518481023259,
            "y": -172.48888050479673,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": true,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "",
            "sha": "1.0",
            "inputPorts": [
                {
                    "Id": "1a90ea25-9666-4230-868b-7fc99318a747",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "vis",
                    "description": ""
                },
                {
                    "Id": "64322303-6b84-46da-b893-372fa6f2e3b2",
                    "IdText": "polarisation_frame",
                    "text": "polarisation_frame",
                    "event": false,
                    "type": "Complex",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "39450923-6aa8-4ba0-8de3-eb42f9aa1048",
                    "IdText": "im",
                    "text": "im",
                    "event": false,
                    "type": "Image",
                    "description": "image  See also     :py:func:`rascil.processing_components.image.operations.create_image`"
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Application Class",
                    "name": "appclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "",
                    "description": "The python class that implements this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of CPUs used for this application.",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [
                {
                    "text": "Function Name",
                    "name": "func_name",
                    "value": "rascil.processing_components.imaging.base.create_image_from_visibility",
                    "defaultValue": "",
                    "description": "Python function name",
                    "readonly": true,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": true
                },
                {
                    "text": "Pickle",
                    "name": "pickle",
                    "value": true,
                    "defaultValue": "",
                    "description": "Whether the python arguments are pickled.",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": true
                }
            ],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "Memory",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -5,
            "text": "polarisation_frame",
            "description": "In-memory storage of intermediate data products",
            "x": 487.2572555419125,
            "y": 35.55139712307209,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": false,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "a8844e1",
            "inputPorts": [
                {
                    "Id": "17bbcd5c-a483-48ee-9f76-1b8a806365e8",
                    "IdText": "polarisation_frame",
                    "text": "polarisation_frame",
                    "event": false,
                    "type": "polarisation_frame",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "790b7965-2e14-4da4-84ad-502ecd7321e1",
                    "IdText": "polarisation_frame",
                    "text": "polarisation_frame",
                    "event": false,
                    "type": "polarisation_frame",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "BashShellApp",
            "isGroup": false,
            "color": "#0059a5",
            "drawOrderHint": 0,
            "key": -7,
            "text": "get_phasecentre",
            "description": "An application component able to run an arbitrary command within the Bash Shell",
            "x": 876.8964792711681,
            "y": -344.845478524527,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": true,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "0e3ef1e",
            "inputPorts": [
                {
                    "Id": "1db87bf2-6a9b-49d1-aa38-ccc78ebec567",
                    "IdText": "vis",
                    "text": "vis",
                    "event": false,
                    "type": "Complex",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "3bbf2452-ea04-4017-8dca-c4e4ae49da70",
                    "IdText": "phasecentre",
                    "text": "phasecentra",
                    "event": false,
                    "type": "SkyCoord",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Command",
                    "name": "command",
                    "value": "export PYTHONPATH=$DLG_ROOT/code/lib/python3.8/site-packages && python -c \"import pickle, rascil;o = open('%i0','rb'); x = pickle.load(o); o.close(); f=open('%o0','wb'); pickle.dump(x.phasecentre,f)\"",
                    "defaultValue": "",
                    "description": "The command to be executed",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Input Redirection",
                    "name": "input_redirection",
                    "value": "",
                    "defaultValue": "",
                    "description": "The command line argument that specifies the input into this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Output Redirection",
                    "name": "output_redirection",
                    "value": "",
                    "defaultValue": "",
                    "description": "The command line argument that specifies the output from this application",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Command Line Arguments",
                    "name": "command_line_arguments",
                    "value": "",
                    "defaultValue": "",
                    "description": "Additional command line arguments to be added to the command line to be executed",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Param value separator",
                    "name": "paramValueSeparator",
                    "value": " ",
                    "defaultValue": "",
                    "description": "Separator character(s) between parameters on the command line",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Argument prefix",
                    "name": "argumentPrefix",
                    "value": "--",
                    "defaultValue": "",
                    "description": "Prefix to each keyed argument on the command line",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Execution Time",
                    "name": "execution_time",
                    "value": 5,
                    "defaultValue": "",
                    "description": "Estimated execution time",
                    "readonly": true,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "No. of CPUs",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Number of cores used",
                    "readonly": true,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group start",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": "",
                    "description": "Is this node the start of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Input error rate (%)",
                    "name": "input_error_threshold",
                    "value": 0,
                    "defaultValue": "",
                    "description": "the allowed failure rate of the inputs (in percent), before this component goes to ERROR state and is not executed",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Number of tries",
                    "name": "n_tries",
                    "value": 1,
                    "defaultValue": "",
                    "description": "Specifies the number of times the 'run' method will be executed before finally giving up",
                    "readonly": false,
                    "type": "Integer",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        },
        {
            "category": "File",
            "isGroup": false,
            "color": "#2c2c2c",
            "drawOrderHint": 0,
            "key": -2,
            "text": "phasecentre",
            "description": "A standard file on a filesystem mounted to the deployment machine",
            "x": 744.4774419229333,
            "y": -348.83555474262914,
            "width": 200,
            "height": 72,
            "collapsed": true,
            "flipPorts": true,
            "streaming": false,
            "precious": false,
            "subject": null,
            "expanded": false,
            "git_url": "https://github.com/ICRAR/daliuge.git",
            "sha": "a8844e1",
            "inputPorts": [
                {
                    "Id": "7e88262d-69f4-41ab-8faa-8851ac393df8",
                    "IdText": "phasecentre",
                    "text": "phasecentre",
                    "event": false,
                    "type": "phasecentre",
                    "description": ""
                }
            ],
            "outputPorts": [
                {
                    "Id": "5f1a2211-d150-43b0-8a78-1468994ad3ac",
                    "IdText": "phasecentre",
                    "text": "phasecentre",
                    "event": false,
                    "type": "phasecentre",
                    "description": ""
                }
            ],
            "inputLocalPorts": [],
            "outputLocalPorts": [],
            "fields": [
                {
                    "text": "Data volume",
                    "name": "data_volume",
                    "value": 5,
                    "defaultValue": "5",
                    "description": "Estimated size of the data contained in this node",
                    "readonly": false,
                    "type": "Float",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Group end",
                    "name": "group_end",
                    "value": false,
                    "defaultValue": "False",
                    "description": "Is this node the end of a group?",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Check file path exists",
                    "name": "check_filepath_exists",
                    "value": true,
                    "defaultValue": "True",
                    "description": "Perform a check to make sure the file path exists before proceeding with the application",
                    "readonly": false,
                    "type": "Boolean",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "File Path",
                    "name": "filepath",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                },
                {
                    "text": "Directory name",
                    "name": "dirname",
                    "value": "",
                    "defaultValue": "",
                    "description": "Path to the file for this node",
                    "readonly": false,
                    "type": "String",
                    "precious": false,
                    "options": [],
                    "positional": false
                }
            ],
            "applicationArgs": [],
            "inputAppFields": [],
            "outputAppFields": [],
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "inputApplicationKey": null,
            "inputApplicationDescription": "",
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "outputApplicationKey": null,
            "outputApplicationDescription": ""
        }
    ],
    "linkDataArray": [
        {
            "from": -60,
            "fromPort": "4b637a76-127e-4185-bdd8-e880ef9c78b9",
            "to": -61,
            "toPort": "9dc02a00-1e9e-4d91-8f5f-b7fc1f61eb7a",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -61,
            "fromPort": "80259270-474d-45d6-b3e0-7642d68db29e",
            "to": -31,
            "toPort": "46b6390e-4cd7-4e39-827a-31b7ed1003de",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -31,
            "fromPort": "9fd9a7ec-1cc7-4e60-bb79-9804b7082208",
            "to": -6,
            "toPort": "2e39b455-8993-4b4d-90f1-484c57ce8d2e",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -13,
            "fromPort": "1ca9a714-7b1d-454b-89e0-21809f37c75b",
            "to": -11,
            "toPort": "0658e057-f6c4-422c-8dbd-8b3be12e9275",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -63,
            "fromPort": "a1a56047-81b2-4aab-8441-978d73679680",
            "to": -12,
            "toPort": "8fa2592d-cfb0-4bd6-87af-ad41aa9202e9",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -14,
            "fromPort": "95abcba3-f1b1-4d04-95d5-135ba80b35f1",
            "to": -15,
            "toPort": "fd2c6c17-884d-4557-9376-08de402c36f3",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -15,
            "fromPort": "251f8926-4714-4b71-aac8-b3815a9f5615",
            "to": -13,
            "toPort": "f1bc021f-c230-4d1f-baf8-7bdb6371da23",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -12,
            "fromPort": "6494bb91-b776-4c36-8e1f-c30595d29d84",
            "to": -14,
            "toPort": "6a1a6438-9f13-49e8-aee0-59c5ed9fae6a",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -21,
            "fromPort": "1955dcf3-ea70-494f-9406-240f64297bef",
            "to": -27,
            "toPort": "3cd55223-dcea-480f-aa91-67dd93d1828c",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -27,
            "fromPort": "4ec7581f-17bb-411c-88fc-79f003f6ca19",
            "to": -22,
            "toPort": "19fe7867-7275-449f-80a9-c6545d26faab",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -29,
            "fromPort": "8ac988bd-4af5-441f-8dd2-d28a0f91bd60",
            "to": -30,
            "toPort": "cc739dd9-47d3-4d39-b2d4-ee2e5a05f0ca",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -22,
            "fromPort": "ef74c66f-4b17-4f1d-bc4c-2e5ffa874ade",
            "to": -28,
            "toPort": "15f466bf-8bcc-4422-977e-52793c578f11",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -28,
            "fromPort": "3019ba7b-87ee-4234-b904-eabb88e456bb",
            "to": -29,
            "toPort": "724b5aec-d081-467c-92c7-93e31965a247",
            "loop_aware": "1",
            "closesLoop": false
        },
        {
            "from": -37,
            "fromPort": "f572a630-ed19-4bd5-98d7-4c50e1d9b982",
            "to": -32,
            "toPort": "7cc2693e-0b94-4615-a222-4b5315357382",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -28,
            "fromPort": "3019ba7b-87ee-4234-b904-eabb88e456bb",
            "to": -37,
            "toPort": "841ba111-dea2-44fb-8e4d-ec3c45f7d189",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -15,
            "fromPort": "251f8926-4714-4b71-aac8-b3815a9f5615",
            "to": -21,
            "toPort": "7770f9bc-5d2b-460b-9382-a6e1977cd523",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -15,
            "fromPort": "251f8926-4714-4b71-aac8-b3815a9f5615",
            "to": -31,
            "toPort": "68c46c4a-1b4c-49f3-9db8-8bfbd461a163",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -6,
            "fromPort": "cc538b7a-2b62-4314-8f61-0623681725e5",
            "to": -13,
            "toPort": "a2bcbe28-dbc5-4302-ba9a-382a34b56e34",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -18,
            "fromPort": "2a02298b-0b8d-47cb-b85a-0c5fdff39712",
            "to": -19,
            "toPort": "e8f4bd58-e856-4091-82d9-1a3d5d059f36",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -19,
            "fromPort": "cee397c3-1bcc-4885-85f7-3235f2c6dcd4",
            "to": -21,
            "toPort": "45f2694f-6984-47ae-9225-3c763eafb671",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -16,
            "fromPort": "006798c0-4b7c-4075-8918-d550fb4865f4",
            "to": -18,
            "toPort": "7b5cefd3-399a-47af-8e85-74aa973cc788",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -16,
            "fromPort": "006798c0-4b7c-4075-8918-d550fb4865f4",
            "to": -20,
            "toPort": "25c00e81-a694-4d7d-a82b-7e20371c7807",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -20,
            "fromPort": "914137c9-82ef-48a9-905e-fe0a9660bf71",
            "to": -23,
            "toPort": "0f9c65ab-c356-48db-888f-db9b9af5a9b7",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -23,
            "fromPort": "99eb384e-aff2-43c7-b9dd-69689b898442",
            "to": -21,
            "toPort": "737201a4-3c7c-472b-b73f-09bceb6662bf",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -15,
            "fromPort": "251f8926-4714-4b71-aac8-b3815a9f5615",
            "to": -1,
            "toPort": "1a90ea25-9666-4230-868b-7fc99318a747",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -1,
            "fromPort": "39450923-6aa8-4ba0-8de3-eb42f9aa1048",
            "to": -16,
            "toPort": "6ce73fd9-d7a6-4662-b5b2-ae8df126540c",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -4,
            "fromPort": "71bcad54-dcd2-4a78-bf68-cbf04ef9161a",
            "to": -5,
            "toPort": "17bbcd5c-a483-48ee-9f76-1b8a806365e8",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -5,
            "fromPort": "790b7965-2e14-4da4-84ad-502ecd7321e1",
            "to": -60,
            "toPort": "fccdd5a5-a3eb-46f9-bc01-95dd790501a2",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -5,
            "fromPort": "790b7965-2e14-4da4-84ad-502ecd7321e1",
            "to": -20,
            "toPort": "f4ad698e-4513-46fa-aa95-7f46ef680ad2",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -5,
            "fromPort": "790b7965-2e14-4da4-84ad-502ecd7321e1",
            "to": -37,
            "toPort": "96c8024b-222b-489d-8193-50871f29b3f2",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -15,
            "fromPort": "251f8926-4714-4b71-aac8-b3815a9f5615",
            "to": -31,
            "toPort": "68c46c4a-1b4c-49f3-9db8-8bfbd461a163",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -15,
            "fromPort": "251f8926-4714-4b71-aac8-b3815a9f5615",
            "to": -7,
            "toPort": "1db87bf2-6a9b-49d1-aa38-ccc78ebec567",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -7,
            "fromPort": "3bbf2452-ea04-4017-8dca-c4e4ae49da70",
            "to": -2,
            "toPort": "7e88262d-69f4-41ab-8faa-8851ac393df8",
            "loop_aware": "0",
            "closesLoop": false
        },
        {
            "from": -2,
            "fromPort": "5f1a2211-d150-43b0-8a78-1468994ad3ac",
            "to": -60,
            "toPort": "6fb15dd1-add1-464c-a9fc-da3b8d01389b",
            "loop_aware": "0",
            "closesLoop": false
        }
    ]
}