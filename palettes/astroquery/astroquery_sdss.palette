{
    "modelData": {
        "filePath": "astroquery_sdss.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "SDSS Spectra/Image/SpectralTemplate Archive Query Tool\n------------------------------------------------------",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.2",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "astroquery",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "88bbf9cead5d181a184c55c51f9554f0980a5d81df518bab80958b6b0a9316f7",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755099102.673481,
        "numLGNodes": 19
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "y_u67lzi",
            "name": "sdss.SDSS",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "03776dada3264c215b5997a49d8dfd54abadaedd055aca64075f4c324d5f531c",
            "fields": [
                {
                    "id": "yt7usbtr",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sjxiw449",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8m6yqh8t",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.SDSS",
                    "defaultValue": "astroquery.sdss.SDSS",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jhaupgmj",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o8pdeolw",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "lgceni4e",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d_70f13s",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss",
                    "defaultValue": "astroquery.sdss",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3347fnz2",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xk0r2hgx",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "d0dttw83",
            "name": "SDSSClass.get_images",
            "description": "Download an image from SDSS.\n    \n    Querying SDSS for images will return the entire plate. For subsequent\n    analyses of individual objects\n    \n    The query can be made with one the following groups of parameters\n    (whichever comes first is used):\n    \n    - ``matches`` (result of a call to `query_region`);\n    - ``coordinates``, ``radius``;\n    - ``run``, ``rerun``, ``camcol``, ``field``.\n    \n    See below for examples.\n    \n    Parameters\n    ----------\n    coordinates : str or `astropy.coordinates` object\n        The target around which to search. It may be specified as a string\n        in which case it is resolved using online services or as the\n        appropriate `astropy.coordinates` object. ICRS coordinates may also\n        be entered as strings as specified in the `astropy.coordinates`\n        module.\n    radius : str or `~astropy.units.Quantity` object, optional\n        The string must be parsable by `~astropy.coordinates.Angle`. The\n        appropriate `~astropy.units.Quantity` object from\n        `astropy.units` may also be used. Defaults to 2 arcsec.\n    matches : `~astropy.table.Table`\n        Result of `query_region`.\n    run : integer, optional\n        Length of a strip observed in a single continuous image observing\n        scan.\n    rerun : integer, optional\n        Reprocessing of an imaging run. Defaults to 301 which is the most\n        recent rerun.\n    camcol : integer, optional\n        Output of one camera column of CCDs.\n    field : integer, optional\n        Part of a camcol of size 2048 by 1489 pixels.\n    band : str, list\n        Could be individual band, or list of bands.\n        Options: ``'u'``, ``'g'``, ``'r'``, ``'i'``, or ``'z'``.\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    cache : bool\n        Cache the images using astropy's caching system\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    Using results from a call to `query_region`:\n    \n    >>> from astropy import coordinates as coords\n    >>> from astroquery.sdss import SDSS\n    >>> co = coords.SkyCoord('0h8m05.63s +14d50m23.3s')\n    >>> result = SDSS.query_region(co)\n    >>> imgs = SDSS.get_images(matches=result)\n    \n    Using coordinates directly:\n    \n    >>> imgs = SDSS.get_images(co)\n    \n    Fetch the images from all runs with camcol 3 and field 164:\n    \n    >>> imgs = SDSS.get_images(camcol=3, field=164)\n    \n    Fetch only images from run 1904, camcol 3 and field 164:\n    \n    >>> imgs = SDSS.get_images(run=1904, camcol=3, field=164)\n    \n    \n    Returns\n    -------\n    list : List of `~astropy.io.fits.HDUList` objects.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c5b81ec14a88d3ce179df717049c537df7b85f26135c14129a843550bb9c8036",
            "fields": [
                {
                    "id": "a5u7f5hi",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.get_images object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jnag39n7",
                    "encoding": "",
                    "name": "coordinates",
                    "value": "",
                    "defaultValue": "",
                    "description": "The target around which to search. It may be specified as a string\nin which case it is resolved using online services or as the\nappropriate `astropy.coordinates` object. ICRS coordinates may also\nbe entered as strings as specified in the `astropy.coordinates`\nmodule.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "66vu2s90",
                    "encoding": "",
                    "name": "radius",
                    "value": "<Quantity 2. arcsec>",
                    "defaultValue": "<Quantity 2. arcsec>",
                    "description": "The string must be parsable by `~astropy.coordinates.Angle`. The\nappropriate `~astropy.units.Quantity` object from\n`astropy.units` may also be used. Defaults to 2 arcsec.",
                    "type": "astropy.units.quantity.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7k8cyp73",
                    "encoding": "",
                    "name": "matches",
                    "value": "",
                    "defaultValue": "",
                    "description": "Result of `query_region`.",
                    "type": "astropy.table.Table",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4l_1lszy",
                    "encoding": "",
                    "name": "run",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of a strip observed in a single continuous image observing\nscan.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c67paen1",
                    "encoding": "",
                    "name": "rerun",
                    "value": 301,
                    "defaultValue": 301,
                    "description": "Reprocessing of an imaging run. Defaults to 301 which is the most\nrecent rerun.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rcrtm8sa",
                    "encoding": "",
                    "name": "camcol",
                    "value": "",
                    "defaultValue": "",
                    "description": "Output of one camera column of CCDs.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5ldulj5s",
                    "encoding": "",
                    "name": "field",
                    "value": "",
                    "defaultValue": "",
                    "description": "Part of a camcol of size 2048 by 1489 pixels.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8ueaqqbg",
                    "encoding": "",
                    "name": "band",
                    "value": "g",
                    "defaultValue": "g",
                    "description": "Could be individual band, or list of bands.\nOptions: ``'u'``, ``'g'``, ``'r'``, ``'i'``, or ``'z'``.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dwhoh6qe",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jvjauqvv",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "Cache the images using astropy's caching system",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ntj344ch",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, this will return the data the query would have sent out,\nbut does not actually do the query.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7wu0m3w9",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mfk45lfy",
                    "encoding": "",
                    "name": "show_progress",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "llknkxn8",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.get_images",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.get_images",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5qecpjuo",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ip8bbw1d",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "86il_j2z",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5gueaexr",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ha_dnam7",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nbkwmuq2",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "ufrjmcs4",
            "name": "SDSSClass.get_images_async",
            "description": "Download an image from SDSS.\n    \n    Querying SDSS for images will return the entire plate. For subsequent\n    analyses of individual objects\n    \n    The query can be made with one the following groups of parameters\n    (whichever comes first is used):\n    \n    - ``matches`` (result of a call to `query_region`);\n    - ``coordinates``, ``radius``;\n    - ``run``, ``rerun``, ``camcol``, ``field``.\n    \n    See below for examples.\n    \n    Parameters\n    ----------\n    coordinates : str or `astropy.coordinates` object\n        The target around which to search. It may be specified as a string\n        in which case it is resolved using online services or as the\n        appropriate `astropy.coordinates` object. ICRS coordinates may also\n        be entered as strings as specified in the `astropy.coordinates`\n        module.\n    radius : str or `~astropy.units.Quantity` object, optional\n        The string must be parsable by `~astropy.coordinates.Angle`. The\n        appropriate `~astropy.units.Quantity` object from\n        `astropy.units` may also be used. Defaults to 2 arcsec.\n    matches : `~astropy.table.Table`\n        Result of `query_region`.\n    run : integer, optional\n        Length of a strip observed in a single continuous image observing\n        scan.\n    rerun : integer, optional\n        Reprocessing of an imaging run. Defaults to 301 which is the most\n        recent rerun.\n    camcol : integer, optional\n        Output of one camera column of CCDs.\n    field : integer, optional\n        Part of a camcol of size 2048 by 1489 pixels.\n    band : str, list\n        Could be individual band, or list of bands.\n        Options: ``'u'``, ``'g'``, ``'r'``, ``'i'``, or ``'z'``.\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    cache : bool\n        Cache the images using astropy's caching system\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Returns\n    -------\n    list : List of `~astropy.io.fits.HDUList` objects.\n    \n    Examples\n    --------\n    Using results from a call to `query_region`:\n    \n    >>> from astropy import coordinates as coords\n    >>> from astroquery.sdss import SDSS\n    >>> co = coords.SkyCoord('0h8m05.63s +14d50m23.3s')\n    >>> result = SDSS.query_region(co)\n    >>> imgs = SDSS.get_images(matches=result)\n    \n    Using coordinates directly:\n    \n    >>> imgs = SDSS.get_images(co)\n    \n    Fetch the images from all runs with camcol 3 and field 164:\n    \n    >>> imgs = SDSS.get_images(camcol=3, field=164)\n    \n    Fetch only images from run 1904, camcol 3 and field 164:\n    \n    >>> imgs = SDSS.get_images(run=1904, camcol=3, field=164)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cece0f7e90f65adfa5274a2807c7b87555ffa5e774a4510692b05eb3b69f5982",
            "fields": [
                {
                    "id": "44ockno4",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.get_images_async object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v0j07juu",
                    "encoding": "",
                    "name": "coordinates",
                    "value": "",
                    "defaultValue": "",
                    "description": "The target around which to search. It may be specified as a string\nin which case it is resolved using online services or as the\nappropriate `astropy.coordinates` object. ICRS coordinates may also\nbe entered as strings as specified in the `astropy.coordinates`\nmodule.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0zj2cbdk",
                    "encoding": "",
                    "name": "radius",
                    "value": "<Quantity 2. arcsec>",
                    "defaultValue": "<Quantity 2. arcsec>",
                    "description": "The string must be parsable by `~astropy.coordinates.Angle`. The\nappropriate `~astropy.units.Quantity` object from\n`astropy.units` may also be used. Defaults to 2 arcsec.",
                    "type": "astropy.units.quantity.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3t57tja3",
                    "encoding": "",
                    "name": "matches",
                    "value": "",
                    "defaultValue": "",
                    "description": "Result of `query_region`.",
                    "type": "astropy.table.Table",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ut3b8pqb",
                    "encoding": "",
                    "name": "run",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of a strip observed in a single continuous image observing\nscan.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dnbrr7tq",
                    "encoding": "",
                    "name": "rerun",
                    "value": 301,
                    "defaultValue": 301,
                    "description": "Reprocessing of an imaging run. Defaults to 301 which is the most\nrecent rerun.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_932_b_j",
                    "encoding": "",
                    "name": "camcol",
                    "value": "",
                    "defaultValue": "",
                    "description": "Output of one camera column of CCDs.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ef0ruic4",
                    "encoding": "",
                    "name": "field",
                    "value": "",
                    "defaultValue": "",
                    "description": "Part of a camcol of size 2048 by 1489 pixels.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e412mcyd",
                    "encoding": "",
                    "name": "band",
                    "value": "g",
                    "defaultValue": "g",
                    "description": "Could be individual band, or list of bands.\nOptions: ``'u'``, ``'g'``, ``'r'``, ``'i'``, or ``'z'``.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lrusjfd2",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r6939s1g",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, this will return the data the query would have sent out,\nbut does not actually do the query.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "adhp66o3",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "Cache the images using astropy's caching system",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gz578mkp",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1hhhqhae",
                    "encoding": "",
                    "name": "show_progress",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s6ks4fv_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.get_images_async",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.get_images_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5ootg4tq",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2a2s938l",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "3_03ewby",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "af4bkgrq",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mcaexs4r",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g3fhj1bt",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "h_hohfqw",
            "name": "SDSSClass.get_spectra",
            "description": "Download spectrum from SDSS.\n    \n    The query can be made with one the following groups of parameters\n    (whichever comes first is used):\n    \n    - ``matches`` (result of a call to `query_region`);\n    - ``coordinates``, ``radius``;\n    - ``plate``, ``mjd``, ``fiberID``.\n    \n    See below for examples.\n    \n    Parameters\n    ----------\n    coordinates : str or `astropy.coordinates` object\n        The target around which to search. It may be specified as a string\n        in which case it is resolved using online services or as the\n        appropriate `astropy.coordinates` object. ICRS coordinates may also\n        be entered as strings as specified in the `astropy.coordinates`\n        module.\n    radius : str or `~astropy.units.Quantity` object, optional\n        The string must be parsable by `~astropy.coordinates.Angle`. The\n        appropriate `~astropy.units.Quantity` object from `astropy.units`\n        may also be used. Defaults to 2 arcsec.\n    matches : `~astropy.table.Table`\n        Result of `query_region`.\n    plate : integer, optional\n        Plate number.\n    mjd : integer, optional\n        Modified Julian Date indicating the date a given piece of SDSS data\n        was taken.\n    fiberID : integer, optional\n        Fiber number.\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use. With the default server, this\n        only supports DR8 or later.\n    \n    Examples\n    --------\n    Using results from a call to `query_region`:\n    \n    >>> from astropy import coordinates as coords\n    >>> from astroquery.sdss import SDSS\n    >>> co = coords.SkyCoord('0h8m05.63s +14d50m23.3s')\n    >>> result = SDSS.query_region(co, spectro=True)\n    >>> spec = SDSS.get_spectra(matches=result)\n    \n    Using coordinates directly:\n    \n    >>> spec = SDSS.get_spectra(co)\n    \n    Fetch the spectra from all fibers on plate 751 with mjd 52251:\n    \n    >>> specs = SDSS.get_spectra(plate=751, mjd=52251)\n    \n    \n    Returns\n    -------\n    list : List of `~astropy.io.fits.HDUList` objects.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c59c390884e02d1a001027391ddc0e147f2ea542c8f218f1f9e439f48e667481",
            "fields": [
                {
                    "id": "vbazlq05",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.get_spectra object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v29wdftc",
                    "encoding": "",
                    "name": "coordinates",
                    "value": "",
                    "defaultValue": "",
                    "description": "The target around which to search. It may be specified as a string\nin which case it is resolved using online services or as the\nappropriate `astropy.coordinates` object. ICRS coordinates may also\nbe entered as strings as specified in the `astropy.coordinates`\nmodule.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hy_0f_ka",
                    "encoding": "",
                    "name": "radius",
                    "value": "<Quantity 2. arcsec>",
                    "defaultValue": "<Quantity 2. arcsec>",
                    "description": "The string must be parsable by `~astropy.coordinates.Angle`. The\nappropriate `~astropy.units.Quantity` object from `astropy.units`\nmay also be used. Defaults to 2 arcsec.",
                    "type": "astropy.units.quantity.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7i2b_azz",
                    "encoding": "",
                    "name": "matches",
                    "value": "",
                    "defaultValue": "",
                    "description": "Result of `query_region`.",
                    "type": "astropy.table.Table",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "joerwiu8",
                    "encoding": "",
                    "name": "plate",
                    "value": "",
                    "defaultValue": "",
                    "description": "Plate number.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vj32wv7t",
                    "encoding": "",
                    "name": "fiberID",
                    "value": "",
                    "defaultValue": "",
                    "description": "Fiber number.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xwyrhmhf",
                    "encoding": "",
                    "name": "mjd",
                    "value": "",
                    "defaultValue": "",
                    "description": "Modified Julian Date indicating the date a given piece of SDSS data\nwas taken.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k4z5qrrp",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qr3640v3",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mbcp4dhz",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use. With the default server, this\nonly supports DR8 or later.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mmuhf6q5",
                    "encoding": "",
                    "name": "show_progress",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4kd41o3m",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.get_spectra",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.get_spectra",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dx8tksxw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x_fzum3q",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "eqzmwiju",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qn1fwgwq",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "12uy95_0",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7y_765wn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "3k2vf8cu",
            "name": "SDSSClass.get_spectra_async",
            "description": "Download spectrum from SDSS.\n    \n    The query can be made with one the following groups of parameters\n    (whichever comes first is used):\n    \n    - ``matches`` (result of a call to `query_region`);\n    - ``coordinates``, ``radius``;\n    - ``plate``, ``mjd``, ``fiberID``.\n    \n    See below for examples.\n    \n    Parameters\n    ----------\n    coordinates : str or `astropy.coordinates` object\n        The target around which to search. It may be specified as a string\n        in which case it is resolved using online services or as the\n        appropriate `astropy.coordinates` object. ICRS coordinates may also\n        be entered as strings as specified in the `astropy.coordinates`\n        module.\n    radius : str or `~astropy.units.Quantity` object, optional\n        The string must be parsable by `~astropy.coordinates.Angle`. The\n        appropriate `~astropy.units.Quantity` object from `astropy.units`\n        may also be used. Defaults to 2 arcsec.\n    matches : `~astropy.table.Table`\n        Result of `query_region`.\n    plate : integer, optional\n        Plate number.\n    mjd : integer, optional\n        Modified Julian Date indicating the date a given piece of SDSS data\n        was taken.\n    fiberID : integer, optional\n        Fiber number.\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use. With the default server, this\n        only supports DR8 or later.\n    \n    Returns\n    -------\n    list : list\n        A list of context-managers that yield readable file-like objects.\n        The function returns the spectra for only one of ``matches``, or\n        ``coordinates`` and ``radius``, or ``plate``, ``mjd`` and\n        ``fiberID``.\n    \n    Examples\n    --------\n    Using results from a call to `query_region`:\n    \n    >>> from astropy import coordinates as coords\n    >>> from astroquery.sdss import SDSS\n    >>> co = coords.SkyCoord('0h8m05.63s +14d50m23.3s')\n    >>> result = SDSS.query_region(co, spectro=True)\n    >>> spec = SDSS.get_spectra(matches=result)\n    \n    Using coordinates directly:\n    \n    >>> spec = SDSS.get_spectra(co)\n    \n    Fetch the spectra from all fibers on plate 751 with mjd 52251:\n    \n    >>> specs = SDSS.get_spectra(plate=751, mjd=52251)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a4378997250de886c906b183f8fb84f68385dece91f38ed39f30ed535fab2e2c",
            "fields": [
                {
                    "id": "32ir_7wc",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.get_spectra_async object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2fb7zlut",
                    "encoding": "",
                    "name": "coordinates",
                    "value": "",
                    "defaultValue": "",
                    "description": "The target around which to search. It may be specified as a string\nin which case it is resolved using online services or as the\nappropriate `astropy.coordinates` object. ICRS coordinates may also\nbe entered as strings as specified in the `astropy.coordinates`\nmodule.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "881cgxv3",
                    "encoding": "",
                    "name": "radius",
                    "value": "<Quantity 2. arcsec>",
                    "defaultValue": "<Quantity 2. arcsec>",
                    "description": "The string must be parsable by `~astropy.coordinates.Angle`. The\nappropriate `~astropy.units.Quantity` object from `astropy.units`\nmay also be used. Defaults to 2 arcsec.",
                    "type": "astropy.units.quantity.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_9u_ig9u",
                    "encoding": "",
                    "name": "matches",
                    "value": "",
                    "defaultValue": "",
                    "description": "Result of `query_region`.",
                    "type": "astropy.table.Table",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q9swkcia",
                    "encoding": "",
                    "name": "plate",
                    "value": "",
                    "defaultValue": "",
                    "description": "Plate number.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cc9wp3o3",
                    "encoding": "",
                    "name": "fiberID",
                    "value": "",
                    "defaultValue": "",
                    "description": "Fiber number.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fd025e2t",
                    "encoding": "",
                    "name": "mjd",
                    "value": "",
                    "defaultValue": "",
                    "description": "Modified Julian Date indicating the date a given piece of SDSS data\nwas taken.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tlefzu_1",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j6u0u6cc",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, this will return the data the query would have sent out,\nbut does not actually do the query.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qyjjfubg",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use. With the default server, this\nonly supports DR8 or later.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aqoe1s0m",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l8iozv2s",
                    "encoding": "",
                    "name": "show_progress",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "unx416qo",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.get_spectra_async",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.get_spectra_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f_ufm_j9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8zruewyk",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "564qqpwq",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b52z03d5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tpmhh07l",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a7p08qen",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "la9h_e03",
            "name": "SDSSClass.get_spectral_template",
            "description": "Download spectral templates from SDSS DR-2.\n    \n    Location: http://www.sdss.org/dr7/algorithms/spectemplates/\n    \n    There 32 spectral templates available from DR-2, from stellar spectra,\n    to galaxies, to quasars. To see the available templates, do:\n    \n        from astroquery.sdss import SDSS\n        print SDSS.AVAILABLE_TEMPLATES\n    \n    Parameters\n    ----------\n    kind : str, list\n        Which spectral template to download? Options are stored in the\n        dictionary astroquery.sdss.SDSS.AVAILABLE_TEMPLATES\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    \n    Examples\n    --------\n    >>> qso = SDSS.get_spectral_template(kind='qso')\n    >>> Astar = SDSS.get_spectral_template(kind='star_A')\n    >>> Fstar = SDSS.get_spectral_template(kind='star_F')\n    \n    \n    Returns\n    -------\n    list : List of `~astropy.io.fits.HDUList` objects.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cb171c64c2984a85c202e1706f7bc10aa51fc3be2eb6088d01b71d4b4d3bc946",
            "fields": [
                {
                    "id": "c159ff3c",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.get_spectral_template object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "44hcal14",
                    "encoding": "",
                    "name": "kind",
                    "value": "qso",
                    "defaultValue": "qso",
                    "description": "Which spectral template to download? Options are stored in the\ndictionary astroquery.sdss.SDSS.AVAILABLE_TEMPLATES",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d449t1i0",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fjjmbpze",
                    "encoding": "",
                    "name": "show_progress",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ckwmoqe0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.get_spectral_template",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.get_spectral_template",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nodduxgg",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w8cj1qxq",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "dln_r9di",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r3wgm3q5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a1oc0nzc",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "svdk9pkz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "xx1l6qq1",
            "name": "SDSSClass.get_spectral_template_async",
            "description": "Download spectral templates from SDSS DR-2.\n    \n    Location: http://www.sdss.org/dr7/algorithms/spectemplates/\n    \n    There 32 spectral templates available from DR-2, from stellar spectra,\n    to galaxies, to quasars. To see the available templates, do:\n    \n        from astroquery.sdss import SDSS\n        print SDSS.AVAILABLE_TEMPLATES\n    \n    Parameters\n    ----------\n    kind : str, list\n        Which spectral template to download? Options are stored in the\n        dictionary astroquery.sdss.SDSS.AVAILABLE_TEMPLATES\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    \n    Examples\n    --------\n    >>> qso = SDSS.get_spectral_template(kind='qso')\n    >>> Astar = SDSS.get_spectral_template(kind='star_A')\n    >>> Fstar = SDSS.get_spectral_template(kind='star_F')\n    \n    Returns\n    -------\n    list : List of `~astropy.io.fits.HDUList` objects.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d0b6a0417660792fd78c2611e4947eeb5a1276c4f244e58ce7cc77ee5cbf6017",
            "fields": [
                {
                    "id": "k6zohmx3",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.get_spectral_template_async object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ira9tvk",
                    "encoding": "",
                    "name": "kind",
                    "value": "qso",
                    "defaultValue": "qso",
                    "description": "Which spectral template to download? Options are stored in the\ndictionary astroquery.sdss.SDSS.AVAILABLE_TEMPLATES",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qnytz0al",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ml73tjn_",
                    "encoding": "",
                    "name": "show_progress",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ohy6i9o9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.get_spectral_template_async",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.get_spectral_template_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f6ualhc1",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kcz54_hf",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "zs01vo6w",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g5vo9pks",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ffnuih2z",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vdqvj9ck",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "gni12bjh",
            "name": "SDSSClass.query_crossid",
            "description": "Queries the service and returns a table object.\n    \n    Query using the cross-identification web interface.\n    \n    Parameters\n    ----------\n    coordinates : str or `astropy.coordinates` object or list of\n        coordinates or `~astropy.table.Column` of coordinates The\n        target(s) around which to search. It may be specified as a\n        string in which case it is resolved using online services or as\n        the appropriate `astropy.coordinates` object. ICRS coordinates\n        may also be entered as strings as specified in the\n        `astropy.coordinates` module.\n    \n        Example:\n        ra = np.array([220.064728084,220.064728467,220.06473483])\n        dec = np.array([0.870131920218,0.87013210119,0.870138329659])\n        coordinates = SkyCoord(ra, dec, frame='icrs', unit='deg')\n    radius : str or `~astropy.units.Quantity` object, optional The\n        string must be parsable by `~astropy.coordinates.Angle`. The\n        appropriate `~astropy.units.Quantity` object from\n        `astropy.units` may also be used. Defaults to 5 arcsec.\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    photoobj_fields : list, optional\n        PhotoObj quantities to return. If photoobj_fields is None and\n        specobj_fields is None then the value of fields is used\n    specobj_fields : list, optional\n        SpecObj quantities to return. If photoobj_fields is None and\n        specobj_fields is None then the value of fields is used\n    obj_names : str, or list or `~astropy.table.Column`, optional\n        Target names. If given, every coordinate should have a\n        corresponding name, and it gets repeated in the query result.\n        It generates unique object names by default.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "863502a016c609d04fe61f88229f14763b77c0f29be171c52d69fa4f64adbc78",
            "fields": [
                {
                    "id": "89x1biae",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_crossid object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tc2567h9",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z_cqv3fy",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0rntnkrd",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_crossid",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_crossid",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pd0a0v7s",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7w1qbnq6",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "0oruqbll",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zcke7mtn",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dgqh69kd",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8_y2mwyo",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "5zxmk9qh",
            "name": "SDSSClass.query_crossid_async",
            "description": "Query using the cross-identification web interface.\n    \n    Parameters\n    ----------\n    coordinates : str or `astropy.coordinates` object or list of\n        coordinates or `~astropy.table.Column` of coordinates The\n        target(s) around which to search. It may be specified as a\n        string in which case it is resolved using online services or as\n        the appropriate `astropy.coordinates` object. ICRS coordinates\n        may also be entered as strings as specified in the\n        `astropy.coordinates` module.\n    \n        Example:\n        ra = np.array([220.064728084,220.064728467,220.06473483])\n        dec = np.array([0.870131920218,0.87013210119,0.870138329659])\n        coordinates = SkyCoord(ra, dec, frame='icrs', unit='deg')\n    radius : str or `~astropy.units.Quantity` object, optional The\n        string must be parsable by `~astropy.coordinates.Angle`. The\n        appropriate `~astropy.units.Quantity` object from\n        `astropy.units` may also be used. Defaults to 5 arcsec.\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    photoobj_fields : list, optional\n        PhotoObj quantities to return. If photoobj_fields is None and\n        specobj_fields is None then the value of fields is used\n    specobj_fields : list, optional\n        SpecObj quantities to return. If photoobj_fields is None and\n        specobj_fields is None then the value of fields is used\n    obj_names : str, or list or `~astropy.table.Column`, optional\n        Target names. If given, every coordinate should have a\n        corresponding name, and it gets repeated in the query result.\n        It generates unique object names by default.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "184500c5e9ef77055542810206e6917ab658569bcca6d97690a4d196d15eb75e",
            "fields": [
                {
                    "id": "895z5qmq",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_crossid_async object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tga12dxc",
                    "encoding": "",
                    "name": "coordinates",
                    "value": "",
                    "defaultValue": "",
                    "description": "coordinates or `~astropy.table.Column` of coordinates The\ntarget(s) around which to search. It may be specified as a\nstring in which case it is resolved using online services or as\nthe appropriate `astropy.coordinates` object. ICRS coordinates\nmay also be entered as strings as specified in the\n`astropy.coordinates` module.\n\nExample:\nra = np.array([220.064728084,220.064728467,220.06473483])\ndec = np.array([0.870131920218,0.87013210119,0.870138329659])\ncoordinates = SkyCoord(ra, dec, frame='icrs', unit='deg')",
                    "type": "str or astropy.coordinates object or list of",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tcjssipz",
                    "encoding": "",
                    "name": "obj_names",
                    "value": "",
                    "defaultValue": "",
                    "description": "Target names. If given, every coordinate should have a\ncorresponding name, and it gets repeated in the query result.\nIt generates unique object names by default.",
                    "type": "str, or list or astropy.table.Column",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3bn3h4ru",
                    "encoding": "",
                    "name": "photoobj_fields",
                    "value": "",
                    "defaultValue": "",
                    "description": "PhotoObj quantities to return. If photoobj_fields is None and\nspecobj_fields is None then the value of fields is used",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p505aouk",
                    "encoding": "",
                    "name": "specobj_fields",
                    "value": "",
                    "defaultValue": "",
                    "description": "SpecObj quantities to return. If photoobj_fields is None and\nspecobj_fields is None then the value of fields is used",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fb1wjwrw",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, this will return the data the query would have sent out,\nbut does not actually do the query.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a7kewlru",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g086wsue",
                    "encoding": "",
                    "name": "radius",
                    "value": "<Quantity 5. arcsec>",
                    "defaultValue": "<Quantity 5. arcsec>",
                    "description": "string must be parsable by `~astropy.coordinates.Angle`. The\nappropriate `~astropy.units.Quantity` object from\n`astropy.units` may also be used. Defaults to 5 arcsec.",
                    "type": "astropy.units.quantity.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n5q5ubfc",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "waw7mwnv",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5wllilh2",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_crossid_async",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_crossid_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y1xlus76",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ty3sy5o7",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "yuvj9ae8",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_tlf8ddu",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1kv05zb1",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jd70p96z",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "bnj6bzg3",
            "name": "SDSSClass.query_photoobj",
            "description": "Queries the service and returns a table object.\n    \n    Used to query the PhotoObjAll table with run, rerun, camcol and field\n    values.\n    \n    At least one of ``run``, ``camcol`` or ``field`` parameters must be\n    specified.\n    \n    Parameters\n    ----------\n    run : integer, optional\n        Length of a strip observed in a single continuous image observing\n        scan.\n    rerun : integer, optional\n        Reprocessing of an imaging run. Defaults to 301 which is the most\n        recent rerun.\n    camcol : integer, optional\n        Output of one camera column of CCDs.\n    field : integer, optional\n        Part of a camcol of size 2048 by 1489 pixels.\n    fields : list, optional\n        SDSS PhotoObj or SpecObj quantities to return. If None, defaults\n        to quantities required to find corresponding spectra and images\n        of matched objects (e.g. plate, fiberID, mjd, etc.).\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    field_help: str or bool, optional\n        Field name to check whether a valid PhotoObjAll or SpecObjAll\n        field name. If `True` or it is an invalid field name all the valid\n        field names are returned as a dict.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    >>> from astroquery.sdss import SDSS\n    >>> result = SDSS.query_photoobj(run=5714, camcol=6)\n    >>> print(result[:5])\n          ra           dec             objid        run  rerun camcol field\n    ------------- ------------- ------------------- ---- ----- ------ -----\n    30.4644529079 7.86460794626 1237670017266024498 5714   301      6    75\n    38.7635496073 7.47083098197 1237670017269628978 5714   301      6   130\n    22.2574304026 8.43175488904 1237670017262485671 5714   301      6    21\n    23.3724928784 8.32576993103 1237670017262944491 5714   301      6    28\n    25.4801226435 8.27642390025 1237670017263927330 5714   301      6    43\n    \n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "20db68ed48d3e44ab7152489de7cdffd052884ae4c21a7274c1e2233fb9b628c",
            "fields": [
                {
                    "id": "brzviw2l",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_photoobj object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "04gmogo7",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "npfroee6",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ihshgq4_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_photoobj",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_photoobj",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k5pn57q3",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lxjnl69n",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "xg_e97nf",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oq2pfvmk",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gp_ko1y5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5n9azaqp",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "louxagb1",
            "name": "SDSSClass.query_photoobj_async",
            "description": "Used to query the PhotoObjAll table with run, rerun, camcol and field\n    values.\n    \n    At least one of ``run``, ``camcol`` or ``field`` parameters must be\n    specified.\n    \n    Parameters\n    ----------\n    run : integer, optional\n        Length of a strip observed in a single continuous image observing\n        scan.\n    rerun : integer, optional\n        Reprocessing of an imaging run. Defaults to 301 which is the most\n        recent rerun.\n    camcol : integer, optional\n        Output of one camera column of CCDs.\n    field : integer, optional\n        Part of a camcol of size 2048 by 1489 pixels.\n    fields : list, optional\n        SDSS PhotoObj or SpecObj quantities to return. If None, defaults\n        to quantities required to find corresponding spectra and images\n        of matched objects (e.g. plate, fiberID, mjd, etc.).\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    field_help: str or bool, optional\n        Field name to check whether a valid PhotoObjAll or SpecObjAll\n        field name. If `True` or it is an invalid field name all the valid\n        field names are returned as a dict.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    >>> from astroquery.sdss import SDSS\n    >>> result = SDSS.query_photoobj(run=5714, camcol=6)\n    >>> print(result[:5])\n          ra           dec             objid        run  rerun camcol field\n    ------------- ------------- ------------------- ---- ----- ------ -----\n    30.4644529079 7.86460794626 1237670017266024498 5714   301      6    75\n    38.7635496073 7.47083098197 1237670017269628978 5714   301      6   130\n    22.2574304026 8.43175488904 1237670017262485671 5714   301      6    21\n    23.3724928784 8.32576993103 1237670017262944491 5714   301      6    28\n    25.4801226435 8.27642390025 1237670017263927330 5714   301      6    43\n    \n    Returns\n    -------\n    result : `~astropy.table.Table`\n        The result of the query as a `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "1ae39c5058f4d26c2efc2ff68348f7cbc217f3ce5aa388c5a7aa8710559965b1",
            "fields": [
                {
                    "id": "ai3xhm68",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_photoobj_async object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r161lc0d",
                    "encoding": "",
                    "name": "run",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of a strip observed in a single continuous image observing\nscan.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ew48idgl",
                    "encoding": "",
                    "name": "rerun",
                    "value": 301,
                    "defaultValue": 301,
                    "description": "Reprocessing of an imaging run. Defaults to 301 which is the most\nrecent rerun.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "in58366v",
                    "encoding": "",
                    "name": "camcol",
                    "value": "",
                    "defaultValue": "",
                    "description": "Output of one camera column of CCDs.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bfc6_51e",
                    "encoding": "",
                    "name": "field",
                    "value": "",
                    "defaultValue": "",
                    "description": "Part of a camcol of size 2048 by 1489 pixels.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7lvnb1le",
                    "encoding": "",
                    "name": "fields",
                    "value": "",
                    "defaultValue": "",
                    "description": "SDSS PhotoObj or SpecObj quantities to return. If None, defaults\nto quantities required to find corresponding spectra and images\nof matched objects (e.g. plate, fiberID, mjd, etc.).",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z228wvpt",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qu5mwk9c",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, this will return the data the query would have sent out,\nbut does not actually do the query.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "padkldjr",
                    "encoding": "",
                    "name": "field_help",
                    "value": false,
                    "defaultValue": false,
                    "description": "Field name to check whether a valid PhotoObjAll or SpecObjAll\nfield name. If `True` or it is an invalid field name all the valid\nfield names are returned as a dict.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ehg51dji",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w32119iu",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4gs7ztx3",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_photoobj_async",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_photoobj_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cwy0hyyt",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gaetauz5",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5hrh_qie",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eyss18nv",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gi6v011z",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t91q0ggh",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "bk1g5hml",
            "name": "SDSSClass.query_region",
            "description": "Queries the service and returns a table object.\n    \n    Used to query a region around given coordinates. Equivalent to\n    the object cross-ID from the web interface.\n    \n    Parameters\n    ----------\n    coordinates : str or `astropy.coordinates` object or list of\n        coordinates or `~astropy.table.Column` of coordinates The\n        target(s) around which to search. It may be specified as a\n        string in which case it is resolved using online services or as\n        the appropriate `astropy.coordinates` object. ICRS coordinates\n        may also be entered as strings as specified in the\n        `astropy.coordinates` module.\n    \n        Example:\n        ra = np.array([220.064728084,220.064728467,220.06473483])\n        dec = np.array([0.870131920218,0.87013210119,0.870138329659])\n        coordinates = SkyCoord(ra, dec, frame='icrs', unit='deg')\n    radius : str or `~astropy.units.Quantity` object, optional The\n        string must be parsable by `~astropy.coordinates.Angle`. The\n        appropriate `~astropy.units.Quantity` object from\n        `astropy.units` may also be used. Defaults to 2 arcsec.\n    fields : list, optional\n        SDSS PhotoObj or SpecObj quantities to return. If None, defaults\n        to quantities required to find corresponding spectra and images\n        of matched objects (e.g. plate, fiberID, mjd, etc.).\n    spectro : bool, optional\n        Look for spectroscopic match in addition to photometric match? If\n        True, objects will only count as a match if photometry *and*\n        spectroscopy exist. If False, will look for photometric matches\n        only.\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    photoobj_fields : list, optional\n        PhotoObj quantities to return. If photoobj_fields is None and\n        specobj_fields is None then the value of fields is used\n    specobj_fields : list, optional\n        SpecObj quantities to return. If photoobj_fields is None and\n        specobj_fields is None then the value of fields is used\n    field_help: str or bool, optional\n        Field name to check whether a valid PhotoObjAll or SpecObjAll\n        field name. If `True` or it is an invalid field name all the valid\n        field names are returned as a dict.\n    obj_names : str, or list or `~astropy.table.Column`, optional\n        Target names. If given, every coordinate should have a\n        corresponding name, and it gets repeated in the query result.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    >>> from astroquery.sdss import SDSS\n    >>> from astropy import coordinates as coords\n    >>> co = coords.SkyCoord('0h8m05.63s +14d50m23.3s')\n    >>> result = SDSS.query_region(co)\n    >>> print(result[:5])\n          ra           dec             objid        run  rerun camcol field\n    ------------- ------------- ------------------- ---- ----- ------ -----\n    2.02344282607 14.8398204075 1237653651835781245 1904   301      3   163\n    2.02344283666 14.8398204143 1237653651835781244 1904   301      3   163\n    2.02344596595 14.8398237229 1237652943176138867 1739   301      3   315\n    2.02344596303 14.8398237521 1237652943176138868 1739   301      3   315\n    2.02344772021 14.8398201105 1237653651835781243 1904   301      3   163\n    \n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d5fc24e7700369a37d2e2ea43d3a36041df83ab6de77f45abc74b04be5c8e803",
            "fields": [
                {
                    "id": "x1i4novz",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_region object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sltl6nuj",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j7j0sdpy",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pmbsq01_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_region",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_region",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ldqd7wrs",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "104548ym",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "lb_mfgny",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0v__ssda",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9oaix8uq",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2g5tmpt6",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "ijpgprns",
            "name": "SDSSClass.query_region_async",
            "description": "Used to query a region around given coordinates. Equivalent to\n    the object cross-ID from the web interface.\n    \n    Parameters\n    ----------\n    coordinates : str or `astropy.coordinates` object or list of\n        coordinates or `~astropy.table.Column` of coordinates The\n        target(s) around which to search. It may be specified as a\n        string in which case it is resolved using online services or as\n        the appropriate `astropy.coordinates` object. ICRS coordinates\n        may also be entered as strings as specified in the\n        `astropy.coordinates` module.\n    \n        Example:\n        ra = np.array([220.064728084,220.064728467,220.06473483])\n        dec = np.array([0.870131920218,0.87013210119,0.870138329659])\n        coordinates = SkyCoord(ra, dec, frame='icrs', unit='deg')\n    radius : str or `~astropy.units.Quantity` object, optional The\n        string must be parsable by `~astropy.coordinates.Angle`. The\n        appropriate `~astropy.units.Quantity` object from\n        `astropy.units` may also be used. Defaults to 2 arcsec.\n    fields : list, optional\n        SDSS PhotoObj or SpecObj quantities to return. If None, defaults\n        to quantities required to find corresponding spectra and images\n        of matched objects (e.g. plate, fiberID, mjd, etc.).\n    spectro : bool, optional\n        Look for spectroscopic match in addition to photometric match? If\n        True, objects will only count as a match if photometry *and*\n        spectroscopy exist. If False, will look for photometric matches\n        only.\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    photoobj_fields : list, optional\n        PhotoObj quantities to return. If photoobj_fields is None and\n        specobj_fields is None then the value of fields is used\n    specobj_fields : list, optional\n        SpecObj quantities to return. If photoobj_fields is None and\n        specobj_fields is None then the value of fields is used\n    field_help: str or bool, optional\n        Field name to check whether a valid PhotoObjAll or SpecObjAll\n        field name. If `True` or it is an invalid field name all the valid\n        field names are returned as a dict.\n    obj_names : str, or list or `~astropy.table.Column`, optional\n        Target names. If given, every coordinate should have a\n        corresponding name, and it gets repeated in the query result.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    >>> from astroquery.sdss import SDSS\n    >>> from astropy import coordinates as coords\n    >>> co = coords.SkyCoord('0h8m05.63s +14d50m23.3s')\n    >>> result = SDSS.query_region(co)\n    >>> print(result[:5])\n          ra           dec             objid        run  rerun camcol field\n    ------------- ------------- ------------------- ---- ----- ------ -----\n    2.02344282607 14.8398204075 1237653651835781245 1904   301      3   163\n    2.02344283666 14.8398204143 1237653651835781244 1904   301      3   163\n    2.02344596595 14.8398237229 1237652943176138867 1739   301      3   315\n    2.02344596303 14.8398237521 1237652943176138868 1739   301      3   315\n    2.02344772021 14.8398201105 1237653651835781243 1904   301      3   163\n    \n    Returns\n    -------\n    result : `~astropy.table.Table`\n        The result of the query as a `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "51b01425a55fe06e4708eb36dbe81ec1041d4a1443a1e3960e31f3c9413351b0",
            "fields": [
                {
                    "id": "7hl5urdj",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_region_async object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9u9uc1rp",
                    "encoding": "",
                    "name": "coordinates",
                    "value": "",
                    "defaultValue": "",
                    "description": "coordinates or `~astropy.table.Column` of coordinates The\ntarget(s) around which to search. It may be specified as a\nstring in which case it is resolved using online services or as\nthe appropriate `astropy.coordinates` object. ICRS coordinates\nmay also be entered as strings as specified in the\n`astropy.coordinates` module.\n\nExample:\nra = np.array([220.064728084,220.064728467,220.06473483])\ndec = np.array([0.870131920218,0.87013210119,0.870138329659])\ncoordinates = SkyCoord(ra, dec, frame='icrs', unit='deg')",
                    "type": "str or astropy.coordinates object or list of",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qp3fv2tw",
                    "encoding": "",
                    "name": "radius",
                    "value": "<Quantity 2. arcsec>",
                    "defaultValue": "<Quantity 2. arcsec>",
                    "description": "string must be parsable by `~astropy.coordinates.Angle`. The\nappropriate `~astropy.units.Quantity` object from\n`astropy.units` may also be used. Defaults to 2 arcsec.",
                    "type": "astropy.units.quantity.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e647mtt5",
                    "encoding": "",
                    "name": "fields",
                    "value": "",
                    "defaultValue": "",
                    "description": "SDSS PhotoObj or SpecObj quantities to return. If None, defaults\nto quantities required to find corresponding spectra and images\nof matched objects (e.g. plate, fiberID, mjd, etc.).",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zhv2mk9_",
                    "encoding": "",
                    "name": "spectro",
                    "value": false,
                    "defaultValue": false,
                    "description": "Look for spectroscopic match in addition to photometric match? If\nTrue, objects will only count as a match if photometry *and*\nspectroscopy exist. If False, will look for photometric matches\nonly.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "db0cr_d7",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hlxq5rx6",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, this will return the data the query would have sent out,\nbut does not actually do the query.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aofmd76y",
                    "encoding": "",
                    "name": "photoobj_fields",
                    "value": "",
                    "defaultValue": "",
                    "description": "PhotoObj quantities to return. If photoobj_fields is None and\nspecobj_fields is None then the value of fields is used",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kaa3yxcz",
                    "encoding": "",
                    "name": "specobj_fields",
                    "value": "",
                    "defaultValue": "",
                    "description": "SpecObj quantities to return. If photoobj_fields is None and\nspecobj_fields is None then the value of fields is used",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8h1p9ll5",
                    "encoding": "",
                    "name": "field_help",
                    "value": false,
                    "defaultValue": false,
                    "description": "Field name to check whether a valid PhotoObjAll or SpecObjAll\nfield name. If `True` or it is an invalid field name all the valid\nfield names are returned as a dict.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uxefdadk",
                    "encoding": "",
                    "name": "obj_names",
                    "value": "",
                    "defaultValue": "",
                    "description": "Target names. If given, every coordinate should have a\ncorresponding name, and it gets repeated in the query result.",
                    "type": "str, or list or astropy.table.Column",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_kgziewj",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mr32xuii",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vg1gehoq",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_region_async",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_region_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rh0wsk9k",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xyxfz0id",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "7uc6w7_f",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gdwu1zb5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f9aarods",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_o41hd56",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "heipi2c9",
            "name": "SDSSClass.query_specobj",
            "description": "Queries the service and returns a table object.\n    \n    Used to query the SpecObjAll table with plate, mjd and fiberID values.\n    \n    At least one of ``plate``, ``mjd`` or ``fiberID`` parameters must be\n    specified.\n    \n    Parameters\n    ----------\n    plate : integer, optional\n        Plate number.\n    mjd : integer, optional\n        Modified Julian Date indicating the date a given piece of SDSS data\n        was taken.\n    fiberID : integer, optional\n        Fiber number.\n    fields : list, optional\n        SDSS PhotoObj or SpecObj quantities to return. If None, defaults\n        to quantities required to find corresponding spectra and images\n        of matched objects (e.g. plate, fiberID, mjd, etc.).\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    field_help: str or bool, optional\n        Field name to check whether a valid PhotoObjAll or SpecObjAll\n        field name. If `True` or it is an invalid field name all the valid\n        field names are returned as a dict.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    >>> from astroquery.sdss import SDSS\n    >>> result = SDSS.query_specobj(plate=2340,\n    ...     fields=['ra', 'dec','plate', 'mjd', 'fiberID', 'specobjid'])\n    >>> print(result[:5])\n          ra           dec      plate  mjd  fiberID      specobjid\n    ------------- ------------- ----- ----- ------- -------------------\n    49.2020613611 5.20883041368  2340 53733      60 2634622337315530752\n    48.3745360119 5.26557511598  2340 53733     154 2634648175838783488\n    47.1604269095 5.48241410994  2340 53733     332 2634697104106219520\n    48.6634992214 6.69459110287  2340 53733     553 2634757852123654144\n    48.0759195428 6.18757403485  2340 53733     506 2634744932862027776\n    \n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0c066f8edf1ec6f0659885eff1ec8cf85f912871c6b429f2c3a504c770f6063a",
            "fields": [
                {
                    "id": "qukot6fu",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_specobj object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z2gk01wt",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "htrktezn",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ecpv7om5",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_specobj",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_specobj",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9aiaf9vx",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pbymqz2w",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wg_9yf7y",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mo0p28ty",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uc38mvlw",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6dwg0gsz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "mx1mdi33",
            "name": "SDSSClass.query_specobj_async",
            "description": "Used to query the SpecObjAll table with plate, mjd and fiberID values.\n    \n    At least one of ``plate``, ``mjd`` or ``fiberID`` parameters must be\n    specified.\n    \n    Parameters\n    ----------\n    plate : integer, optional\n        Plate number.\n    mjd : integer, optional\n        Modified Julian Date indicating the date a given piece of SDSS data\n        was taken.\n    fiberID : integer, optional\n        Fiber number.\n    fields : list, optional\n        SDSS PhotoObj or SpecObj quantities to return. If None, defaults\n        to quantities required to find corresponding spectra and images\n        of matched objects (e.g. plate, fiberID, mjd, etc.).\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    field_help: str or bool, optional\n        Field name to check whether a valid PhotoObjAll or SpecObjAll\n        field name. If `True` or it is an invalid field name all the valid\n        field names are returned as a dict.\n    get_query_payload : bool\n        If True, this will return the data the query would have sent out,\n        but does not actually do the query.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    >>> from astroquery.sdss import SDSS\n    >>> result = SDSS.query_specobj(plate=2340,\n    ...     fields=['ra', 'dec','plate', 'mjd', 'fiberID', 'specobjid'])\n    >>> print(result[:5])\n          ra           dec      plate  mjd  fiberID      specobjid\n    ------------- ------------- ----- ----- ------- -------------------\n    49.2020613611 5.20883041368  2340 53733      60 2634622337315530752\n    48.3745360119 5.26557511598  2340 53733     154 2634648175838783488\n    47.1604269095 5.48241410994  2340 53733     332 2634697104106219520\n    48.6634992214 6.69459110287  2340 53733     553 2634757852123654144\n    48.0759195428 6.18757403485  2340 53733     506 2634744932862027776\n    \n    Returns\n    -------\n    result : `~astropy.table.Table`\n        The result of the query as an `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d1f8d7d1e3fc2499b3271cd2b8fa7fdb6209e51d9d19eb2a266ff259443113e9",
            "fields": [
                {
                    "id": "sgrponl9",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_specobj_async object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "krqd1zbz",
                    "encoding": "",
                    "name": "plate",
                    "value": "",
                    "defaultValue": "",
                    "description": "Plate number.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ile9q9ga",
                    "encoding": "",
                    "name": "mjd",
                    "value": "",
                    "defaultValue": "",
                    "description": "Modified Julian Date indicating the date a given piece of SDSS data\nwas taken.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "05mmainw",
                    "encoding": "",
                    "name": "fiberID",
                    "value": "",
                    "defaultValue": "",
                    "description": "Fiber number.",
                    "type": "integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "umjhvymh",
                    "encoding": "",
                    "name": "fields",
                    "value": "",
                    "defaultValue": "",
                    "description": "SDSS PhotoObj or SpecObj quantities to return. If None, defaults\nto quantities required to find corresponding spectra and images\nof matched objects (e.g. plate, fiberID, mjd, etc.).",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l_38aqs1",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gi_8armo",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, this will return the data the query would have sent out,\nbut does not actually do the query.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lc8pmxi8",
                    "encoding": "",
                    "name": "field_help",
                    "value": false,
                    "defaultValue": false,
                    "description": "Field name to check whether a valid PhotoObjAll or SpecObjAll\nfield name. If `True` or it is an invalid field name all the valid\nfield names are returned as a dict.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hw62yyy3",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e7oc29q4",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "neoid35c",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_specobj_async",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_specobj_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4dh21fcb",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "83epj9vo",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "sk8hiuxv",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2qbdquhl",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "54nz5812",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nfoug9oo",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "18qu8bhf",
            "name": "SDSSClass.query_sql",
            "description": "Queries the service and returns a table object.\n    \n    Query the SDSS database.\n    \n    Parameters\n    ----------\n    sql_query : str\n        An SQL query\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    >>> from astroquery.sdss import SDSS\n    >>> query = \"select top 10                        z, ra, dec, bestObjID                      from                        specObj                      where                        class = 'galaxy'                        and z > 0.3                        and zWarning = 0\"\n    >>> res = SDSS.query_sql(query)\n    >>> print(res[:5])\n        z         ra       dec         bestObjID\n    --------- --------- --------- -------------------\n    0.3000011 16.411075 4.1197892 1237678660894327022\n    0.3000012 49.459411  0.847754 1237660241924063461\n    0.3000027 156.25024 7.6586271 1237658425162858683\n    0.3000027 256.99461 25.566255 1237661387086693265\n     0.300003 175.65125  34.37548 1237665128003731630\n    \n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5fadaba6f28ec67c7e399dcf0eb0e57e643b2262872f71cc2abc373ce21c2e97",
            "fields": [
                {
                    "id": "b9ts5_77",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_sql object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1ovxdog7",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "htntnf63",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x3m9umzr",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_sql",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_sql",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gg1rkwld",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ivimebys",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "uk1mh90e",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eaa2396q",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h00csphs",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a0ok14zg",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "rsvdfrwq",
            "name": "SDSSClass.query_sql_async",
            "description": "Query the SDSS database.\n    \n    Parameters\n    ----------\n    sql_query : str\n        An SQL query\n    timeout : float, optional\n        Time limit (in seconds) for establishing successful connection with\n        remote server.  Defaults to `SDSSClass.TIMEOUT`.\n    data_release : int\n        The data release of the SDSS to use.\n    \n    Examples\n    --------\n    >>> from astroquery.sdss import SDSS\n    >>> query = \"select top 10                        z, ra, dec, bestObjID                      from                        specObj                      where                        class = 'galaxy'                        and z > 0.3                        and zWarning = 0\"\n    >>> res = SDSS.query_sql(query)\n    >>> print(res[:5])\n        z         ra       dec         bestObjID\n    --------- --------- --------- -------------------\n    0.3000011 16.411075 4.1197892 1237678660894327022\n    0.3000012 49.459411  0.847754 1237660241924063461\n    0.3000027 156.25024 7.6586271 1237658425162858683\n    0.3000027 256.99461 25.566255 1237661387086693265\n     0.300003 175.65125  34.37548 1237665128003731630\n    \n    Returns\n    -------\n    result : `~astropy.table.Table`\n        The result of the query as a `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3a309e65a2ce552388e49475aad0d07f65832425a39cddf973a89cb759f49d16",
            "fields": [
                {
                    "id": "fo4oih9q",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.sdss.core.SDSSClass.query_sql_async object",
                    "type": "Object:astroquery.sdss.core.SDSSClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rqhdpuzu",
                    "encoding": "",
                    "name": "sql_query",
                    "value": "",
                    "defaultValue": "",
                    "description": "An SQL query",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oripoqdd",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "Time limit (in seconds) for establishing successful connection with\nremote server.  Defaults to `SDSSClass.TIMEOUT`.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3qqphw_s",
                    "encoding": "",
                    "name": "data_release",
                    "value": 14,
                    "defaultValue": 14,
                    "description": "The data release of the SDSS to use.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ovrhro6x",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "18cxqx1z",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qd2z4igh",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSSClass.query_sql_async",
                    "defaultValue": "astroquery.sdss.core.SDSSClass.query_sql_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "581tpr_t",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wi6f2d6p",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "lebhrf83",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n4yvms3k",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core.SDSSClass",
                    "defaultValue": "astroquery.sdss.core.SDSSClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7asss42w",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bs_ww5h9",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "u_mzgeyx",
            "name": "core.SDSS",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "17bcba92055f4741d73734a2fcdd9dbb6d3bf5e269da2a21ef155e1a82e66077",
            "fields": [
                {
                    "id": "biflgotr",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9qwcwh55",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fnduvsrt",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.core.SDSS",
                    "defaultValue": "astroquery.sdss.core.SDSS",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hqw5_1is",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6hzpliwb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "g_druu8t",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_h7gx_ox",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.core",
                    "defaultValue": "astroquery.sdss.core",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mgqjx4u7",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y5rw7nfu",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "kfohh9bm",
            "name": "field_names.get_field_info",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8b1abcadeae160de4d30076b30402de4531b977b72348a0194e2179bf3fd0d3b",
            "fields": [
                {
                    "id": "f5pxthrs",
                    "encoding": "",
                    "name": "cls",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qmrypidf",
                    "encoding": "",
                    "name": "tablename",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "53o22sne",
                    "encoding": "",
                    "name": "sqlurl",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oc_h5u5f",
                    "encoding": "",
                    "name": "timeout",
                    "value": 60,
                    "defaultValue": 60,
                    "description": "",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "suou0bsd",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.sdss.field_names.get_field_info",
                    "defaultValue": "astroquery.sdss.field_names.get_field_info",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nkz1biw0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1p_k7zxa",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "cjkm2rmx",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "22ya7x49",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.sdss.field_names",
                    "defaultValue": "astroquery.sdss.field_names",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rr983n7q",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_a5ro46d",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}