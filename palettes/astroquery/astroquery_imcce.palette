{
    "modelData": {
        "filePath": "astroquery_imcce.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "IMCCE\n-----\n\n:author: Michael Mommert (mommermiscience@gmail.com)",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.2",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "astroquery",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "a2352a6ae0a1efaf61897dd5423a4ad974c007c12f9fceea27dfd6b887a88ee6",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755099102.119658,
        "numLGNodes": 8
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "etm3616g",
            "name": "imcce.Miriade",
            "description": "A class for querying the\n    `IMCCE/Miriade <http://vo.imcce.fr/webservices/miriade/>`_ service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e647e08144e1a4e6e05323425d046e21cab4459ae62bd6ca087bba963ddc700e",
            "fields": [
                {
                    "id": "rzdz13uk",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3lw42vrs",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g52nssbg",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.imcce.Miriade",
                    "defaultValue": "astroquery.imcce.Miriade",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0r99afin",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nij4dnxs",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "56s03pwj",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_rdnjuke",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.imcce",
                    "defaultValue": "astroquery.imcce",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "odl9ji8s",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0k4tbbnh",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "vq5kp7k_",
            "name": "MiriadeClass.get_ephemerides",
            "description": "Queries the service and returns a table object.\n    \n    Query the\n    `IMCCE Miriade <http://vo.imcce.fr/webservices/miriade/>`_\n    `ephemcc <http://vo.imcce.fr/webservices/miriade/?ephemcc>`_\n    service.\n    \n    \n    Parameters\n    ----------\n    \n    targetname : str\n        Name of the target to be queried.\n    \n    objtype : str, optional\n        Type of the object to be queried. Available are: ``'asteroid'``,\n        ``'comet'``, ``'dwarf planet'``, ``'planet'``, ``'satellite'``.\n        Default: ``'asteroid'``\n    \n    epoch : `~astropy.time.Time` object, float, str,``None``, optional\n        Start epoch of the query. If a float is provided, it is\n        expected to be a Julian Date; if a str is provided, it is\n        expected to be an iso date of the form\n        ``'YYYY-MM-DD HH-MM-SS'``. If ``None`` is provided, the\n        current date and time are used as epoch. Default: ``None``\n    \n    epoch_step : str, optional\n        Step size for ephemerides calculation. Must consist of a decimal\n        number followed by a single character: (d)ays, (h)ours,\n        (m)inutes or (s)econds. Default: ``'1d'``\n    \n    epoch_nsteps : int, optional\n        Number of increments of ``epoch_step`` starting from ``epoch``\n        for which ephemerides are calculated. Maximum number of steps\n        is 5000. Default: 1\n    \n    location : str, optional\n        Location of the observer on Earth as a code or a set of\n        coordinates. See the\n        `Miriade manual <http://vo.imcce.fr/webservices/miriade/?documentation#field_7>`_\n        for details. Default: geocentric location (``'500'``)\n    \n    coordtype : int, optional\n        Type of coordinates to be calculated: ``1``: spherical, ``2``:\n        rectangular, ``3``: local coordinates (azimuth and elevation),\n        ``4``: hour angle coordinates, ``5``: dedicated to observation,\n        ``6``: dedicated to AO observation. Default: ``1``\n    \n    timescale : str, optional\n        The time scale used in the computation of the ephemerides:\n        ``'UTC'`` or ``'TT'``. Default: ``'UTC'``\n    \n    planetary_theory : str, optional\n        Planetary ephemerides set to be utilized in the calculations:\n        ``'INPOP'``, ``'DE405'``, ``'DE406'``. Default: ``'INPOP'``\n    \n    ephtype : int, optional\n        Type of ephemerides to be calculated: ``1``: astrometric J2000,\n        ``2``: apparent of the date, ``3``: mean of the date,\n        ``4``: mean J2000, Default: ``1``\n    \n    refplane : str, optional\n        Reference plane: ``'equator'`` or ``'ecliptic'``. Default:\n        ``'equator'``\n    \n    elements : str, optional\n        Set of osculating elements to be used in the calculations:\n        ``'ASTORB'`` or ``'MPCORB'``. Default: ``'ASTORB'``\n    \n    radial_velocity : bool, optional\n        Calculate additional information on the target's radial velocity.\n        Default: ``False``\n    \n    get_query_payload : bool, optional\n        When set to ``True`` the method returns the HTTP request\n        parameters as a dict, default: ``False``\n    \n    get_raw_response : bool, optional\n        Return raw data as obtained by Miriade without parsing the\n        data into a table, default: ``False``\n    \n    cache : bool, optional\n        If ``True`` the query will be cached. Default: ``True``\n    \n    \n    Notes\n    -----\n    \n    The following parameters can be queried using this function. Note\n    that different ``coordtype`` setting provide different sets of\n    parameters; number in parentheses denote which ``coordtype``\n    settings include the parameters.\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | ``target``       | Target name (str, 1, 2, 3, 4, 5, 6 )          |\n    +------------------+-----------------------------------------------+\n    | ``epoch``        | Ephemerides epoch (JD, float, 1, 2, 3, 4, 5,  |\n    |                  | 6)                                            |\n    +------------------+-----------------------------------------------+\n    | ``RA``           | Target RA at ``ephtype`` (deg, float, 1)      |\n    +------------------+-----------------------------------------------+\n    | ``DEC``          | Target declination at ``ephtype`` (deg,       |\n    |                  | float, 1, 4, 5)                               |\n    +------------------+-----------------------------------------------+\n    | ``RAJ2000``      | Target RA at J2000 (deg, float, 5, 6)         |\n    +------------------+-----------------------------------------------+\n    | ``DECJ2000``     | Target declination at J2000 (deg, float, 5, 6)|\n    +------------------+-----------------------------------------------+\n    | ``AZ``           | Target azimuth (deg, float, 3, 5)             |\n    +------------------+-----------------------------------------------+\n    | ``EL``           | Target elevation (deg, float, 3, 5)           |\n    +------------------+-----------------------------------------------+\n    | ``delta``        | Distance from observer (au, float, 1, 2, 3,   |\n    |                  | 4, 5, 6)                                      |\n    +------------------+-----------------------------------------------+\n    | ``delta_rate``   | Rate in observer distance (km/s, float,       |\n    |                  | 1, 5, 6)                                      |\n    +------------------+-----------------------------------------------+\n    | ``V``            | Apparent visual magnitude (mag, float, 1, 2,  |\n    |                  | 3, 4, 5, 6)                                   |\n    +------------------+-----------------------------------------------+\n    | ``alpha``        | Solar phase angle (deg, 1, 2, 3, 4, 5, 6)     |\n    +------------------+-----------------------------------------------+\n    | ``elong``        | Solar elongation angle (deg, 1, 2, 3, 4, 5, 6)|\n    +------------------+-----------------------------------------------+\n    | ``RAcosD_rate``  | Rate of motion in RA * cos(DEC) (arcsec/min,  |\n    |                  | float, 1, 5, 6)                               |\n    +------------------+-----------------------------------------------+\n    | ``DEC_rate``     | Rate of motion in DEC (arcsec/min, float, 1,  |\n    |                  | 5, 6)                                         |\n    +------------------+-----------------------------------------------+\n    | ``x``            | X position state vector (au, float, 2)        |\n    +------------------+-----------------------------------------------+\n    | ``y``            | Y position state vector (au, float, 2)        |\n    +------------------+-----------------------------------------------+\n    | ``z``            | Z position state vector (au, float, 2)        |\n    +------------------+-----------------------------------------------+\n    | ``vx``           | X velocity state vector (au/d, float, 2)      |\n    +------------------+-----------------------------------------------+\n    | ``vy``           | Y velocity state vector (au/d, float, 2)      |\n    +------------------+-----------------------------------------------+\n    | ``vz``           | Z velocity state vector (au/d, float, 2)      |\n    +------------------+-----------------------------------------------+\n    | ``rv``           | Radial velocity (km/s, float, 2)              |\n    +------------------+-----------------------------------------------+\n    | ``heldist``      | Target heliocentric distance (au, float, 2,   |\n    |                  | 5, 6)                                         |\n    +------------------+-----------------------------------------------+\n    | ``x_h``          | X heliocentric position vector (au, float, 2) |\n    +------------------+-----------------------------------------------+\n    | ``y_h``          | Y heliocentric position vector (au, float, 2) |\n    +------------------+-----------------------------------------------+\n    | ``z_h``          | Z heliocentric position vector (au, float, 2) |\n    +------------------+-----------------------------------------------+\n    | ``vx_h``         | X heliocentric vel. vector (au/d, float, 2)   |\n    +------------------+-----------------------------------------------+\n    | ``vy_h``         | Y heliocentric vel. vector (au/d, float, 2)   |\n    +------------------+-----------------------------------------------+\n    | ``vz_h``         | Z heliocentric vel. vector (au/d, float, 2)   |\n    +------------------+-----------------------------------------------+\n    | ``hourangle``    | Target hour angle (deg, float, 4, 5)          |\n    +------------------+-----------------------------------------------+\n    | ``siderealtime`` | Local sidereal time (hr, float, 5, 6)         |\n    +------------------+-----------------------------------------------+\n    | ``refraction``   | Atmospheric refraction (arcsec, float, 5, 6)  |\n    +------------------+-----------------------------------------------+\n    | ``airmass``      | Target airmass (float, 5, 6)                  |\n    +------------------+-----------------------------------------------+\n    | ``posunc``       | Positional uncertainty (arcsec, float, 5, 6)  |\n    +------------------+-----------------------------------------------+\n    \n    \n    Examples\n    --------\n    \n    >>> from astroquery.imcce import Miriade\n    >>> from astropy.time import Time\n    >>> epoch = Time('2019-01-01', format='iso')\n    >>> Miriade.get_ephemerides('3552', epoch=epoch)  # doctest: +SKIP\n    <Table masked=True length=1>\n       target          epoch                 RA         ...  DEC_rate   delta_rate\n                         d                  deg         ... arcs / min    km / s\n      bytes20         float64             float64       ...  float64     float64\n    ----------- -------------------- ------------------ ... ---------- ------------\n    Don Quixote            2458484.5 16.105294999999998 ...   -0.25244   31.4752734\n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "06a7ca8eed986c2effd2f88608a4bfafb4bcbe6b88def5c1ca116c992ef2527d",
            "fields": [
                {
                    "id": "5vxooct8",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.imcce.core.MiriadeClass.get_ephemerides object",
                    "type": "Object:astroquery.imcce.core.MiriadeClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j77auw5l",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jdqky187",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "716hi2mk",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.imcce.core.MiriadeClass.get_ephemerides",
                    "defaultValue": "astroquery.imcce.core.MiriadeClass.get_ephemerides",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ilvaj7vn",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mwv1h2c4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "f7ilj40u",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "19cjzs1s",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.imcce.core.MiriadeClass",
                    "defaultValue": "astroquery.imcce.core.MiriadeClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "93y33k0t",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ncqpu5cf",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "v4hbdnb4",
            "name": "MiriadeClass.get_ephemerides_async",
            "description": "Query the\n    `IMCCE Miriade <http://vo.imcce.fr/webservices/miriade/>`_\n    `ephemcc <http://vo.imcce.fr/webservices/miriade/?ephemcc>`_\n    service.\n    \n    \n    Parameters\n    ----------\n    \n    targetname : str\n        Name of the target to be queried.\n    \n    objtype : str, optional\n        Type of the object to be queried. Available are: ``'asteroid'``,\n        ``'comet'``, ``'dwarf planet'``, ``'planet'``, ``'satellite'``.\n        Default: ``'asteroid'``\n    \n    epoch : `~astropy.time.Time` object, float, str,``None``, optional\n        Start epoch of the query. If a float is provided, it is\n        expected to be a Julian Date; if a str is provided, it is\n        expected to be an iso date of the form\n        ``'YYYY-MM-DD HH-MM-SS'``. If ``None`` is provided, the\n        current date and time are used as epoch. Default: ``None``\n    \n    epoch_step : str, optional\n        Step size for ephemerides calculation. Must consist of a decimal\n        number followed by a single character: (d)ays, (h)ours,\n        (m)inutes or (s)econds. Default: ``'1d'``\n    \n    epoch_nsteps : int, optional\n        Number of increments of ``epoch_step`` starting from ``epoch``\n        for which ephemerides are calculated. Maximum number of steps\n        is 5000. Default: 1\n    \n    location : str, optional\n        Location of the observer on Earth as a code or a set of\n        coordinates. See the\n        `Miriade manual <http://vo.imcce.fr/webservices/miriade/?documentation#field_7>`_\n        for details. Default: geocentric location (``'500'``)\n    \n    coordtype : int, optional\n        Type of coordinates to be calculated: ``1``: spherical, ``2``:\n        rectangular, ``3``: local coordinates (azimuth and elevation),\n        ``4``: hour angle coordinates, ``5``: dedicated to observation,\n        ``6``: dedicated to AO observation. Default: ``1``\n    \n    timescale : str, optional\n        The time scale used in the computation of the ephemerides:\n        ``'UTC'`` or ``'TT'``. Default: ``'UTC'``\n    \n    planetary_theory : str, optional\n        Planetary ephemerides set to be utilized in the calculations:\n        ``'INPOP'``, ``'DE405'``, ``'DE406'``. Default: ``'INPOP'``\n    \n    ephtype : int, optional\n        Type of ephemerides to be calculated: ``1``: astrometric J2000,\n        ``2``: apparent of the date, ``3``: mean of the date,\n        ``4``: mean J2000, Default: ``1``\n    \n    refplane : str, optional\n        Reference plane: ``'equator'`` or ``'ecliptic'``. Default:\n        ``'equator'``\n    \n    elements : str, optional\n        Set of osculating elements to be used in the calculations:\n        ``'ASTORB'`` or ``'MPCORB'``. Default: ``'ASTORB'``\n    \n    radial_velocity : bool, optional\n        Calculate additional information on the target's radial velocity.\n        Default: ``False``\n    \n    get_query_payload : bool, optional\n        When set to ``True`` the method returns the HTTP request\n        parameters as a dict, default: ``False``\n    \n    get_raw_response : bool, optional\n        Return raw data as obtained by Miriade without parsing the\n        data into a table, default: ``False``\n    \n    cache : bool, optional\n        If ``True`` the query will be cached. Default: ``True``\n    \n    \n    Notes\n    -----\n    \n    The following parameters can be queried using this function. Note\n    that different ``coordtype`` setting provide different sets of\n    parameters; number in parentheses denote which ``coordtype``\n    settings include the parameters.\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | ``target``       | Target name (str, 1, 2, 3, 4, 5, 6 )          |\n    +------------------+-----------------------------------------------+\n    | ``epoch``        | Ephemerides epoch (JD, float, 1, 2, 3, 4, 5,  |\n    |                  | 6)                                            |\n    +------------------+-----------------------------------------------+\n    | ``RA``           | Target RA at ``ephtype`` (deg, float, 1)      |\n    +------------------+-----------------------------------------------+\n    | ``DEC``          | Target declination at ``ephtype`` (deg,       |\n    |                  | float, 1, 4, 5)                               |\n    +------------------+-----------------------------------------------+\n    | ``RAJ2000``      | Target RA at J2000 (deg, float, 5, 6)         |\n    +------------------+-----------------------------------------------+\n    | ``DECJ2000``     | Target declination at J2000 (deg, float, 5, 6)|\n    +------------------+-----------------------------------------------+\n    | ``AZ``           | Target azimuth (deg, float, 3, 5)             |\n    +------------------+-----------------------------------------------+\n    | ``EL``           | Target elevation (deg, float, 3, 5)           |\n    +------------------+-----------------------------------------------+\n    | ``delta``        | Distance from observer (au, float, 1, 2, 3,   |\n    |                  | 4, 5, 6)                                      |\n    +------------------+-----------------------------------------------+\n    | ``delta_rate``   | Rate in observer distance (km/s, float,       |\n    |                  | 1, 5, 6)                                      |\n    +------------------+-----------------------------------------------+\n    | ``V``            | Apparent visual magnitude (mag, float, 1, 2,  |\n    |                  | 3, 4, 5, 6)                                   |\n    +------------------+-----------------------------------------------+\n    | ``alpha``        | Solar phase angle (deg, 1, 2, 3, 4, 5, 6)     |\n    +------------------+-----------------------------------------------+\n    | ``elong``        | Solar elongation angle (deg, 1, 2, 3, 4, 5, 6)|\n    +------------------+-----------------------------------------------+\n    | ``RAcosD_rate``  | Rate of motion in RA * cos(DEC) (arcsec/min,  |\n    |                  | float, 1, 5, 6)                               |\n    +------------------+-----------------------------------------------+\n    | ``DEC_rate``     | Rate of motion in DEC (arcsec/min, float, 1,  |\n    |                  | 5, 6)                                         |\n    +------------------+-----------------------------------------------+\n    | ``x``            | X position state vector (au, float, 2)        |\n    +------------------+-----------------------------------------------+\n    | ``y``            | Y position state vector (au, float, 2)        |\n    +------------------+-----------------------------------------------+\n    | ``z``            | Z position state vector (au, float, 2)        |\n    +------------------+-----------------------------------------------+\n    | ``vx``           | X velocity state vector (au/d, float, 2)      |\n    +------------------+-----------------------------------------------+\n    | ``vy``           | Y velocity state vector (au/d, float, 2)      |\n    +------------------+-----------------------------------------------+\n    | ``vz``           | Z velocity state vector (au/d, float, 2)      |\n    +------------------+-----------------------------------------------+\n    | ``rv``           | Radial velocity (km/s, float, 2)              |\n    +------------------+-----------------------------------------------+\n    | ``heldist``      | Target heliocentric distance (au, float, 2,   |\n    |                  | 5, 6)                                         |\n    +------------------+-----------------------------------------------+\n    | ``x_h``          | X heliocentric position vector (au, float, 2) |\n    +------------------+-----------------------------------------------+\n    | ``y_h``          | Y heliocentric position vector (au, float, 2) |\n    +------------------+-----------------------------------------------+\n    | ``z_h``          | Z heliocentric position vector (au, float, 2) |\n    +------------------+-----------------------------------------------+\n    | ``vx_h``         | X heliocentric vel. vector (au/d, float, 2)   |\n    +------------------+-----------------------------------------------+\n    | ``vy_h``         | Y heliocentric vel. vector (au/d, float, 2)   |\n    +------------------+-----------------------------------------------+\n    | ``vz_h``         | Z heliocentric vel. vector (au/d, float, 2)   |\n    +------------------+-----------------------------------------------+\n    | ``hourangle``    | Target hour angle (deg, float, 4, 5)          |\n    +------------------+-----------------------------------------------+\n    | ``siderealtime`` | Local sidereal time (hr, float, 5, 6)         |\n    +------------------+-----------------------------------------------+\n    | ``refraction``   | Atmospheric refraction (arcsec, float, 5, 6)  |\n    +------------------+-----------------------------------------------+\n    | ``airmass``      | Target airmass (float, 5, 6)                  |\n    +------------------+-----------------------------------------------+\n    | ``posunc``       | Positional uncertainty (arcsec, float, 5, 6)  |\n    +------------------+-----------------------------------------------+\n    \n    \n    Examples\n    --------\n    \n    >>> from astroquery.imcce import Miriade\n    >>> from astropy.time import Time\n    >>> epoch = Time('2019-01-01', format='iso')\n    >>> Miriade.get_ephemerides('3552', epoch=epoch)  # doctest: +SKIP\n    <Table masked=True length=1>\n       target          epoch                 RA         ...  DEC_rate   delta_rate\n                         d                  deg         ... arcs / min    km / s\n      bytes20         float64             float64       ...  float64     float64\n    ----------- -------------------- ------------------ ... ---------- ------------\n    Don Quixote            2458484.5 16.105294999999998 ...   -0.25244   31.4752734",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a6dee46ad4e1c85f6d248a33bbdb4eac6acb6021b4f71f3d38b963782bdfcbf6",
            "fields": [
                {
                    "id": "s_zk3rky",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.imcce.core.MiriadeClass.get_ephemerides_async object",
                    "type": "Object:astroquery.imcce.core.MiriadeClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uk9t76rj",
                    "encoding": "",
                    "name": "targetname",
                    "value": "",
                    "defaultValue": "",
                    "description": "Name of the target to be queried.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "01tkm98k",
                    "encoding": "",
                    "name": "objtype",
                    "value": "asteroid",
                    "defaultValue": "asteroid",
                    "description": "Type of the object to be queried. Available are: ``'asteroid'``,\n``'comet'``, ``'dwarf planet'``, ``'planet'``, ``'satellite'``.\nDefault: ``'asteroid'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g3iy6i9k",
                    "encoding": "",
                    "name": "epoch",
                    "value": "",
                    "defaultValue": "",
                    "description": "Start epoch of the query. If a float is provided, it is\nexpected to be a Julian Date; if a str is provided, it is\nexpected to be an iso date of the form\n``'YYYY-MM-DD HH-MM-SS'``. If ``None`` is provided, the\ncurrent date and time are used as epoch. Default: ``None``",
                    "type": "astropy.time.Time object, float, str,None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pkdqe955",
                    "encoding": "",
                    "name": "epoch_step",
                    "value": "1d",
                    "defaultValue": "1d",
                    "description": "Step size for ephemerides calculation. Must consist of a decimal\nnumber followed by a single character: (d)ays, (h)ours,\n(m)inutes or (s)econds. Default: ``'1d'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cvuvt1zz",
                    "encoding": "",
                    "name": "epoch_nsteps",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of increments of ``epoch_step`` starting from ``epoch``\nfor which ephemerides are calculated. Maximum number of steps\nis 5000. Default: 1",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6qlkx1ef",
                    "encoding": "",
                    "name": "location",
                    "value": 500,
                    "defaultValue": 500,
                    "description": "Location of the observer on Earth as a code or a set of\ncoordinates. See the\n`Miriade manual <http://vo.imcce.fr/webservices/miriade/?documentation#field_7>`_\nfor details. Default: geocentric location (``'500'``)",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h12jhh4t",
                    "encoding": "",
                    "name": "coordtype",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Type of coordinates to be calculated: ``1``: spherical, ``2``:\nrectangular, ``3``: local coordinates (azimuth and elevation),\n``4``: hour angle coordinates, ``5``: dedicated to observation,\n``6``: dedicated to AO observation. Default: ``1``",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cwta22gr",
                    "encoding": "",
                    "name": "timescale",
                    "value": "UTC",
                    "defaultValue": "UTC",
                    "description": "The time scale used in the computation of the ephemerides:\n``'UTC'`` or ``'TT'``. Default: ``'UTC'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ahorb3gy",
                    "encoding": "",
                    "name": "planetary_theory",
                    "value": "INPOP",
                    "defaultValue": "INPOP",
                    "description": "Planetary ephemerides set to be utilized in the calculations:\n``'INPOP'``, ``'DE405'``, ``'DE406'``. Default: ``'INPOP'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w8o3zmt6",
                    "encoding": "",
                    "name": "ephtype",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Type of ephemerides to be calculated: ``1``: astrometric J2000,\n``2``: apparent of the date, ``3``: mean of the date,\n``4``: mean J2000, Default: ``1``",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8w0f_jld",
                    "encoding": "",
                    "name": "refplane",
                    "value": "equator",
                    "defaultValue": "equator",
                    "description": "Reference plane: ``'equator'`` or ``'ecliptic'``. Default:\n``'equator'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kywdqcgl",
                    "encoding": "",
                    "name": "elements",
                    "value": "ASTORB",
                    "defaultValue": "ASTORB",
                    "description": "Set of osculating elements to be used in the calculations:\n``'ASTORB'`` or ``'MPCORB'``. Default: ``'ASTORB'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6ay0va9d",
                    "encoding": "",
                    "name": "radial_velocity",
                    "value": false,
                    "defaultValue": false,
                    "description": "Calculate additional information on the target's radial velocity.\nDefault: ``False``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qzmvuikj",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to ``True`` the method returns the HTTP request\nparameters as a dict, default: ``False``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pn4_59mx",
                    "encoding": "",
                    "name": "get_raw_response",
                    "value": false,
                    "defaultValue": false,
                    "description": "Return raw data as obtained by Miriade without parsing the\ndata into a table, default: ``False``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "72hdr1q_",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "If ``True`` the query will be cached. Default: ``True``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v5cifypd",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.imcce.core.MiriadeClass.get_ephemerides_async",
                    "defaultValue": "astroquery.imcce.core.MiriadeClass.get_ephemerides_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fny6ohii",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ld4q0wq0",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "xf5c4ywh",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3rnrrz1e",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.imcce.core.MiriadeClass",
                    "defaultValue": "astroquery.imcce.core.MiriadeClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yxw4kkia",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7vj6qzpj",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "nr2lk_gb",
            "name": "imcce.Skybot",
            "description": "A class for querying the `IMCCE SkyBoT\n    <http://vo.imcce.fr/webservices/skybot>`_ service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6a54b83115102c47ecf866ecc818a23739b56f4730d0b34a95c61b416e540485",
            "fields": [
                {
                    "id": "dm3fleki",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y9uec966",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m42ozon6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.imcce.Skybot",
                    "defaultValue": "astroquery.imcce.Skybot",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "svdft1hj",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4mxrdpwb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "uifi5xp1",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dlzui_24",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.imcce",
                    "defaultValue": "astroquery.imcce",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yo8az1o7",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ogyaz_fm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "vorls4tw",
            "name": "SkybotClass.cone_search",
            "description": "Queries the service and returns a table object.\n    \n    This method queries the IMCCE\n    `SkyBoT <http://vo.imcce.fr/webservices/skybot/?conesearch>`_\n    cone search service and produces a `~astropy.table.QTable` object\n    containing all Solar System bodies that might be in the cone\n    defined by the cone center coordinates and epoch provided.\n    \n    Parameters\n    ----------\n    coo : `~astropy.coordinates.SkyCoord` object or tuple\n        Center coordinates of the search cone in ICRS coordinates. If\n        provided as tuple, the input is excepted as (right ascension\n        in degrees, declination in degrees).\n    rad : `~astropy.units.Quantity` object or float\n        Radius of the search cone. If no units are provided (input as\n        float), degrees are assumed. The maximum search radius is 10\n        degrees; if this\n        maximum radius is exceeded, it will be clipped and a warning\n        will be provided to the user.\n    epoch : `~astropy.time.Time` object, float, or string\n        Epoch of search process in UT. If provided as float, it is\n        interpreted as Julian Date, if provided as string, it is\n        interpreted as date in the form ``'YYYY-MM-DD HH-MM-SS'``.\n    location : int or str, optional\n        Location of the observer on Earth as defined in the official\n        `list of IAU codes\n        <https://www.minorplanetcenter.net/iau/lists/ObsCodes.html>`_.\n        Default: geocentric location (``'500'``)\n    position_error : `~astropy.units.Quantity` or float, optional\n        Maximum positional error for targets to be queried. If no\n        unit is provided, arcseconds are assumed. Maximum positional\n        error is 120 arcseconds, larger values are clipped and warning\n        will be provided to the user. Default: 120 arcseconds\n    find_planets : boolean, optional\n        If ``True``, planets will be included in the search. Default:\n        ``True``\n    find_asteroids : boolean, optional\n        If ``True``, asteroids will be included in the search. Default:\n        ``True``\n    find_comets : boolean, optional\n        If ``True``, comets will be included in the search. Default:\n        ``True``\n    get_query_payload : boolean, optional\n        Returns the query payload only and performs no query.\n        Default: ``False``\n    get_raw_response : boolean, optional\n        Returns the raw response as provided by the IMCCE server instead\n        of the parsed output. Default: ``False``\n    cache : boolean, optional\n        Cache this specfific query so it might be retrieved faster in\n        the future. Default: ``True``\n    \n    Notes\n    -----\n    The following parameters are queried from the SkyBoT service:\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | ``'Number'``     | Target Number (``-1`` if none provided, int)  |\n    +------------------+-----------------------------------------------+\n    | ``'Name'``       | Target Name (str)                             |\n    +------------------+-----------------------------------------------+\n    | ``'RA'``         | Target RA (J2000, deg, float)                 |\n    +------------------+-----------------------------------------------+\n    | ``'DEC'``        | Target declination (J2000, deg, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'Type'``       | Target dynamical/physical type (str)          |\n    +------------------+-----------------------------------------------+\n    | ``'V'``          | Target apparent brightness (V-band, mag,      |\n    |                  | float)                                        |\n    +------------------+-----------------------------------------------+\n    | ``'posunc'``     | Positional uncertainty (arcsec, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'centerdist'`` | Angular distance of target from cone center   |\n    |                  | (arcsec, float)                               |\n    +------------------+-----------------------------------------------+\n    | ``'RA_rate'``    | RA rate of motion (arcsec/hr, float)          |\n    +------------------+-----------------------------------------------+\n    | ``'DEC_rate'``   | Declination rate of motion (arcsec/hr, float) |\n    +------------------+-----------------------------------------------+\n    | ``'geodist'``    | Geocentric distance of target (au, float)     |\n    +------------------+-----------------------------------------------+\n    | ``'heliodist'``  | Heliocentric distance of target (au, float)   |\n    +------------------+-----------------------------------------------+\n    | ``'alpha'``      | Solar phase angle (deg, float)                |\n    +------------------+-----------------------------------------------+\n    | ``'elong'``      | Solar elongation angle (deg, float)           |\n    +------------------+-----------------------------------------------+\n    | ``'x'``          | Target equatorial vector x (au, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'y'``          | Target equatorial vector y (au, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'z'``          | Target equatorial vector z (au, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'vx'``         | Target velocity vector x (au/d, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'vy'``         | Target velocity vector y (au/d, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'vz'``         | Target velocity vector z (au/d, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'epoch'``      | Ephemerides epoch (JD, float)                 |\n    +------------------+-----------------------------------------------+\n    \n    Examples\n    --------\n    >>> from astroquery.imcce import Skybot\n    >>> from astropy.coordinates import SkyCoord\n    >>> from astropy.time import Time\n    >>> import astropy.units as u\n    >>> field = SkyCoord(1*u.deg, 1*u.deg)\n    >>> epoch = Time('2019-05-29 21:42', format='iso')\n    >>> Skybot.cone_search(field, 0.1*u.deg, epoch)  # doctest: +SKIP\n    <QTable length=2>\n    Number    Name           RA         ...      vy          vz       epoch\n                            deg         ...    AU / d      AU / d       d\n    int64     str9        float64       ...   float64     float64    float64\n    ------ --------- ------------------ ... ----------- ----------- ---------\n    180969 2005 MM39 1.0019566666666666 ...  0.00977568 0.003022634 2458630.0\n    107804 2001 FV58 1.0765258333333332 ... 0.006551369 0.003846177 2458630.0\n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c7b7dc9cd45a39b04d8c26c5b6ce3b3a40bbfb7850336f5f64fddda7ed2eb95b",
            "fields": [
                {
                    "id": "r9xjnuea",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.imcce.core.SkybotClass.cone_search object",
                    "type": "Object:astroquery.imcce.core.SkybotClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gzp8xv3l",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rx9y0emz",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6ujklqy4",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.imcce.core.SkybotClass.cone_search",
                    "defaultValue": "astroquery.imcce.core.SkybotClass.cone_search",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "knfhbelo",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sbxni3wg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "uns_l140",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "frq_nlt1",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.imcce.core.SkybotClass",
                    "defaultValue": "astroquery.imcce.core.SkybotClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7fhp20nv",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r9cwfqq9",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "399hp4hn",
            "name": "SkybotClass.cone_search_async",
            "description": "This method queries the IMCCE\n    `SkyBoT <http://vo.imcce.fr/webservices/skybot/?conesearch>`_\n    cone search service and produces a `~astropy.table.QTable` object\n    containing all Solar System bodies that might be in the cone\n    defined by the cone center coordinates and epoch provided.\n    \n    Parameters\n    ----------\n    coo : `~astropy.coordinates.SkyCoord` object or tuple\n        Center coordinates of the search cone in ICRS coordinates. If\n        provided as tuple, the input is excepted as (right ascension\n        in degrees, declination in degrees).\n    rad : `~astropy.units.Quantity` object or float\n        Radius of the search cone. If no units are provided (input as\n        float), degrees are assumed. The maximum search radius is 10\n        degrees; if this\n        maximum radius is exceeded, it will be clipped and a warning\n        will be provided to the user.\n    epoch : `~astropy.time.Time` object, float, or string\n        Epoch of search process in UT. If provided as float, it is\n        interpreted as Julian Date, if provided as string, it is\n        interpreted as date in the form ``'YYYY-MM-DD HH-MM-SS'``.\n    location : int or str, optional\n        Location of the observer on Earth as defined in the official\n        `list of IAU codes\n        <https://www.minorplanetcenter.net/iau/lists/ObsCodes.html>`_.\n        Default: geocentric location (``'500'``)\n    position_error : `~astropy.units.Quantity` or float, optional\n        Maximum positional error for targets to be queried. If no\n        unit is provided, arcseconds are assumed. Maximum positional\n        error is 120 arcseconds, larger values are clipped and warning\n        will be provided to the user. Default: 120 arcseconds\n    find_planets : boolean, optional\n        If ``True``, planets will be included in the search. Default:\n        ``True``\n    find_asteroids : boolean, optional\n        If ``True``, asteroids will be included in the search. Default:\n        ``True``\n    find_comets : boolean, optional\n        If ``True``, comets will be included in the search. Default:\n        ``True``\n    get_query_payload : boolean, optional\n        Returns the query payload only and performs no query.\n        Default: ``False``\n    get_raw_response : boolean, optional\n        Returns the raw response as provided by the IMCCE server instead\n        of the parsed output. Default: ``False``\n    cache : boolean, optional\n        Cache this specfific query so it might be retrieved faster in\n        the future. Default: ``True``\n    \n    Notes\n    -----\n    The following parameters are queried from the SkyBoT service:\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | ``'Number'``     | Target Number (``-1`` if none provided, int)  |\n    +------------------+-----------------------------------------------+\n    | ``'Name'``       | Target Name (str)                             |\n    +------------------+-----------------------------------------------+\n    | ``'RA'``         | Target RA (J2000, deg, float)                 |\n    +------------------+-----------------------------------------------+\n    | ``'DEC'``        | Target declination (J2000, deg, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'Type'``       | Target dynamical/physical type (str)          |\n    +------------------+-----------------------------------------------+\n    | ``'V'``          | Target apparent brightness (V-band, mag,      |\n    |                  | float)                                        |\n    +------------------+-----------------------------------------------+\n    | ``'posunc'``     | Positional uncertainty (arcsec, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'centerdist'`` | Angular distance of target from cone center   |\n    |                  | (arcsec, float)                               |\n    +------------------+-----------------------------------------------+\n    | ``'RA_rate'``    | RA rate of motion (arcsec/hr, float)          |\n    +------------------+-----------------------------------------------+\n    | ``'DEC_rate'``   | Declination rate of motion (arcsec/hr, float) |\n    +------------------+-----------------------------------------------+\n    | ``'geodist'``    | Geocentric distance of target (au, float)     |\n    +------------------+-----------------------------------------------+\n    | ``'heliodist'``  | Heliocentric distance of target (au, float)   |\n    +------------------+-----------------------------------------------+\n    | ``'alpha'``      | Solar phase angle (deg, float)                |\n    +------------------+-----------------------------------------------+\n    | ``'elong'``      | Solar elongation angle (deg, float)           |\n    +------------------+-----------------------------------------------+\n    | ``'x'``          | Target equatorial vector x (au, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'y'``          | Target equatorial vector y (au, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'z'``          | Target equatorial vector z (au, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'vx'``         | Target velocity vector x (au/d, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'vy'``         | Target velocity vector y (au/d, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'vz'``         | Target velocity vector z (au/d, float)        |\n    +------------------+-----------------------------------------------+\n    | ``'epoch'``      | Ephemerides epoch (JD, float)                 |\n    +------------------+-----------------------------------------------+\n    \n    Examples\n    --------\n    >>> from astroquery.imcce import Skybot\n    >>> from astropy.coordinates import SkyCoord\n    >>> from astropy.time import Time\n    >>> import astropy.units as u\n    >>> field = SkyCoord(1*u.deg, 1*u.deg)\n    >>> epoch = Time('2019-05-29 21:42', format='iso')\n    >>> Skybot.cone_search(field, 0.1*u.deg, epoch)  # doctest: +SKIP\n    <QTable length=2>\n    Number    Name           RA         ...      vy          vz       epoch\n                            deg         ...    AU / d      AU / d       d\n    int64     str9        float64       ...   float64     float64    float64\n    ------ --------- ------------------ ... ----------- ----------- ---------\n    180969 2005 MM39 1.0019566666666666 ...  0.00977568 0.003022634 2458630.0\n    107804 2001 FV58 1.0765258333333332 ... 0.006551369 0.003846177 2458630.0",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "747a127fda9b7d07515b91016ac7d867c38d110e0090dcd98c46ef549e9dccdc",
            "fields": [
                {
                    "id": "kxc0url_",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.imcce.core.SkybotClass.cone_search_async object",
                    "type": "Object:astroquery.imcce.core.SkybotClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y6kx_7f3",
                    "encoding": "",
                    "name": "coo",
                    "value": "",
                    "defaultValue": "",
                    "description": "Center coordinates of the search cone in ICRS coordinates. If\nprovided as tuple, the input is excepted as (right ascension\nin degrees, declination in degrees).",
                    "type": "astropy.coordinates.SkyCoord object or tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3_i0sj8b",
                    "encoding": "",
                    "name": "rad",
                    "value": "",
                    "defaultValue": "",
                    "description": "Radius of the search cone. If no units are provided (input as\nfloat), degrees are assumed. The maximum search radius is 10\ndegrees; if this\nmaximum radius is exceeded, it will be clipped and a warning\nwill be provided to the user.",
                    "type": "astropy.units.Quantity object or float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b3t47mkt",
                    "encoding": "",
                    "name": "epoch",
                    "value": "",
                    "defaultValue": "",
                    "description": "Epoch of search process in UT. If provided as float, it is\ninterpreted as Julian Date, if provided as string, it is\ninterpreted as date in the form ``'YYYY-MM-DD HH-MM-SS'``.",
                    "type": "astropy.time.Time object, float, or string",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eksrncf8",
                    "encoding": "",
                    "name": "location",
                    "value": "500",
                    "defaultValue": "500",
                    "description": "Location of the observer on Earth as defined in the official\n`list of IAU codes\n<https://www.minorplanetcenter.net/iau/lists/ObsCodes.html>`_.\nDefault: geocentric location (``'500'``)",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dfmbu1ik",
                    "encoding": "",
                    "name": "position_error",
                    "value": 120,
                    "defaultValue": 120,
                    "description": "Maximum positional error for targets to be queried. If no\nunit is provided, arcseconds are assumed. Maximum positional\nerror is 120 arcseconds, larger values are clipped and warning\nwill be provided to the user. Default: 120 arcseconds",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p04hg102",
                    "encoding": "",
                    "name": "find_planets",
                    "value": true,
                    "defaultValue": true,
                    "description": "If ``True``, planets will be included in the search. Default:\n``True``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_2lqnqyp",
                    "encoding": "",
                    "name": "find_asteroids",
                    "value": true,
                    "defaultValue": true,
                    "description": "If ``True``, asteroids will be included in the search. Default:\n``True``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "37z7gngn",
                    "encoding": "",
                    "name": "find_comets",
                    "value": true,
                    "defaultValue": true,
                    "description": "If ``True``, comets will be included in the search. Default:\n``True``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u39k12w2",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "Returns the query payload only and performs no query.\nDefault: ``False``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sk_cqwx3",
                    "encoding": "",
                    "name": "get_raw_response",
                    "value": false,
                    "defaultValue": false,
                    "description": "Returns the raw response as provided by the IMCCE server instead\nof the parsed output. Default: ``False``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "top8hi3g",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "Cache this specfific query so it might be retrieved faster in\nthe future. Default: ``True``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "adnyct89",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.imcce.core.SkybotClass.cone_search_async",
                    "defaultValue": "astroquery.imcce.core.SkybotClass.cone_search_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mp44nzmc",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "854ewguc",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "41_by594",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oljxewhw",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.imcce.core.SkybotClass",
                    "defaultValue": "astroquery.imcce.core.SkybotClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7igavi00",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "muu091u9",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "n7pg4vqz",
            "name": "core.Miriade",
            "description": "A class for querying the\n    `IMCCE/Miriade <http://vo.imcce.fr/webservices/miriade/>`_ service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f1feb79b957ecef1dd1b6a41946cd7ce8766125ed866020253bd4dcbb6b0b0c9",
            "fields": [
                {
                    "id": "hp3v3ti1",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ppw6mbol",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ox8q3586",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.imcce.core.Miriade",
                    "defaultValue": "astroquery.imcce.core.Miriade",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nvb2mj88",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1mzh1nyp",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "9aq61flk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p35zp_e7",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.imcce.core",
                    "defaultValue": "astroquery.imcce.core",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mr_crkpc",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ehdy735_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "u8cb2pyu",
            "name": "core.Skybot",
            "description": "A class for querying the `IMCCE SkyBoT\n    <http://vo.imcce.fr/webservices/skybot>`_ service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8b997fba26dc9810550796e14cb45d3d3bc27a5793af1f793d5a68b7be7f1d88",
            "fields": [
                {
                    "id": "i74rdsqf",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mg2wj50t",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7gzn408x",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.imcce.core.Skybot",
                    "defaultValue": "astroquery.imcce.core.Skybot",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eiucwwj6",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fceub_py",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "_ndmmgto",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i8o6fhdg",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.imcce.core",
                    "defaultValue": "astroquery.imcce.core",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kclcvnw6",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mhuy4q8w",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}