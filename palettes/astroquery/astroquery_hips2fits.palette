{
    "modelData": {
        "filePath": "astroquery_hips2fits.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "CDS hips2fits Query Tool\n------------------------\n\n:Author: Matthieu Baumann (matthieu.baumann@astro.unistra.fr)\n\nThis package is for querying the CDS hips2fits service, primarily hosted at:\n\n* http://alasky.u-strasbg.fr/hips-image-services/hips2fits\n* http://alaskybis.u-strasbg.fr/hips-image-services/hips2fits (mirror)\n\nNote: If the access to hips2fits was helpful for your research\nwork, the following acknowledgment would be appreciated::\n\n  This research has made use of the hips2fits, a tool developed at CDS, Strasbourg, France aiming at extracting\n  FITS images from HiPS sky maps with respect to a WCS.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.2",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "astroquery",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "f1f5ee46f8c169177d24424daba4d1073a0de75110e5e010579eb42929555054",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755099102.070945,
        "numLGNodes": 7
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "reqjgd7x",
            "name": "hips2fits.hips2fits",
            "description": "Query the `CDS hips2fits service <http://alasky.u-strasbg.fr/hips-image-services/hips2fits>`_\n    \n    The `CDS hips2fits service <http://alasky.u-strasbg.fr/hips-image-services/hips2fits>`_ offers a way\n    to extract FITS images from HiPS sky maps. HiPS is an IVOA standard that combines individual images in\n    order to produce a progressive hierarchical sky map describing the whole survey. Please refer to the\n    `IVOA paper <http://www.ivoa.net/documents/HiPS/20170519/REC-HIPS-1.0-20170519.pdf>`_ for more info.\n    \n    Given an astropy user-defined WCS with an HiPS name\n    (see the list of valid HiPS names hosted in CDS `here <http://aladin.unistra.fr/hips/list>`_),\n    hips2fits will return you the corresponding FITS image (JPG/PNG output formats are also implemented).\n    \n    This package implements two methods:\n    \n    * :meth:`~astroquery.hips2fits.hips2fitsClass.query_with_wcs` extracting a FITS image from a HiPS and an astropy ``wcs.WCS``.\n        See `here <http://aladin.unistra.fr/hips/list>`_ all the valid HiPS names hosted in CDS.\n    * :meth:`~astroquery.hips2fits.hips2fitsClass.query` extracting a FITS image from a HiPS given the output image pixel size, the center of projection, the type of projection and the field of view.\n        See `here <http://aladin.unistra.fr/hips/list>`_ all the valid HiPS names hosted in CDS.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b34b20a0e48bebe8da83dfc4d6e1fb87e75995f0366466fcede23255b7963f64",
            "fields": [
                {
                    "id": "6yo29p9j",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f7gq_a9s",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mr8ocgbx",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.hips2fits.hips2fits",
                    "defaultValue": "astroquery.hips2fits.hips2fits",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y57ptcsf",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vwzkr8f0",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "916koda2",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q5t0ll2z",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.hips2fits",
                    "defaultValue": "astroquery.hips2fits",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9cx_r3y4",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "677d1uab",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "dvh_0aew",
            "name": "hips2fitsClass.__init__",
            "description": "\nQuery the `CDS hips2fits service <http://alasky.u-strasbg.fr/hips-image-services/hips2fits>`_\n    \n    The `CDS hips2fits service <http://alasky.u-strasbg.fr/hips-image-services/hips2fits>`_ offers a way\n    to extract FITS images from HiPS sky maps. HiPS is an IVOA standard that combines individual images in\n    order to produce a progressive hierarchical sky map describing the whole survey. Please refer to the\n    `IVOA paper <http://www.ivoa.net/documents/HiPS/20170519/REC-HIPS-1.0-20170519.pdf>`_ for more info.\n    \n    Given an astropy user-defined WCS with an HiPS name\n    (see the list of valid HiPS names hosted in CDS `here <http://aladin.unistra.fr/hips/list>`_),\n    hips2fits will return you the corresponding FITS image (JPG/PNG output formats are also implemented).\n    \n    This package implements two methods:\n    \n    * :meth:`~astroquery.hips2fits.hips2fitsClass.query_with_wcs` extracting a FITS image from a HiPS and an astropy ``wcs.WCS``.\n        See `here <http://aladin.unistra.fr/hips/list>`_ all the valid HiPS names hosted in CDS.\n    * :meth:`~astroquery.hips2fits.hips2fitsClass.query` extracting a FITS image from a HiPS given the output image pixel size, the center of projection, the type of projection and the field of view.\n        See `here <http://aladin.unistra.fr/hips/list>`_ all the valid HiPS names hosted in CDS.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6a6aabb76c07bbdfe5267598221cb1e10628d1c982821dbe7bbd1901cb8237f9",
            "fields": [
                {
                    "id": "dzt9yq5v",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to hips2fitsClass object",
                    "type": "Object:astroquery.hips2fits.core.hips2fitsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4886p4k2",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mzukh76q",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass.__init__",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f2lco1d0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "godudlfv",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "qwqwzylt",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ceuohrrs",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ld6rlt6y",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iunzkazp",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "8ankygt3",
            "name": "hips2fitsClass.query",
            "description": "Query the `CDS hips2fits service <http://alasky.u-strasbg.fr/hips-image-services/hips2fits>`_.\n    \n    If you have not any WCS, you can call this method by passing:\n    * The width/height size of the output pixel image\n    * The center of projection in world coordinates (ra, dec)\n    * The fov angle in world coordinates\n    * The rotation angle of the projection\n    * The name of the projection. All `astropy projections <https://docs.astropy.org/en/stable/wcs/#supported-projections>`_ are supported:\n    \n    Parameters\n    ----------\n    hips : str\n        ID or keyword identifying the HiPS to use.\n        If multiple HiPS surveys match, one is chosen randomly.\n        See the list of valid HiPS ids hosted by the CDS `here <http://aladin.unistra.fr/hips/list>`_.\n    width : int\n        Width in pixels of the output image.\n    height : int\n        Height in pixels of the output image.\n    projection : str\n        Name of the requested projection, eg: SIN, TAN, MOL, AIT, CAR, CEA, STG     Compulsory if wcs is not provided.\n        See `this page <https://docs.astropy.org/en/stable/wcs/#supported-projections>`_ for an exhaustive list.\n    fov : `~astropy.coordinates.Angle`\n        Size (FoV) of the cutout on the sky.\n        This is the size of the largest dimension of the image.\n    ra : `~astropy.coordinates.Longitude`\n        Right ascension of the center of the output image.\n    dec : `~astropy.coordinates.Latitude`\n        Declination of the center of the output image.\n    coordsys : str, optional\n        Coordinate frame system to be used for the projection\n        Possible values are icrs or galactic.\n        Default value is icrs.\n    rotation_angle : `~astropy.coordinates.Angle`, optional\n        Angle value to be applied to the projection\n        Default value is ``Angle(0 * u.deg)``\n    format : str, optional\n        Format of the output image.\n        Allowed values are fits (default), jpg and png\n        In case of jpg or png format, scaling of the pixels value can be controlled with parameters ``min_cut``, ``max_cut`` and ``stretch``\n    min_cut : float, optional\n        Minimal value considered for contrast adjustment normalization.\n        Only applicable to jpg/png output formats.\n        Can be given as a percentile value, for example min_cut=1.5%. Default value is 0.5%.\n    max_cut : float, optional\n        Maximal value considered for contrast adjustment normalization.\n        Only applicable to jpg/png output formats.\n        Can be given as a percentile value, for example max_cut=97%. Default value is 99.5%.\n    stretch : str, optional\n        Stretch function used for contrast adjustment.\n        Only applicable to jpg/png output formats.\n        Possible values are: power, linear, sqrt, log, asinh. Default value is linear.\n    cmap : `~matplotlib.colors.Colormap` or str, optional\n        Name of the color map.\n        Only applicable to jpg/png output formats.\n        Any `colormap supported by Matplotlib <https://matplotlib.org/3.1.1/gallery/color/colormap_reference.html>`_ can be specified.\n        Default value is Greys_r (grayscale)\n    get_query_payload : bool, optional\n        If True, returns a dictionary of the query payload instead of the parsed response.\n    verbose : bool, optional\n    \n    Returns\n    -------\n    response : `~astropy.io.fits.HDUList` or `~numpy.ndarray`\n        Returns an astropy HDUList for fits output format or a 3-dimensional numpy array\n        for jpg/png output formats.\n    \n    Examples\n    --------\n    >>> from astroquery.hips2fits import hips2fits\n    >>> import matplotlib.pyplot as plt\n    >>> from matplotlib.colors import Colormap\n    >>> import astropy.units as u\n    >>> from astropy.coordinates import Longitude, Latitude, Angle\n    >>> hips = 'CDS/P/DSS2/red'\n    >>> result = hips2fits.query(\n    ...    hips=hips,\n    ...    width=1000,\n    ...    height=500,\n    ...    ra=Longitude(0 * u.deg),\n    ...    dec=Latitude(20 * u.deg),\n    ...    fov=Angle(80 * u.deg),\n    ...    projection=\"TAN\",\n    ...    get_query_payload=False,\n    ...    format='jpg',\n    ...    min_cut=0.5,\n    ...    max_cut=99.5,\n    ...    cmap=Colormap('viridis'),\n    ... )\n    >>> im = plt.imshow(result)\n    >>> plt.show(im)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a10cbfccb674e9f14245b2b2faa9c1b97663e3dec42b29cea75ffe7bec382e86",
            "fields": [
                {
                    "id": "dqa1z7sd",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.hips2fits.core.hips2fitsClass.query object",
                    "type": "Object:astroquery.hips2fits.core.hips2fitsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mu_tucaf",
                    "encoding": "",
                    "name": "hips",
                    "value": "",
                    "defaultValue": "",
                    "description": "ID or keyword identifying the HiPS to use.\nIf multiple HiPS surveys match, one is chosen randomly.\nSee the list of valid HiPS ids hosted by the CDS `here <http://aladin.unistra.fr/hips/list>`_.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0jpw7ss_",
                    "encoding": "",
                    "name": "width",
                    "value": "",
                    "defaultValue": "",
                    "description": "Width in pixels of the output image.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3yq61rfa",
                    "encoding": "",
                    "name": "height",
                    "value": "",
                    "defaultValue": "",
                    "description": "Height in pixels of the output image.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v4cdm490",
                    "encoding": "",
                    "name": "projection",
                    "value": "",
                    "defaultValue": "",
                    "description": "Name of the requested projection, eg: SIN, TAN, MOL, AIT, CAR, CEA, STG     Compulsory if wcs is not provided.\nSee `this page <https://docs.astropy.org/en/stable/wcs/#supported-projections>`_ for an exhaustive list.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9aoh2rzb",
                    "encoding": "",
                    "name": "ra",
                    "value": "",
                    "defaultValue": "",
                    "description": "Right ascension of the center of the output image.",
                    "type": "astropy.coordinates.Longitude",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ovnld3o8",
                    "encoding": "",
                    "name": "dec",
                    "value": "",
                    "defaultValue": "",
                    "description": "Declination of the center of the output image.",
                    "type": "astropy.coordinates.Latitude",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nejq9dwb",
                    "encoding": "",
                    "name": "fov",
                    "value": "",
                    "defaultValue": "",
                    "description": "Size (FoV) of the cutout on the sky.\nThis is the size of the largest dimension of the image.",
                    "type": "astropy.coordinates.Angle",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ubuuri4",
                    "encoding": "",
                    "name": "coordsys",
                    "value": "icrs",
                    "defaultValue": "icrs",
                    "description": "Coordinate frame system to be used for the projection\nPossible values are icrs or galactic.\nDefault value is icrs.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ifj8522f",
                    "encoding": "",
                    "name": "rotation_angle",
                    "value": "<Angle 0. deg>",
                    "defaultValue": "<Angle 0. deg>",
                    "description": "Angle value to be applied to the projection\nDefault value is ``Angle(0 * u.deg)``",
                    "type": "astropy.coordinates.angles.core.Angle",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hyl0rxj5",
                    "encoding": "",
                    "name": "format",
                    "value": "fits",
                    "defaultValue": "fits",
                    "description": "Format of the output image.\nAllowed values are fits (default), jpg and png\nIn case of jpg or png format, scaling of the pixels value can be controlled with parameters ``min_cut``, ``max_cut`` and ``stretch``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ojqpcm1",
                    "encoding": "",
                    "name": "min_cut",
                    "value": 0.5,
                    "defaultValue": 0.5,
                    "description": "Minimal value considered for contrast adjustment normalization.\nOnly applicable to jpg/png output formats.\nCan be given as a percentile value, for example min_cut=1.5%. Default value is 0.5%.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "soexfnt8",
                    "encoding": "",
                    "name": "max_cut",
                    "value": 99.5,
                    "defaultValue": 99.5,
                    "description": "Maximal value considered for contrast adjustment normalization.\nOnly applicable to jpg/png output formats.\nCan be given as a percentile value, for example max_cut=97%. Default value is 99.5%.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9u2ajrng",
                    "encoding": "",
                    "name": "stretch",
                    "value": "linear",
                    "defaultValue": "linear",
                    "description": "Stretch function used for contrast adjustment.\nOnly applicable to jpg/png output formats.\nPossible values are: power, linear, sqrt, log, asinh. Default value is linear.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "57mwdf6n",
                    "encoding": "",
                    "name": "cmap",
                    "value": "Greys_r",
                    "defaultValue": "Greys_r",
                    "description": "Name of the color map.\nOnly applicable to jpg/png output formats.\nAny `colormap supported by Matplotlib <https://matplotlib.org/3.1.1/gallery/color/colormap_reference.html>`_ can be specified.\nDefault value is Greys_r (grayscale)",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wnmryitd",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, returns a dictionary of the query payload instead of the parsed response.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4kmswhnp",
                    "encoding": "",
                    "name": "verbose",
                    "value": false,
                    "defaultValue": false,
                    "description": null,
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qbza_eyr",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass.query",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass.query",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9f1236qv",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jpvrgppy",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "g3dh25oz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4bakr3_g",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hc31a3hs",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ly3i12jc",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "y1ap5yos",
            "name": "hips2fitsClass.query_async",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3418c56fd4ef344f9c5f69d6706f82461011a629a296d8d67d771606caf3d1a2",
            "fields": [
                {
                    "id": "t8uavgsj",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:astroquery.hips2fits.core.hips2fitsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5pkrvzw7",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "be2o9boj",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mjytmo_r",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass.query_async",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass.query_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_ie51ky9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g14lyce2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "bolbc8xj",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "if7rfvxi",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nf0kev10",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bac30pss",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "uf7rd3vs",
            "name": "hips2fitsClass.query_with_wcs",
            "description": "Query the `CDS hips2fits service <http://alasky.u-strasbg.fr/hips-image-services/hips2fits>`_ with a astropy WCS.\n    \n    Parameters\n    ----------\n    hips : str\n        ID or keyword identifying the HiPS to use.\n        If multiple HiPS surveys match, one is chosen randomly.\n        See the list of valid HiPS ids hosted by the CDS `here <http://aladin.unistra.fr/hips/list>`_.\n    wcs : `~astropy.wcs.WCS`\n        An astropy WCS defining the astrometry you wish.\n        Alternatively, you can pass lon, lat, fov, coordsys keywords.\n    format : str, optional\n        Format of the output image.\n        Allowed values are fits (default), jpg and png\n        In case of jpg or png format, scaling of the pixels value can be controlled with parameters ``min_cut``, ``max_cut`` and ``stretch``\n    min_cut : float, optional\n        Minimal value considered for contrast adjustment normalization.\n        Only applicable to jpg/png output formats.\n        Can be given as a percentile value, for example min_cut=1.5%. Default value is 0.5%.\n    max_cut : float, optional\n        Maximal value considered for contrast adjustment normalization.\n        Only applicable to jpg/png output formats.\n        Can be given as a percentile value, for example max_cut=97%. Default value is 99.5%.\n    stretch : str, optional\n        Stretch function used for contrast adjustment.\n        Only applicable to jpg/png output formats.\n        Possible values are: power, linear, sqrt, log, asinh. Default value is linear.\n    cmap : `~matplotlib.colors.Colormap` or str, optional\n        Name of the color map.\n        Only applicable to jpg/png output formats.\n        Any `colormap supported by Matplotlib <https://matplotlib.org/3.1.1/gallery/color/colormap_reference.html>`_ can be specified.\n        Default value is Greys_r (grayscale)\n    get_query_payload : bool, optional\n        If True, returns a dictionary of the query payload instead of the parsed response.\n    verbose : bool, optional\n    \n    Returns\n    -------\n    response : `~astropy.io.fits.HDUList` or `~numpy.ndarray`\n        Returns an astropy HDUList for fits output format or a 3-dimensional numpy array\n        for jpg/png output formats.\n    \n    Examples\n    --------\n    >>> from astroquery.hips2fits import hips2fits\n    >>> import matplotlib.pyplot as plt\n    >>> from matplotlib.colors import Colormap\n    >>> from astropy import wcs as astropy_wcs\n    >>> # Create a new WCS astropy object\n    >>> w = astropy_wcs.WCS(header={\n    ...     'NAXIS1':                 2000,  # Width of the output fits/image\n    ...     'NAXIS2':                 1000,  # Height of the output fits/image\n    ...     'WCSAXES':                   2,  # Number of coordinate axes\n    ...     'CRPIX1':                1000.0, # Pixel coordinate of reference point\n    ...     'CRPIX2':                500.0,  # Pixel coordinate of reference point\n    ...     'CDELT1':                -0.18,  # [deg] Coordinate increment at reference point\n    ...     'CDELT2':                 0.18,  # [deg] Coordinate increment at reference point\n    ...     'CUNIT1': 'deg',                 # Units of coordinate increment and value\n    ...     'CUNIT2': 'deg',                 # Units of coordinate increment and value\n    ...     'CTYPE1': 'GLON-MOL',            # galactic longitude, Mollweide's projection\n    ...     'CTYPE2': 'GLAT-MOL',            # galactic latitude, Mollweide's projection\n    ...     'CRVAL1':                  0.0,  # [deg] Coordinate value at reference point\n    ...     'CRVAL2':                  0.0,  # [deg] Coordinate value at reference point\n    ... })\n    >>> hips = 'CDS/P/DSS2/red'\n    >>> result = hips2fits.query_with_wcs(\n    ...    hips=hips,\n    ...    wcs=w,\n    ...    get_query_payload=False,\n    ...    format='jpg',\n    ...    min_cut=0.5,\n    ...    max_cut=99.5,\n    ...    cmap=Colormap('viridis'),\n    ... )\n    >>> im = plt.imshow(result)\n    >>> plt.show(im)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7a245fac0909820960dc225f6aa6ef31e52bae0f87d84298cc433bd04499dfa1",
            "fields": [
                {
                    "id": "ijqgk0em",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.hips2fits.core.hips2fitsClass.query_with_wcs object",
                    "type": "Object:astroquery.hips2fits.core.hips2fitsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g5vwyphq",
                    "encoding": "",
                    "name": "hips",
                    "value": "",
                    "defaultValue": "",
                    "description": "ID or keyword identifying the HiPS to use.\nIf multiple HiPS surveys match, one is chosen randomly.\nSee the list of valid HiPS ids hosted by the CDS `here <http://aladin.unistra.fr/hips/list>`_.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "evh00qvf",
                    "encoding": "",
                    "name": "wcs",
                    "value": "",
                    "defaultValue": "",
                    "description": "An astropy WCS defining the astrometry you wish.\nAlternatively, you can pass lon, lat, fov, coordsys keywords.",
                    "type": "astropy.wcs.WCS",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yzbg4n0b",
                    "encoding": "",
                    "name": "format",
                    "value": "fits",
                    "defaultValue": "fits",
                    "description": "Format of the output image.\nAllowed values are fits (default), jpg and png\nIn case of jpg or png format, scaling of the pixels value can be controlled with parameters ``min_cut``, ``max_cut`` and ``stretch``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f1751bc1",
                    "encoding": "",
                    "name": "min_cut",
                    "value": 0.5,
                    "defaultValue": 0.5,
                    "description": "Minimal value considered for contrast adjustment normalization.\nOnly applicable to jpg/png output formats.\nCan be given as a percentile value, for example min_cut=1.5%. Default value is 0.5%.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oerqr939",
                    "encoding": "",
                    "name": "max_cut",
                    "value": 99.5,
                    "defaultValue": 99.5,
                    "description": "Maximal value considered for contrast adjustment normalization.\nOnly applicable to jpg/png output formats.\nCan be given as a percentile value, for example max_cut=97%. Default value is 99.5%.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gsntug0y",
                    "encoding": "",
                    "name": "stretch",
                    "value": "linear",
                    "defaultValue": "linear",
                    "description": "Stretch function used for contrast adjustment.\nOnly applicable to jpg/png output formats.\nPossible values are: power, linear, sqrt, log, asinh. Default value is linear.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t42hwft5",
                    "encoding": "",
                    "name": "cmap",
                    "value": "Greys_r",
                    "defaultValue": "Greys_r",
                    "description": "Name of the color map.\nOnly applicable to jpg/png output formats.\nAny `colormap supported by Matplotlib <https://matplotlib.org/3.1.1/gallery/color/colormap_reference.html>`_ can be specified.\nDefault value is Greys_r (grayscale)",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ktrz4ay7",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, returns a dictionary of the query payload instead of the parsed response.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ixinqdjf",
                    "encoding": "",
                    "name": "verbose",
                    "value": false,
                    "defaultValue": false,
                    "description": null,
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ct5sfd9z",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass.query_with_wcs",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass.query_with_wcs",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b9y0s_37",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tgflnszc",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "4_sl3cgy",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pei9jx2c",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "44ytrlh3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rkbukrxm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "_z0qpwer",
            "name": "hips2fitsClass.query_with_wcs_async",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e11c4dd4cca3f87d9c606b26ec3b364017adae913860a6af39ea1de7db577a9b",
            "fields": [
                {
                    "id": "e_fhufuk",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:astroquery.hips2fits.core.hips2fitsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jcw8_0xi",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wj6dogu4",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pkav9akc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass.query_with_wcs_async",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass.query_with_wcs_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ja1gq62n",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sb3i25_s",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "w7_4zruz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wfhzt309",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.hips2fits.core.hips2fitsClass",
                    "defaultValue": "astroquery.hips2fits.core.hips2fitsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b0upan27",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tw8opdhh",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "n52_nipq",
            "name": "core.hips2fits",
            "description": "Query the `CDS hips2fits service <http://alasky.u-strasbg.fr/hips-image-services/hips2fits>`_\n    \n    The `CDS hips2fits service <http://alasky.u-strasbg.fr/hips-image-services/hips2fits>`_ offers a way\n    to extract FITS images from HiPS sky maps. HiPS is an IVOA standard that combines individual images in\n    order to produce a progressive hierarchical sky map describing the whole survey. Please refer to the\n    `IVOA paper <http://www.ivoa.net/documents/HiPS/20170519/REC-HIPS-1.0-20170519.pdf>`_ for more info.\n    \n    Given an astropy user-defined WCS with an HiPS name\n    (see the list of valid HiPS names hosted in CDS `here <http://aladin.unistra.fr/hips/list>`_),\n    hips2fits will return you the corresponding FITS image (JPG/PNG output formats are also implemented).\n    \n    This package implements two methods:\n    \n    * :meth:`~astroquery.hips2fits.hips2fitsClass.query_with_wcs` extracting a FITS image from a HiPS and an astropy ``wcs.WCS``.\n        See `here <http://aladin.unistra.fr/hips/list>`_ all the valid HiPS names hosted in CDS.\n    * :meth:`~astroquery.hips2fits.hips2fitsClass.query` extracting a FITS image from a HiPS given the output image pixel size, the center of projection, the type of projection and the field of view.\n        See `here <http://aladin.unistra.fr/hips/list>`_ all the valid HiPS names hosted in CDS.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "27e37982701e4ef0014c29a40cba3360bcfb43d855d42c801d142d9779fa392c",
            "fields": [
                {
                    "id": "nu4bq6hi",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4mbndy7o",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n7l2j3j5",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.hips2fits.core.hips2fits",
                    "defaultValue": "astroquery.hips2fits.core.hips2fits",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3b6b2azs",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ruphgrl8",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ssj_dl4p",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5c8lch0z",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.hips2fits.core",
                    "defaultValue": "astroquery.hips2fits.core",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8ctcykfo",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h99ct6yn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}