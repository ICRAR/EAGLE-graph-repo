{
    "modelData": {
        "filePath": "astroquery_jplhorizons.palette",
        "fileType": "palette",
        "shortDescription": "",
        "detailedDescription": "JPLHorizons\n-----------\n\n:author: Michael Mommert (mommermiscience@gmail.com)",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE_test_repo",
        "eagleVersion": "",
        "eagleCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "astroquery",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "741cbb32cc3fff894fe9683274fcd8bfea5efbdf9790d50979d1af8b819976d3",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1730182402.500849,
        "numLGNodes": 11
    },
    "nodeDataArray": [
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "Conf.__init__",
            "description": "\nConfiguration parameters for `astroquery.jplhorizons`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ee0d004003342ba43860752c709aca50a3d7bdc71c5dc20600bfb3c92c0222bd",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to Conf object",
                    "type": "Object:astroquery.jplhorizons.Conf",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": true
                },
                {
                    "name": "args",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "kwargs",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.Conf",
                    "defaultValue": "astroquery.jplhorizons.Conf",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.Conf.__init__",
                    "defaultValue": "astroquery.jplhorizons.Conf.__init__",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "ConfigNamespace.items",
            "description": "Iterate over configuration item ``(name, value)`` pairs.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c918c79f8a7852fcdbbe375f8bd894f3d34cdc1d90d17c1243d4e773d741b4dd",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to ConfigNamespace.items object",
                    "type": "Object:astropy.config.configuration.ConfigNamespace",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astropy.config.configuration.ConfigNamespace",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astropy.config.configuration.ConfigNamespace.items",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace.items",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "ConfigNamespace.__iter__",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9fa2f636152bfe3ddbcf6fd4988864c2f4b0cbd46402d7bc6262dbd3c49193ae",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Object:astropy.config.configuration.ConfigNamespace",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astropy.config.configuration.ConfigNamespace",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astropy.config.configuration.ConfigNamespace.__iter__",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace.__iter__",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "ConfigNamespace.reload",
            "description": "Reload a configuration item from the configuration file.\n    \n    \n    attr : str, optional\n        The name of the configuration parameter to reload.  If not\n        provided, reload all configuration parameters.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "64a521b129ba9829b7349cf4d915bcb6c8fe42dcafd29b1759e8c594a7407512",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to ConfigNamespace.reload object",
                    "type": "Object:astropy.config.configuration.ConfigNamespace",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "attr",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astropy.config.configuration.ConfigNamespace",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astropy.config.configuration.ConfigNamespace.reload",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace.reload",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "ConfigNamespace.reset",
            "description": "Reset a configuration item to its default.\n    \n    \n    attr : str, optional\n        The name of the configuration parameter to reload.  If not\n        provided, reset all configuration parameters.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "231dabd9bd4eb5661674be38b45a72645688ca7bc98e9d9796ae916a48f1deb1",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to ConfigNamespace.reset object",
                    "type": "Object:astropy.config.configuration.ConfigNamespace",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "attr",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astropy.config.configuration.ConfigNamespace",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astropy.config.configuration.ConfigNamespace.reset",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace.reset",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "ConfigNamespace.set_temp",
            "description": "Temporarily set a configuration value.\n    \n    \n    attr : str\n        Configuration item name\n    \n    value : object\n        The value to set temporarily.\n    \n    Examples\n    --------\n    >>> import astropy\n    >>> with astropy.conf.set_temp('use_color', False):\n    ...     pass\n    ...     # console output will not contain color\n    >>> # console output contains color again...",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "fd64c88df987462cad37c540c8cfdf3ec1ee21e116e7758a0c011b62774a00d3",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to ConfigNamespace.set_temp object",
                    "type": "Object:astropy.config.configuration.ConfigNamespace",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "attr",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "value",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astropy.config.configuration.ConfigNamespace",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astropy.config.configuration.ConfigNamespace.set_temp",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace.set_temp",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "ConfigNamespace.values",
            "description": "Iterate over configuration item values.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "350c6b1cd00c0397d13315e1a01999160a9bcaf4c77baed0b054a61d1779f76f",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to ConfigNamespace.values object",
                    "type": "Object:astropy.config.configuration.ConfigNamespace",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astropy.config.configuration.ConfigNamespace",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astropy.config.configuration.ConfigNamespace.values",
                    "defaultValue": "astropy.config.configuration.ConfigNamespace.values",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "HorizonsClass.__init__",
            "description": "Instantiate JPL query.\n    \n    \n    id : str, required\n        Name, number, or designation of the object to be queried.\n    location : str or dict, optional\n        Observer's location for ephemerides queries or center body name for\n        orbital element or vector queries. Uses the same codes as JPL\n        Horizons. If no location is provided, Earth's center is used for\n        ephemerides queries and the Sun's center for elements and vectors\n        queries. Arbitrary topocentric coordinates for ephemerides queries\n        can be provided in the format of a dictionary. The dictionary has to\n        be of the form {``'lon'``: longitude in deg (East positive, West\n        negative), ``'lat'``: latitude in deg (North positive, South\n        negative), ``'elevation'``: elevation in km above the reference\n        ellipsoid, [``'body'``: Horizons body ID of the central body;\n        optional; if this value is not provided it is assumed that this\n        location is on Earth]}.\n    epochs : scalar, list-like, or dictionary, optional\n        Either a list of epochs in JD or MJD format or a dictionary defining\n        a range of times and dates; the range dictionary has to be of the\n        form {``'start'``: 'YYYY-MM-DD [HH:MM:SS]', ``'stop'``: 'YYYY-MM-DD\n        [HH:MM:SS]', ``'step'``: 'n[y|d|m|s]'}. Epoch timescales depend on\n        the type of query performed: UTC for ephemerides queries, TDB for\n        element and vector queries. If no epochs are provided, the current\n        time is used.\n    id_type : str, optional\n        Controls Horizons's object selection for ``id``\n        [HORIZONSDOC_SELECTION]_ .  Options: ``'designation'`` (small body\n        designation), ``'name'`` (asteroid or comet name),\n        ``'asteroid_name'``, ``'comet_name'``, ``'smallbody'`` (asteroid\n        and comet search), or ``None`` (first search search planets,\n        natural satellites, spacecraft, and special cases, and if no\n        matches, then search small bodies).\n    \n    References\n    ----------\n    \n    .. [HORIZONSDOC_SELECTION] https://ssd.jpl.nasa.gov/horizons/manual.html#select (retrieved 2021 Sep 23).\n    \n    \n    Examples\n    --------\n    >>> from astroquery.jplhorizons import Horizons\n    >>> eros = Horizons(id='433', location='568',\n    ...              epochs={'start':'2017-01-01',\n    ...                      'stop':'2017-02-01',\n    ...                      'step':'1d'})\n    >>> print(eros)  # doctest: +SKIP\n    JPLHorizons instance \"433\"; location=568, epochs={'start': '2017-01-01', 'step': '1d', 'stop': '2017-02-01'}, id_type=None\nA class for querying the\n    `JPL Horizons <https://ssd.jpl.nasa.gov/horizons/>`_ service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "fd6e93352f020b4e4ffb91f904076ed62ea905ae59ff9c5115eaf072360a3a08",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to HorizonsClass object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "id",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "location",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "epochs",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "id_type",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.__init__",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.__init__",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "HorizonsClass.elements_async",
            "description": "Query JPL Horizons for osculating orbital elements.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the center body relative to which the elements are provided.\n    \n    The following table lists the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime_str     | epoch Date (str, ``Calendar Date (TDB)``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float, ``JDTDB``)          |\n    +------------------+-----------------------------------------------+\n    | e                | eccentricity (float, ``EC``)                  |\n    +------------------+-----------------------------------------------+\n    | q                | periapsis distance (float, au, ``QR``)        |\n    +------------------+-----------------------------------------------+\n    | a                | semi-major axis (float, au, ``A``)            |\n    +------------------+-----------------------------------------------+\n    | incl             | inclination (float, deg, ``IN``)              |\n    +------------------+-----------------------------------------------+\n    | Omega            | longitude of Asc. Node (float, deg, ``OM``)   |\n    +------------------+-----------------------------------------------+\n    | w                | argument of the perifocus (float, deg, ``W``) |\n    +------------------+-----------------------------------------------+\n    | Tp_jd            | time of periapsis (float, Julian Date, ``Tp``)|\n    +------------------+-----------------------------------------------+\n    | n                | mean motion (float, deg/d, ``N``)             |\n    +------------------+-----------------------------------------------+\n    | M                | mean anomaly (float, deg, ``MA``)             |\n    +------------------+-----------------------------------------------+\n    | nu               | true anomaly (float, deg, ``TA``)             |\n    +------------------+-----------------------------------------------+\n    | period           | orbital period (float, (Earth) d, ``PR``)     |\n    +------------------+-----------------------------------------------+\n    | Q                | apoapsis distance (float, au, ``AD``)         |\n    +------------------+-----------------------------------------------+\n    \n    \n    \n    refsystem : string\n        Element reference system for geometric and astrometric quantities:\n        ``'ICRF'`` or ``'B1950'``; default: ``'ICRF'``\n    refplane : string\n        Reference plane for all output quantities: ``'ecliptic'`` (ecliptic\n        and mean equinox of reference epoch), ``'earth'`` (Earth mean\n        equator and equinox of reference epoch), or ``'body'`` (body mean\n        equator and node of date); default: ``'ecliptic'``\n    tp_type : string\n        Representation for time-of-perihelion passage: ``'absolute'`` or\n        ``'relative'`` (to epoch); default: ``'absolute'``\n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for non-cometary objects.\n    get_query_payload : boolean, optional\n        When set to ``True`` the method returns the HTTP request parameters\n        as a dict, default: False\n    get_raw_response: boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    \n    \n    Returns\n    -------\n    response : `requests.Response`\n        The response of the HTTP request.\n    \n    \n    Examples\n    --------\n        >>> from astroquery.jplhorizons import Horizons\n        >>> obj = Horizons(id='433', location='500@10',\n        ...                epochs=2458133.33546)\n        >>> el = obj.elements()  # doctest: +SKIP\n        >>> print(el)  # doctest: +SKIP\n            targetname      datetime_jd  ...       Q            P\n               ---               d       ...       AU           d\n        ------------------ ------------- ... ------------- ------------\n        433 Eros (1898 DQ) 2458133.33546 ... 1.78244263804 642.93873484",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "44cdcd6cf1401915311bec88962f98ab51e5bfd5fbd20430c3e5a7bb72586770",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to HorizonsClass.elements_async object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "refsystem",
                    "value": "ICRF",
                    "defaultValue": "ICRF",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "refplane",
                    "value": "ecliptic",
                    "defaultValue": "ecliptic",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "tp_type",
                    "value": "absolute",
                    "defaultValue": "absolute",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "closest_apparition",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "no_fragments",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "get_raw_response",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.elements_async",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.elements_async",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "HorizonsClass.ephemerides_async",
            "description": "Query JPL Horizons for ephemerides.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the location of the observer.\n    \n    The following tables list the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    \n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime         | epoch (str, ``Date__(UT)__HR:MN:SC.fff``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float,                     |\n    |                  | ``Date_________JDUT``)                        |\n    +------------------+-----------------------------------------------+\n    | solar_presence   | information on Sun's presence (str)           |\n    +------------------+-----------------------------------------------+\n    | flags            | information on Moon, target status (str)      |\n    +------------------+-----------------------------------------------+\n    | RA               | target RA (float, deg, ``DEC_(XXX)``)         |\n    +------------------+-----------------------------------------------+\n    | DEC              | target DEC (float, deg, ``DEC_(XXX)``)        |\n    +------------------+-----------------------------------------------+\n    | RA_app           | target apparent RA (float, deg,               |\n    |                  | ``R.A._(a-app)``)                             |\n    +------------------+-----------------------------------------------+\n    | DEC_app          | target apparent DEC (float, deg,              |\n    |                  | ``DEC_(a-app)``)                              |\n    +------------------+-----------------------------------------------+\n    | RA_rate          | target rate RA (float, arcsec/hr, ``RA*cosD``)|\n    +------------------+-----------------------------------------------+\n    | DEC_rate         | target RA (float, arcsec/hr, ``d(DEC)/dt``)   |\n    +------------------+-----------------------------------------------+\n    | AZ               | Azimuth (float, deg, EoN, ``Azi_(a-app)``)    |\n    +------------------+-----------------------------------------------+\n    | EL               | Elevation (float, deg, ``Elev_(a-app)``)      |\n    +------------------+-----------------------------------------------+\n    | AZ_rate          | Azimuth rate (float, arcsec/minute,           |\n    |                  | ``dAZ*cosE``)                                 |\n    +------------------+-----------------------------------------------+\n    | EL_rate          | Elevation rate (float, arcsec/minute,         |\n    |                  | ``d(ELV)/dt``)                                |\n    +------------------+-----------------------------------------------+\n    | sat_X            | satellite X position (arcsec,                 |\n    |                  | ``X_(sat-prim)``)                             |\n    +------------------+-----------------------------------------------+\n    | sat_Y            | satellite Y position (arcsec,                 |\n    |                  | ``Y_(sat-prim)``)                             |\n    +------------------+-----------------------------------------------+\n    | sat_PANG         | satellite position angle (deg,                |\n    |                  | ``SatPANG``)                                  |\n    +------------------+-----------------------------------------------+\n    | siderealtime     | local apparent sidereal time (str,            |\n    |                  | ``L_Ap_Sid_Time``)                            |\n    +------------------+-----------------------------------------------+\n    | airmass          | target optical airmass (float, ``a-mass``)    |\n    +------------------+-----------------------------------------------+\n    | magextinct       | V-mag extinction (float, mag, ``mag_ex``)     |\n    +------------------+-----------------------------------------------+\n    | V                | V magnitude (float, mag, ``APmag``)           |\n    +------------------+-----------------------------------------------+\n    | Tmag             | comet Total magnitude (float, mag, ``T-mag``) |\n    +------------------+-----------------------------------------------+\n    | Nmag             | comet Nucleaus magnitude (float, mag,         |\n    |                  | ``N-mag``)                                    |\n    +------------------+-----------------------------------------------+\n    | surfbright       | surf brightness (float, mag/arcsec^2,         |\n    |                  | ``S-brt``)                                    |\n    +------------------+-----------------------------------------------+\n    | illumination     | frac of illumination (float, percent,         |\n    |                  | ``Illu%``)                                    |\n    +------------------+-----------------------------------------------+\n    | illum_defect     | Defect of illumination (float, arcsec,        |\n    |                  | ``Dec_illu``)                                 |\n    +------------------+-----------------------------------------------+\n    | sat_sep          | Target-primary angular separation (float,     |\n    |                  | arcsec, ``ang-sep``)                          |\n    +------------------+-----------------------------------------------+\n    | sat_vis          | Target-primary visibility (str, ``v``)        |\n    +------------------+-----------------------------------------------+\n    | ang_width        | Angular width of target (float, arcsec,       |\n    |                  | ``Ang-diam``)                                 |\n    +------------------+-----------------------------------------------+\n    | PDObsLon         | Apparent planetodetic longitude (float, deg,  |\n    |                  | ``ObsSub-LON``)                               |\n    +------------------+-----------------------------------------------+\n    | PDObsLat         | Apparent planetodetic latitude  (float, deg,  |\n    |                  | ``ObsSub-LAT``)                               |\n    +------------------+-----------------------------------------------+\n    | PDSunLon         | Subsolar planetodetic longitude (float, deg,  |\n    |                  | ``SunSub-LON``)                               |\n    +------------------+-----------------------------------------------+\n    | PDSunLat         | Subsolar planetodetic latitude  (float, deg,  |\n    |                  | ``SunSub-LAT``)                               |\n    +------------------+-----------------------------------------------+\n    | SubSol_ang       | Target sub-solar point position angle         |\n    |                  | (float, deg, ``SN.ang``)                      |\n    +------------------+-----------------------------------------------+\n    | SubSol_dist      | Target sub-solar point position angle distance|\n    |                  | (float, arcsec, ``SN.dist``)                  |\n    +------------------+-----------------------------------------------+\n    | NPole_ang        | Target's North Pole position angle            |\n    |                  | (float, deg, ``NP.ang``)                      |\n    +------------------+-----------------------------------------------+\n    | NPole_dist       | Target's North Pole position angle distance   |\n    |                  | (float, arcsec, ``NP.dist``)                  |\n    +------------------+-----------------------------------------------+\n    | EclLon           | heliocentr ecl long (float, deg, ``hEcl-Lon``)|\n    +------------------+-----------------------------------------------+\n    | EclLat           | heliocentr ecl lat (float, deg, ``hEcl-Lat``) |\n    +------------------+-----------------------------------------------+\n    | ObsEclLon        | obscentr ecl long (float, deg, ``ObsEcLon``)  |\n    +------------------+-----------------------------------------------+\n    | ObsEclLat        | obscentr ecl lat (float, deg, ``ObsEcLat``)   |\n    +------------------+-----------------------------------------------+\n    | r                | heliocentric distance (float, au, ``r``)      |\n    +------------------+-----------------------------------------------+\n    | r_rate           | heliocentric radial rate (float, km/s,        |\n    |                  | ``rdot``)                                     |\n    +------------------+-----------------------------------------------+\n    | delta            | distance from observer (float, au, ``delta``) |\n    +------------------+-----------------------------------------------+\n    | delta_rate       | obs-centric rad rate (float, km/s, ``deldot``)|\n    +------------------+-----------------------------------------------+\n    | lighttime        | one-way light time (float, min, ``1-way_LT``) |\n    +------------------+-----------------------------------------------+\n    | vel_sun          | Target center velocity wrt Sun                |\n    |                  | (float, km/s, ``VmagSn``)                     |\n    +------------------+-----------------------------------------------+\n    | vel_obs          | Target center velocity wrt Observer           |\n    |                  | (float, km/s, ``VmagOb``)                     |\n    +------------------+-----------------------------------------------+\n    | elong            | solar elongation (float, deg, ``S-O-T``)      |\n    +------------------+-----------------------------------------------+\n    | elongFlag        | app. position relative to Sun (str, ``/r``)   |\n    +------------------+-----------------------------------------------+\n    | alpha            | solar phase angle (float, deg, ``S-T-O``)     |\n    +------------------+-----------------------------------------------+\n    | lunar_elong      | Apparent lunar elongation angle wrt target    |\n    |                  | (float, deg, ``T-O-M``)                       |\n    +------------------+-----------------------------------------------+\n    | lunar_illum      | Lunar illumination percentage                 |\n    |                  | (float, percent, ``MN_Illu%``)                |\n    +------------------+-----------------------------------------------+\n    | IB_elong         | Apparent interfering body elongation angle    |\n    |                  | wrt target (float, deg, ``T-O-I``)            |\n    +------------------+-----------------------------------------------+\n    | IB_illum         | Interfering body illumination percentage      |\n    |                  | (float, percent, ``IB_Illu%``)                |\n    +------------------+-----------------------------------------------+\n    | sat_alpha        | Observer-Primary-Target angle                 |\n    |                  | (float, deg, ``O-P-T``)                       |\n    +------------------+-----------------------------------------------+\n    | OrbPlaneAng      | orbital plane angle (float, deg, ``PlAng``)   |\n    +------------------+-----------------------------------------------+\n    | sunTargetPA      | -Sun vector PA (float, deg, EoN, ``PsAng``)   |\n    +------------------+-----------------------------------------------+\n    | velocityPA       | -velocity vector PA (float, deg, EoN,         |\n    |                  | ``PsAMV``)                                    |\n    +------------------+-----------------------------------------------+\n    | constellation    | constellation ID containing target (str,      |\n    |                  | ``Cnst``)                                     |\n    +------------------+-----------------------------------------------+\n    | TDB-UT           | difference between TDB and UT (float,         |\n    |                  | seconds, ``TDB-UT``)                          |\n    +------------------+-----------------------------------------------+\n    | NPole_RA         | Target's North Pole RA (float, deg,           |\n    |                  | ``N.Pole-RA``)                                |\n    +------------------+-----------------------------------------------+\n    | NPole_DEC        | Target's North Pole DEC (float, deg,          |\n    |                  | ``N.Pole-DC``)                                |\n    +------------------+-----------------------------------------------+\n    | GlxLon           | galactic longitude (float, deg, ``GlxLon``)   |\n    +------------------+-----------------------------------------------+\n    | GlxLat           | galactic latitude  (float, deg, ``GlxLat``)   |\n    +------------------+-----------------------------------------------+\n    | solartime        | local apparent solar time (string,            |\n    |                  | ``L_Ap_SOL_Time``)                            |\n    +------------------+-----------------------------------------------+\n    | earth_lighttime  | observer lighttime from center of Earth       |\n    |                  | (float, minutes, ``399_ins_LT``               |\n    +------------------+-----------------------------------------------+\n    | RA_3sigma        | 3 sigma positional uncertainty in RA (float,  |\n    |                  | arcsec, ``RA_3sigma``)                        |\n    +------------------+-----------------------------------------------+\n    | DEC_3sigma       | 3 sigma positional uncertainty in  DEC (float,|\n    |                  | arcsec, ``DEC_3sigma``)                       |\n    +------------------+-----------------------------------------------+\n    | SMAA_3sigma      | 3sig pos unc error ellipse semi-major axis    |\n    |                  | (float, arcsec, ``SMAA_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | SMIA_3sigma      | 3sig pos unc error ellipse semi-minor axis    |\n    |                  | (float, arcsec, ``SMIA_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | Theta_3sigma     | pos unc error ellipse position angle          |\n    |                  | (float, deg, ``Theta``)                       |\n    +------------------+-----------------------------------------------+\n    | Area_3sigma      | 3sig pos unc error ellipse are                |\n    |                  | (float, arcsec^2, ``Area_3sig``)              |\n    +------------------+-----------------------------------------------+\n    | RSS_3sigma       | 3sig pos unc error ellipse root-sum-square    |\n    |                  | (float, arcsec, ``POS_3sigma``)               |\n    +------------------+-----------------------------------------------+\n    | r_3sigma         | 3sig range uncertainty                        |\n    |                  | (float, km, ``RNG_3sigma``)                   |\n    +------------------+-----------------------------------------------+\n    | r_rate_3sigma    | 3sig range rate uncertainty                   |\n    |                  | (float, km/second, ``RNGRT_3sigma``)          |\n    +------------------+-----------------------------------------------+\n    | SBand_3sigma     | 3sig Doppler radar uncertainties at S-band    |\n    |                  | (float, Hertz, ``DOP_S_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | XBand_3sigma     | 3sig Doppler radar uncertainties at X-band    |\n    |                  | (float, Hertz, ``DOP_X_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | DoppDelay_3sigma | 3sig Doppler radar round-trip delay           |\n    |                  | unc (float, second, ``RT_delay_3sig``)        |\n    +------------------+-----------------------------------------------+\n    | true_anom        | True Anomaly (float, deg, ``Tru_Anom``)       |\n    +------------------+-----------------------------------------------+\n    | hour_angle       | local apparent hour angle (string,            |\n    |                  | sexagesimal angular hours, ``L_Ap_Hour_Ang``) |\n    +------------------+-----------------------------------------------+\n    | alpha_true       | true phase angle (float, deg, ``phi``)        |\n    +------------------+-----------------------------------------------+\n    | PABLon           | phase angle bisector longitude                |\n    |                  | (float, deg, ``PAB-LON``)                     |\n    +------------------+-----------------------------------------------+\n    | PABLat           | phase angle bisector latitude                 |\n    |                  | (float, deg, ``PAB-LAT``)                     |\n    +------------------+-----------------------------------------------+\n    \n    \n    \n    airmass_lessthan : float, optional\n        Defines a maximum airmass for the query, default: 99\n    solar_elongation : tuple, optional\n        Permissible solar elongation range: (minimum, maximum); default:\n        (0,180)\n    max_hour_angle : float, optional\n        Defines a maximum hour angle for the query, default: 0\n    rate_cutoff : float, optional\n        Angular range rate upper limit cutoff in arcsec/h; default: disabled\n    skip_daylight : boolean, optional\n        Crop daylight epochs in query, default: False\n    refraction : boolean\n        If ``True``, coordinates account for a standard atmosphere\n        refraction model; if ``False``, coordinates do not account for\n        refraction (airless model); default: ``False``\n    refsystem : string\n        Coordinate reference system: ``'ICRF'`` or ``'B1950'``; default:\n        ``'ICRF'``\n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for\n        non-cometary objects.\n    quantities : integer or string, optional\n        Single integer or comma-separated list in the form of a string\n        corresponding to all the quantities to be queried from JPL Horizons\n        using the coding according to the `JPL Horizons User Manual\n        Definition of Observer Table Quantities\n        <https://ssd.jpl.nasa.gov/?horizons_doc#table_quantities>`_;\n        default: all quantities\n    get_query_payload : boolean, optional\n        When set to `True` the method returns the HTTP request parameters as\n        a dict, default: False\n    get_raw_response : boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    extra_precision : boolean, optional\n        Enables extra precision in RA and DEC values; default: False\n    \n    \n    Returns\n    -------\n    response : `requests.Response`\n        The response of the HTTP request.\n    \n    \n    Examples\n    --------\n    >>> from astroquery.jplhorizons import Horizons\n    >>> obj = Horizons(id='Ceres', location='568',\n    ...             epochs={'start':'2010-01-01',\n    ...                     'stop':'2010-03-01',\n    ...                     'step':'10d'})\n    >>> eph = obj.ephemerides()  # doctest: +SKIP\n    >>> print(eph)  # doctest: +SKIP\n        targetname       datetime_str   datetime_jd ...  PABLon  PABLat\n           ---               ---             d      ...   deg     deg\n    ----------------- ----------------- ----------- ... -------- ------\n    1 Ceres (A801 AA) 2010-Jan-01 00:00   2455197.5 ... 238.2494 4.5532\n    1 Ceres (A801 AA) 2010-Jan-11 00:00   2455207.5 ... 241.3339 4.2832\n    1 Ceres (A801 AA) 2010-Jan-21 00:00   2455217.5 ... 244.3394 4.0089\n    1 Ceres (A801 AA) 2010-Jan-31 00:00   2455227.5 ... 247.2518 3.7289\n    1 Ceres (A801 AA) 2010-Feb-10 00:00   2455237.5 ... 250.0576 3.4415\n    1 Ceres (A801 AA) 2010-Feb-20 00:00   2455247.5 ... 252.7383 3.1451",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3daa58d9942bd66d4774ec309f94eb417ddd84305f355c8245e43a4d0dc5bf25",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to HorizonsClass.ephemerides_async object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "airmass_lessthan",
                    "value": 99,
                    "defaultValue": 99,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "solar_elongation",
                    "value": [
                        0,
                        180
                    ],
                    "defaultValue": [
                        0,
                        180
                    ],
                    "description": "",
                    "type": "Json",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "max_hour_angle",
                    "value": 0,
                    "defaultValue": 0,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "rate_cutoff",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "skip_daylight",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "refraction",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "refsystem",
                    "value": "ICRF",
                    "defaultValue": "ICRF",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "closest_apparition",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "no_fragments",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "quantities",
                    "value": "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43",
                    "defaultValue": "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "get_raw_response",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "extra_precision",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.ephemerides_async",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.ephemerides_async",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "key": -1,
            "name": "HorizonsClass.vectors_async",
            "description": "Query JPL Horizons for state vectors.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the center body relative to which the vectors are provided.\n    \n    The following table lists the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime_str     | epoch Date (str, ``Calendar Date (TDB)``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float, ``JDTDB``)          |\n    +------------------+-----------------------------------------------+\n    | delta_T          | time-varying difference between TDB and UT    |\n    |                  | (float, ``delta-T``, optional)                |\n    +------------------+-----------------------------------------------+\n    | x                | x-component of position vector                |\n    |                  | (float, au, ``X``)                            |\n    +------------------+-----------------------------------------------+\n    | y                | y-component of position vector                |\n    |                  | (float, au, ``Y``)                            |\n    +------------------+-----------------------------------------------+\n    | z                | z-component of position vector                |\n    |                  | (float, au, ``Z``)                            |\n    +------------------+-----------------------------------------------+\n    | vx               | x-component of velocity vector (float, au/d,  |\n    |                  | ``VX``)                                       |\n    +------------------+-----------------------------------------------+\n    | vy               | y-component of velocity vector (float, au/d,  |\n    |                  | ``VY``)                                       |\n    +------------------+-----------------------------------------------+\n    | vz               | z-component of velocity vector (float, au/d,  |\n    |                  | ``VZ``)                                       |\n    +------------------+-----------------------------------------------+\n    | lighttime        | one-way lighttime (float, d, ``LT``)          |\n    +------------------+-----------------------------------------------+\n    | range            | range from coordinate center (float, au,      |\n    |                  | ``RG``)                                       |\n    +------------------+-----------------------------------------------+\n    | range_rate       | range rate (float, au/d, ``RR``)              |\n    +------------------+-----------------------------------------------+\n    \n    \n    \n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for non-cometary objects.\n    get_query_payload : boolean, optional\n        When set to `True` the method returns the HTTP request parameters as\n        a dict, default: False\n    get_raw_response: boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    refplane : string\n        Reference plane for all output quantities: ``'ecliptic'`` (ecliptic\n        and mean equinox of reference epoch), ``'earth'`` (Earth mean\n        equator and equinox of reference epoch), or ``'body'`` (body mean\n        equator and node of date); default: ``'ecliptic'``.\n    \n        See :ref:`Horizons Reference Frames <jpl-horizons-reference-frames>`\n        in the astroquery documentation for details.\n    aberrations : string, optional\n        Aberrations to be accounted for: [``'geometric'``,\n        ``'astrometric'``, ``'apparent'``]. Default: ``'geometric'``\n    delta_T : boolean, optional\n        Triggers output of time-varying difference between TDB and UT\n        time-scales. Default: False\n    \n    \n    Returns\n    -------\n    response : `requests.Response`\n        The response of the HTTP request.\n    \n    \n    Examples\n    --------\n        >>> from astroquery.jplhorizons import Horizons\n        >>> obj = Horizons(id='2012 TC4', location='257',\n        ...             epochs={'start':'2017-10-01',\n        ...                     'stop':'2017-10-02',\n        ...                     'step':'10m'})\n        >>> vec = obj.vectors()  # doctest: +SKIP\n        >>> print(vec)  # doctest: +SKIP\n        targetname  datetime_jd  ...      range          range_rate\n           ---           d       ...        AU             AU / d\n        ---------- ------------- ... --------------- -----------------\n        (2012 TC4)     2458027.5 ... 0.0429332099306 -0.00408018711862\n        (2012 TC4) 2458027.50694 ... 0.0429048742906 -0.00408040726527\n        (2012 TC4) 2458027.51389 ... 0.0428765385796 -0.00408020747595\n        (2012 TC4) 2458027.52083 ... 0.0428482057142  -0.0040795878561\n        (2012 TC4) 2458027.52778 ...  0.042819878607 -0.00407854931543\n        (2012 TC4) 2458027.53472 ... 0.0427915601617  -0.0040770935665\n               ...           ... ...             ...               ...\n        (2012 TC4) 2458028.45833 ... 0.0392489462501 -0.00405496595173\n        (2012 TC4) 2458028.46528 ...   0.03922077771 -0.00405750632914\n        (2012 TC4) 2458028.47222 ...  0.039192592935 -0.00405964084539\n        (2012 TC4) 2458028.47917 ...  0.039164394759 -0.00406136516755\n        (2012 TC4) 2458028.48611 ... 0.0391361860433 -0.00406267574646\n        (2012 TC4) 2458028.49306 ... 0.0391079696711  -0.0040635698239\n        (2012 TC4)     2458028.5 ... 0.0390797485422 -0.00406404543822\n        Length = 145 rows",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ff0c2f1ffd7e174067a1be47d1a7b17e7c009883e4737353f54b1081bc89313a",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to HorizonsClass.vectors_async object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "closest_apparition",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "no_fragments",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "get_raw_response",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "refplane",
                    "value": "ecliptic",
                    "defaultValue": "ecliptic",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "aberrations",
                    "value": "geometric",
                    "defaultValue": "geometric",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "delta_T",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.vectors_async",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.vectors_async",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}