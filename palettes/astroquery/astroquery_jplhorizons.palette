{
    "modelData": {
        "filePath": "astroquery_jplhorizons.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "JPLHorizons\n-----------\n\n:author: Michael Mommert (mommermiscience@gmail.com)",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.2",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "astroquery",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "d2adc6e586ce13e40bac678b9d414ef918d60c4bfee4520b5e1ff0fd6432e52b",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755099102.265526,
        "numLGNodes": 9
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fcj0tuc7",
            "name": "jplhorizons.Horizons",
            "description": "A class for querying the\n    `JPL Horizons <https://ssd.jpl.nasa.gov/horizons/>`_ service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a4c9d91ffd4c572e9f27b6f5f146632bc8b4db136d9cbebeb10fc8a1f814f5f1",
            "fields": [
                {
                    "id": "aqse6_7s",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qkywcu1k",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8_1dwenc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.Horizons",
                    "defaultValue": "astroquery.jplhorizons.Horizons",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xkemfsad",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "abqk2549",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "dz1eihl7",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z9122q2b",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons",
                    "defaultValue": "astroquery.jplhorizons",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fs_xc7aj",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nmzrgqrp",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "4ffnov_u",
            "name": "HorizonsClass.__init__",
            "description": "Instantiate JPL query.\n    \n    Parameters\n    ----------\n    id : str, required\n        Name, number, or designation of the object to be queried.\n    location : str or dict, optional\n        Observer's location for ephemerides queries or center body name for\n        orbital element or vector queries. Uses the same codes as JPL\n        Horizons. If no location is provided, Earth's center is used for\n        ephemerides queries and the Sun's center for elements and vectors\n        queries. Arbitrary topocentric coordinates for ephemerides queries\n        can be provided in the format of a dictionary. The dictionary has to\n        be of the form {``'lon'``: longitude in deg (East positive, West\n        negative), ``'lat'``: latitude in deg (North positive, South\n        negative), ``'elevation'``: elevation in km above the reference\n        ellipsoid, [``'body'``: Horizons body ID of the central body;\n        optional; if this value is not provided it is assumed that this\n        location is on Earth]}.\n    epochs : scalar, list-like, or dictionary, optional\n        Either a list of epochs in JD or MJD format or a dictionary defining\n        a range of times and dates; the range dictionary has to be of the\n        form {``'start'``: 'YYYY-MM-DD [HH:MM:SS]', ``'stop'``: 'YYYY-MM-DD\n        [HH:MM:SS]', ``'step'``: 'n[y|d|m|s]'}. Epoch timescales depend on\n        the type of query performed: UTC for ephemerides queries, TDB for\n        element and vector queries. If no epochs are provided, the current\n        time is used.\n    id_type : str, optional\n        Controls Horizons's object selection for ``id``\n        [HORIZONSDOC_SELECTION]_ .  Options: ``'designation'`` (small body\n        designation), ``'name'`` (asteroid or comet name),\n        ``'asteroid_name'``, ``'comet_name'``, ``'smallbody'`` (asteroid\n        and comet search), or ``None`` (first search search planets,\n        natural satellites, spacecraft, and special cases, and if no\n        matches, then search small bodies).\n    \n    References\n    ----------\n    \n    .. [HORIZONSDOC_SELECTION] https://ssd.jpl.nasa.gov/horizons/manual.html#select (retrieved 2021 Sep 23).\n    \n    \n    Examples\n    --------\n    >>> from astroquery.jplhorizons import Horizons\n    >>> eros = Horizons(id='433', location='568',\n    ...              epochs={'start':'2017-01-01',\n    ...                      'stop':'2017-02-01',\n    ...                      'step':'1d'})\n    >>> print(eros)  # doctest: +SKIP\n    JPLHorizons instance \"433\"; location=568, epochs={'start': '2017-01-01', 'step': '1d', 'stop': '2017-02-01'}, id_type=None\nA class for querying the\n    `JPL Horizons <https://ssd.jpl.nasa.gov/horizons/>`_ service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d0f5a5ac4c63727946f57ceec72b47c2b7136e041971bafa428fe9074d0b07ea",
            "fields": [
                {
                    "id": "o3pa1lx6",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.jplhorizons.core.HorizonsClass.__init__ object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0hppkq3v",
                    "encoding": "",
                    "name": "id",
                    "value": "",
                    "defaultValue": "",
                    "description": "Name, number, or designation of the object to be queried.",
                    "type": "str, required",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u0af6wfj",
                    "encoding": "",
                    "name": "location",
                    "value": "",
                    "defaultValue": "",
                    "description": "Observer's location for ephemerides queries or center body name for\norbital element or vector queries. Uses the same codes as JPL\nHorizons. If no location is provided, Earth's center is used for\nephemerides queries and the Sun's center for elements and vectors\nqueries. Arbitrary topocentric coordinates for ephemerides queries\ncan be provided in the format of a dictionary. The dictionary has to\nbe of the form {``'lon'``: longitude in deg (East positive, West\nnegative), ``'lat'``: latitude in deg (North positive, South\nnegative), ``'elevation'``: elevation in km above the reference\nellipsoid, [``'body'``: Horizons body ID of the central body;\noptional; if this value is not provided it is assumed that this\nlocation is on Earth]}.",
                    "type": "str or dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nj_k73dn",
                    "encoding": "",
                    "name": "epochs",
                    "value": "",
                    "defaultValue": "",
                    "description": "Either a list of epochs in JD or MJD format or a dictionary defining\na range of times and dates; the range dictionary has to be of the\nform {``'start'``: 'YYYY-MM-DD [HH:MM:SS]', ``'stop'``: 'YYYY-MM-DD\n[HH:MM:SS]', ``'step'``: 'n[y|d|m|s]'}. Epoch timescales depend on\nthe type of query performed: UTC for ephemerides queries, TDB for\nelement and vector queries. If no epochs are provided, the current\ntime is used.",
                    "type": "scalar, list-like, or dictionary",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ggeqtmfo",
                    "encoding": "",
                    "name": "id_type",
                    "value": "",
                    "defaultValue": "",
                    "description": "Controls Horizons's object selection for ``id``\n[HORIZONSDOC_SELECTION]_ .  Options: ``'designation'`` (small body\ndesignation), ``'name'`` (asteroid or comet name),\n``'asteroid_name'``, ``'comet_name'``, ``'smallbody'`` (asteroid\nand comet search), or ``None`` (first search search planets,\nnatural satellites, spacecraft, and special cases, and if no\nmatches, then search small bodies).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5d5gmx5w",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.__init__",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ndstxt4j",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pak4p9o5",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6v6bzzf9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zunekwu2",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1kp7sxif",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7snu4art",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "9npct2fn",
            "name": "HorizonsClass.elements",
            "description": "Queries the service and returns a table object.\n    \n    Query JPL Horizons for osculating orbital elements.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the center body relative to which the elements are provided.\n    \n    The following table lists the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime_str     | epoch Date (str, ``Calendar Date (TDB)``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float, ``JDTDB``)          |\n    +------------------+-----------------------------------------------+\n    | e                | eccentricity (float, ``EC``)                  |\n    +------------------+-----------------------------------------------+\n    | q                | periapsis distance (float, au, ``QR``)        |\n    +------------------+-----------------------------------------------+\n    | a                | semi-major axis (float, au, ``A``)            |\n    +------------------+-----------------------------------------------+\n    | incl             | inclination (float, deg, ``IN``)              |\n    +------------------+-----------------------------------------------+\n    | Omega            | longitude of Asc. Node (float, deg, ``OM``)   |\n    +------------------+-----------------------------------------------+\n    | w                | argument of the perifocus (float, deg, ``W``) |\n    +------------------+-----------------------------------------------+\n    | Tp_jd            | time of periapsis (float, Julian Date, ``Tp``)|\n    +------------------+-----------------------------------------------+\n    | n                | mean motion (float, deg/d, ``N``)             |\n    +------------------+-----------------------------------------------+\n    | M                | mean anomaly (float, deg, ``MA``)             |\n    +------------------+-----------------------------------------------+\n    | nu               | true anomaly (float, deg, ``TA``)             |\n    +------------------+-----------------------------------------------+\n    | period           | orbital period (float, (Earth) d, ``PR``)     |\n    +------------------+-----------------------------------------------+\n    | Q                | apoapsis distance (float, au, ``AD``)         |\n    +------------------+-----------------------------------------------+\n    \n    \n    Parameters\n    ----------\n    refsystem : string\n        Element reference system for geometric and astrometric quantities:\n        ``'ICRF'`` or ``'B1950'``; default: ``'ICRF'``\n    refplane : string\n        Reference plane for all output quantities: ``'ecliptic'`` (ecliptic\n        and mean equinox of reference epoch), ``'earth'`` (Earth mean\n        equator and equinox of reference epoch), or ``'body'`` (body mean\n        equator and node of date); default: ``'ecliptic'``\n    tp_type : string\n        Representation for time-of-perihelion passage: ``'absolute'`` or\n        ``'relative'`` (to epoch); default: ``'absolute'``\n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for non-cometary objects.\n    get_query_payload : boolean, optional\n        When set to ``True`` the method returns the HTTP request parameters\n        as a dict, default: False\n    get_raw_response: boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    \n    \n    \n    Examples\n    --------\n        >>> from astroquery.jplhorizons import Horizons\n        >>> obj = Horizons(id='433', location='500@10',\n        ...                epochs=2458133.33546)\n        >>> el = obj.elements()  # doctest: +SKIP\n        >>> print(el)  # doctest: +SKIP\n            targetname      datetime_jd  ...       Q            P\n               ---               d       ...       AU           d\n        ------------------ ------------- ... ------------- ------------\n        433 Eros (1898 DQ) 2458133.33546 ... 1.78244263804 642.93873484\n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "707afe872613bd1ad607af7d7f2ae1dd59902b729868e485697f5f273fe84e8e",
            "fields": [
                {
                    "id": "y1zt1n1i",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.jplhorizons.core.HorizonsClass.elements object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_p4vmeit",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zi6zbcz8",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "07188ivw",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.elements",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.elements",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pb78xnag",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "daluxhub",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "uwcv6ly0",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "267lmxum",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i4nfb6od",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "80gu0gpm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "7h0hnyfz",
            "name": "HorizonsClass.elements_async",
            "description": "Query JPL Horizons for osculating orbital elements.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the center body relative to which the elements are provided.\n    \n    The following table lists the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime_str     | epoch Date (str, ``Calendar Date (TDB)``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float, ``JDTDB``)          |\n    +------------------+-----------------------------------------------+\n    | e                | eccentricity (float, ``EC``)                  |\n    +------------------+-----------------------------------------------+\n    | q                | periapsis distance (float, au, ``QR``)        |\n    +------------------+-----------------------------------------------+\n    | a                | semi-major axis (float, au, ``A``)            |\n    +------------------+-----------------------------------------------+\n    | incl             | inclination (float, deg, ``IN``)              |\n    +------------------+-----------------------------------------------+\n    | Omega            | longitude of Asc. Node (float, deg, ``OM``)   |\n    +------------------+-----------------------------------------------+\n    | w                | argument of the perifocus (float, deg, ``W``) |\n    +------------------+-----------------------------------------------+\n    | Tp_jd            | time of periapsis (float, Julian Date, ``Tp``)|\n    +------------------+-----------------------------------------------+\n    | n                | mean motion (float, deg/d, ``N``)             |\n    +------------------+-----------------------------------------------+\n    | M                | mean anomaly (float, deg, ``MA``)             |\n    +------------------+-----------------------------------------------+\n    | nu               | true anomaly (float, deg, ``TA``)             |\n    +------------------+-----------------------------------------------+\n    | period           | orbital period (float, (Earth) d, ``PR``)     |\n    +------------------+-----------------------------------------------+\n    | Q                | apoapsis distance (float, au, ``AD``)         |\n    +------------------+-----------------------------------------------+\n    \n    \n    Parameters\n    ----------\n    refsystem : string\n        Element reference system for geometric and astrometric quantities:\n        ``'ICRF'`` or ``'B1950'``; default: ``'ICRF'``\n    refplane : string\n        Reference plane for all output quantities: ``'ecliptic'`` (ecliptic\n        and mean equinox of reference epoch), ``'earth'`` (Earth mean\n        equator and equinox of reference epoch), or ``'body'`` (body mean\n        equator and node of date); default: ``'ecliptic'``\n    tp_type : string\n        Representation for time-of-perihelion passage: ``'absolute'`` or\n        ``'relative'`` (to epoch); default: ``'absolute'``\n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for non-cometary objects.\n    get_query_payload : boolean, optional\n        When set to ``True`` the method returns the HTTP request parameters\n        as a dict, default: False\n    get_raw_response: boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    \n    \n    Returns\n    -------\n    response : `requests.Response`\n        The response of the HTTP request.\n    \n    \n    Examples\n    --------\n        >>> from astroquery.jplhorizons import Horizons\n        >>> obj = Horizons(id='433', location='500@10',\n        ...                epochs=2458133.33546)\n        >>> el = obj.elements()  # doctest: +SKIP\n        >>> print(el)  # doctest: +SKIP\n            targetname      datetime_jd  ...       Q            P\n               ---               d       ...       AU           d\n        ------------------ ------------- ... ------------- ------------\n        433 Eros (1898 DQ) 2458133.33546 ... 1.78244263804 642.93873484",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7998804afa79cce0aa2837ff7d159699bf631181ebb4bb635887784b60abcaa1",
            "fields": [
                {
                    "id": "1k71qeus",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.jplhorizons.core.HorizonsClass.elements_async object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5joncv8q",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to ``True`` the method returns the HTTP request parameters\nas a dict, default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t33cpcaf",
                    "encoding": "",
                    "name": "refsystem",
                    "value": "ICRF",
                    "defaultValue": "ICRF",
                    "description": "Element reference system for geometric and astrometric quantities:\n``'ICRF'`` or ``'B1950'``; default: ``'ICRF'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "___74v6d",
                    "encoding": "",
                    "name": "refplane",
                    "value": "ecliptic",
                    "defaultValue": "ecliptic",
                    "description": "Reference plane for all output quantities: ``'ecliptic'`` (ecliptic\nand mean equinox of reference epoch), ``'earth'`` (Earth mean\nequator and equinox of reference epoch), or ``'body'`` (body mean\nequator and node of date); default: ``'ecliptic'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "16pnr9qj",
                    "encoding": "",
                    "name": "tp_type",
                    "value": "absolute",
                    "defaultValue": "absolute",
                    "description": "Representation for time-of-perihelion passage: ``'absolute'`` or\n``'relative'`` (to epoch); default: ``'absolute'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ryd6kje8",
                    "encoding": "",
                    "name": "closest_apparition",
                    "value": false,
                    "defaultValue": false,
                    "description": "Only applies to comets. This option will choose the closest\napparition available in time to the selected epoch; default: False.\nDo not use this option for non-cometary objects.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d_e5ehm3",
                    "encoding": "",
                    "name": "no_fragments",
                    "value": false,
                    "defaultValue": false,
                    "description": "Only applies to comets. Reject all comet fragments from selection;\ndefault: False. Do not use this option for non-cometary objects.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pmmjyzpz",
                    "encoding": "",
                    "name": "get_raw_response",
                    "value": false,
                    "defaultValue": false,
                    "description": "Return raw data as obtained by JPL Horizons without parsing the data\ninto a table, default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cl327jzq",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zjuy42rv",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.elements_async",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.elements_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0c786lrk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4ji803i8",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "69nr1404",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ss063ylt",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "84c0vr9r",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8_toe_fn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "of9uk6jf",
            "name": "HorizonsClass.ephemerides",
            "description": "Queries the service and returns a table object.\n    \n    Query JPL Horizons for ephemerides.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the location of the observer.\n    \n    The following tables list the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    \n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime         | epoch (str, ``Date__(UT)__HR:MN:SC.fff``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float,                     |\n    |                  | ``Date_________JDUT``)                        |\n    +------------------+-----------------------------------------------+\n    | solar_presence   | information on Sun's presence (str)           |\n    +------------------+-----------------------------------------------+\n    | flags            | information on Moon, target status (str)      |\n    +------------------+-----------------------------------------------+\n    | RA               | target RA (float, deg, ``DEC_(XXX)``)         |\n    +------------------+-----------------------------------------------+\n    | DEC              | target DEC (float, deg, ``DEC_(XXX)``)        |\n    +------------------+-----------------------------------------------+\n    | RA_app           | target apparent RA (float, deg,               |\n    |                  | ``R.A._(a-app)``)                             |\n    +------------------+-----------------------------------------------+\n    | DEC_app          | target apparent DEC (float, deg,              |\n    |                  | ``DEC_(a-app)``)                              |\n    +------------------+-----------------------------------------------+\n    | RA_rate          | target rate RA (float, arcsec/hr, ``RA*cosD``)|\n    +------------------+-----------------------------------------------+\n    | DEC_rate         | target RA (float, arcsec/hr, ``d(DEC)/dt``)   |\n    +------------------+-----------------------------------------------+\n    | AZ               | Azimuth (float, deg, EoN, ``Azi_(a-app)``)    |\n    +------------------+-----------------------------------------------+\n    | EL               | Elevation (float, deg, ``Elev_(a-app)``)      |\n    +------------------+-----------------------------------------------+\n    | AZ_rate          | Azimuth rate (float, arcsec/minute,           |\n    |                  | ``dAZ*cosE``)                                 |\n    +------------------+-----------------------------------------------+\n    | EL_rate          | Elevation rate (float, arcsec/minute,         |\n    |                  | ``d(ELV)/dt``)                                |\n    +------------------+-----------------------------------------------+\n    | sat_X            | satellite X position (arcsec,                 |\n    |                  | ``X_(sat-prim)``)                             |\n    +------------------+-----------------------------------------------+\n    | sat_Y            | satellite Y position (arcsec,                 |\n    |                  | ``Y_(sat-prim)``)                             |\n    +------------------+-----------------------------------------------+\n    | sat_PANG         | satellite position angle (deg,                |\n    |                  | ``SatPANG``)                                  |\n    +------------------+-----------------------------------------------+\n    | siderealtime     | local apparent sidereal time (str,            |\n    |                  | ``L_Ap_Sid_Time``)                            |\n    +------------------+-----------------------------------------------+\n    | airmass          | target optical airmass (float, ``a-mass``)    |\n    +------------------+-----------------------------------------------+\n    | magextinct       | V-mag extinction (float, mag, ``mag_ex``)     |\n    +------------------+-----------------------------------------------+\n    | V                | V magnitude (float, mag, ``APmag``)           |\n    +------------------+-----------------------------------------------+\n    | Tmag             | comet Total magnitude (float, mag, ``T-mag``) |\n    +------------------+-----------------------------------------------+\n    | Nmag             | comet Nucleaus magnitude (float, mag,         |\n    |                  | ``N-mag``)                                    |\n    +------------------+-----------------------------------------------+\n    | surfbright       | surf brightness (float, mag/arcsec^2,         |\n    |                  | ``S-brt``)                                    |\n    +------------------+-----------------------------------------------+\n    | illumination     | frac of illumination (float, percent,         |\n    |                  | ``Illu%``)                                    |\n    +------------------+-----------------------------------------------+\n    | illum_defect     | Defect of illumination (float, arcsec,        |\n    |                  | ``Dec_illu``)                                 |\n    +------------------+-----------------------------------------------+\n    | sat_sep          | Target-primary angular separation (float,     |\n    |                  | arcsec, ``ang-sep``)                          |\n    +------------------+-----------------------------------------------+\n    | sat_vis          | Target-primary visibility (str, ``v``)        |\n    +------------------+-----------------------------------------------+\n    | ang_width        | Angular width of target (float, arcsec,       |\n    |                  | ``Ang-diam``)                                 |\n    +------------------+-----------------------------------------------+\n    | PDObsLon         | Apparent planetodetic longitude (float, deg,  |\n    |                  | ``ObsSub-LON``)                               |\n    +------------------+-----------------------------------------------+\n    | PDObsLat         | Apparent planetodetic latitude  (float, deg,  |\n    |                  | ``ObsSub-LAT``)                               |\n    +------------------+-----------------------------------------------+\n    | PDSunLon         | Subsolar planetodetic longitude (float, deg,  |\n    |                  | ``SunSub-LON``)                               |\n    +------------------+-----------------------------------------------+\n    | PDSunLat         | Subsolar planetodetic latitude  (float, deg,  |\n    |                  | ``SunSub-LAT``)                               |\n    +------------------+-----------------------------------------------+\n    | SubSol_ang       | Target sub-solar point position angle         |\n    |                  | (float, deg, ``SN.ang``)                      |\n    +------------------+-----------------------------------------------+\n    | SubSol_dist      | Target sub-solar point position angle distance|\n    |                  | (float, arcsec, ``SN.dist``)                  |\n    +------------------+-----------------------------------------------+\n    | NPole_ang        | Target's North Pole position angle            |\n    |                  | (float, deg, ``NP.ang``)                      |\n    +------------------+-----------------------------------------------+\n    | NPole_dist       | Target's North Pole position angle distance   |\n    |                  | (float, arcsec, ``NP.dist``)                  |\n    +------------------+-----------------------------------------------+\n    | EclLon           | heliocentr ecl long (float, deg, ``hEcl-Lon``)|\n    +------------------+-----------------------------------------------+\n    | EclLat           | heliocentr ecl lat (float, deg, ``hEcl-Lat``) |\n    +------------------+-----------------------------------------------+\n    | ObsEclLon        | obscentr ecl long (float, deg, ``ObsEcLon``)  |\n    +------------------+-----------------------------------------------+\n    | ObsEclLat        | obscentr ecl lat (float, deg, ``ObsEcLat``)   |\n    +------------------+-----------------------------------------------+\n    | r                | heliocentric distance (float, au, ``r``)      |\n    +------------------+-----------------------------------------------+\n    | r_rate           | heliocentric radial rate (float, km/s,        |\n    |                  | ``rdot``)                                     |\n    +------------------+-----------------------------------------------+\n    | delta            | distance from observer (float, au, ``delta``) |\n    +------------------+-----------------------------------------------+\n    | delta_rate       | obs-centric rad rate (float, km/s, ``deldot``)|\n    +------------------+-----------------------------------------------+\n    | lighttime        | one-way light time (float, min, ``1-way_LT``) |\n    +------------------+-----------------------------------------------+\n    | vel_sun          | Target center velocity wrt Sun                |\n    |                  | (float, km/s, ``VmagSn``)                     |\n    +------------------+-----------------------------------------------+\n    | vel_obs          | Target center velocity wrt Observer           |\n    |                  | (float, km/s, ``VmagOb``)                     |\n    +------------------+-----------------------------------------------+\n    | elong            | solar elongation (float, deg, ``S-O-T``)      |\n    +------------------+-----------------------------------------------+\n    | elongFlag        | app. position relative to Sun (str, ``/r``)   |\n    +------------------+-----------------------------------------------+\n    | alpha            | solar phase angle (float, deg, ``S-T-O``)     |\n    +------------------+-----------------------------------------------+\n    | lunar_elong      | Apparent lunar elongation angle wrt target    |\n    |                  | (float, deg, ``T-O-M``)                       |\n    +------------------+-----------------------------------------------+\n    | lunar_illum      | Lunar illumination percentage                 |\n    |                  | (float, percent, ``MN_Illu%``)                |\n    +------------------+-----------------------------------------------+\n    | IB_elong         | Apparent interfering body elongation angle    |\n    |                  | wrt target (float, deg, ``T-O-I``)            |\n    +------------------+-----------------------------------------------+\n    | IB_illum         | Interfering body illumination percentage      |\n    |                  | (float, percent, ``IB_Illu%``)                |\n    +------------------+-----------------------------------------------+\n    | sat_alpha        | Observer-Primary-Target angle                 |\n    |                  | (float, deg, ``O-P-T``)                       |\n    +------------------+-----------------------------------------------+\n    | OrbPlaneAng      | orbital plane angle (float, deg, ``PlAng``)   |\n    +------------------+-----------------------------------------------+\n    | sunTargetPA      | -Sun vector PA (float, deg, EoN, ``PsAng``)   |\n    +------------------+-----------------------------------------------+\n    | velocityPA       | -velocity vector PA (float, deg, EoN,         |\n    |                  | ``PsAMV``)                                    |\n    +------------------+-----------------------------------------------+\n    | constellation    | constellation ID containing target (str,      |\n    |                  | ``Cnst``)                                     |\n    +------------------+-----------------------------------------------+\n    | TDB-UT           | difference between TDB and UT (float,         |\n    |                  | seconds, ``TDB-UT``)                          |\n    +------------------+-----------------------------------------------+\n    | NPole_RA         | Target's North Pole RA (float, deg,           |\n    |                  | ``N.Pole-RA``)                                |\n    +------------------+-----------------------------------------------+\n    | NPole_DEC        | Target's North Pole DEC (float, deg,          |\n    |                  | ``N.Pole-DC``)                                |\n    +------------------+-----------------------------------------------+\n    | GlxLon           | galactic longitude (float, deg, ``GlxLon``)   |\n    +------------------+-----------------------------------------------+\n    | GlxLat           | galactic latitude  (float, deg, ``GlxLat``)   |\n    +------------------+-----------------------------------------------+\n    | solartime        | local apparent solar time (string,            |\n    |                  | ``L_Ap_SOL_Time``)                            |\n    +------------------+-----------------------------------------------+\n    | earth_lighttime  | observer lighttime from center of Earth       |\n    |                  | (float, minutes, ``399_ins_LT``               |\n    +------------------+-----------------------------------------------+\n    | RA_3sigma        | 3 sigma positional uncertainty in RA (float,  |\n    |                  | arcsec, ``RA_3sigma``)                        |\n    +------------------+-----------------------------------------------+\n    | DEC_3sigma       | 3 sigma positional uncertainty in  DEC (float,|\n    |                  | arcsec, ``DEC_3sigma``)                       |\n    +------------------+-----------------------------------------------+\n    | SMAA_3sigma      | 3sig pos unc error ellipse semi-major axis    |\n    |                  | (float, arcsec, ``SMAA_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | SMIA_3sigma      | 3sig pos unc error ellipse semi-minor axis    |\n    |                  | (float, arcsec, ``SMIA_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | Theta_3sigma     | pos unc error ellipse position angle          |\n    |                  | (float, deg, ``Theta``)                       |\n    +------------------+-----------------------------------------------+\n    | Area_3sigma      | 3sig pos unc error ellipse are                |\n    |                  | (float, arcsec^2, ``Area_3sig``)              |\n    +------------------+-----------------------------------------------+\n    | RSS_3sigma       | 3sig pos unc error ellipse root-sum-square    |\n    |                  | (float, arcsec, ``POS_3sigma``)               |\n    +------------------+-----------------------------------------------+\n    | r_3sigma         | 3sig range uncertainty                        |\n    |                  | (float, km, ``RNG_3sigma``)                   |\n    +------------------+-----------------------------------------------+\n    | r_rate_3sigma    | 3sig range rate uncertainty                   |\n    |                  | (float, km/second, ``RNGRT_3sigma``)          |\n    +------------------+-----------------------------------------------+\n    | SBand_3sigma     | 3sig Doppler radar uncertainties at S-band    |\n    |                  | (float, Hertz, ``DOP_S_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | XBand_3sigma     | 3sig Doppler radar uncertainties at X-band    |\n    |                  | (float, Hertz, ``DOP_X_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | DoppDelay_3sigma | 3sig Doppler radar round-trip delay           |\n    |                  | unc (float, second, ``RT_delay_3sig``)        |\n    +------------------+-----------------------------------------------+\n    | true_anom        | True Anomaly (float, deg, ``Tru_Anom``)       |\n    +------------------+-----------------------------------------------+\n    | hour_angle       | local apparent hour angle (string,            |\n    |                  | sexagesimal angular hours, ``L_Ap_Hour_Ang``) |\n    +------------------+-----------------------------------------------+\n    | alpha_true       | true phase angle (float, deg, ``phi``)        |\n    +------------------+-----------------------------------------------+\n    | PABLon           | phase angle bisector longitude                |\n    |                  | (float, deg, ``PAB-LON``)                     |\n    +------------------+-----------------------------------------------+\n    | PABLat           | phase angle bisector latitude                 |\n    |                  | (float, deg, ``PAB-LAT``)                     |\n    +------------------+-----------------------------------------------+\n    \n    \n    Parameters\n    ----------\n    airmass_lessthan : float, optional\n        Defines a maximum airmass for the query, default: 99\n    solar_elongation : tuple, optional\n        Permissible solar elongation range: (minimum, maximum); default:\n        (0,180)\n    max_hour_angle : float, optional\n        Defines a maximum hour angle for the query, default: 0\n    rate_cutoff : float, optional\n        Angular range rate upper limit cutoff in arcsec/h; default: disabled\n    skip_daylight : boolean, optional\n        Crop daylight epochs in query, default: False\n    refraction : boolean\n        If ``True``, coordinates account for a standard atmosphere\n        refraction model; if ``False``, coordinates do not account for\n        refraction (airless model); default: ``False``\n    refsystem : string\n        Coordinate reference system: ``'ICRF'`` or ``'B1950'``; default:\n        ``'ICRF'``\n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for\n        non-cometary objects.\n    quantities : integer or string, optional\n        Single integer or comma-separated list in the form of a string\n        corresponding to all the quantities to be queried from JPL Horizons\n        using the coding according to the `JPL Horizons User Manual\n        Definition of Observer Table Quantities\n        <https://ssd.jpl.nasa.gov/?horizons_doc#table_quantities>`_;\n        default: all quantities\n    get_query_payload : boolean, optional\n        When set to `True` the method returns the HTTP request parameters as\n        a dict, default: False\n    get_raw_response : boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    extra_precision : boolean, optional\n        Enables extra precision in RA and DEC values; default: False\n    \n    \n    \n    Examples\n    --------\n    >>> from astroquery.jplhorizons import Horizons\n    >>> obj = Horizons(id='Ceres', location='568',\n    ...             epochs={'start':'2010-01-01',\n    ...                     'stop':'2010-03-01',\n    ...                     'step':'10d'})\n    >>> eph = obj.ephemerides()  # doctest: +SKIP\n    >>> print(eph)  # doctest: +SKIP\n        targetname       datetime_str   datetime_jd ...  PABLon  PABLat\n           ---               ---             d      ...   deg     deg\n    ----------------- ----------------- ----------- ... -------- ------\n    1 Ceres (A801 AA) 2010-Jan-01 00:00   2455197.5 ... 238.2494 4.5532\n    1 Ceres (A801 AA) 2010-Jan-11 00:00   2455207.5 ... 241.3339 4.2832\n    1 Ceres (A801 AA) 2010-Jan-21 00:00   2455217.5 ... 244.3394 4.0089\n    1 Ceres (A801 AA) 2010-Jan-31 00:00   2455227.5 ... 247.2518 3.7289\n    1 Ceres (A801 AA) 2010-Feb-10 00:00   2455237.5 ... 250.0576 3.4415\n    1 Ceres (A801 AA) 2010-Feb-20 00:00   2455247.5 ... 252.7383 3.1451\n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "917b12807d0e3752b06411d5795f6e4a0bd7dec2501c774d9119ce3896147337",
            "fields": [
                {
                    "id": "zid77zpv",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.jplhorizons.core.HorizonsClass.ephemerides object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6anqi5n8",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yfln7gnx",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fu67lfrv",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.ephemerides",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.ephemerides",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ln6_3d__",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lf53czgk",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "8e6sj326",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zz9e3uor",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yhs6e5rr",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "10471kj2",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "mipmo892",
            "name": "HorizonsClass.ephemerides_async",
            "description": "Query JPL Horizons for ephemerides.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the location of the observer.\n    \n    The following tables list the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    \n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime         | epoch (str, ``Date__(UT)__HR:MN:SC.fff``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float,                     |\n    |                  | ``Date_________JDUT``)                        |\n    +------------------+-----------------------------------------------+\n    | solar_presence   | information on Sun's presence (str)           |\n    +------------------+-----------------------------------------------+\n    | flags            | information on Moon, target status (str)      |\n    +------------------+-----------------------------------------------+\n    | RA               | target RA (float, deg, ``DEC_(XXX)``)         |\n    +------------------+-----------------------------------------------+\n    | DEC              | target DEC (float, deg, ``DEC_(XXX)``)        |\n    +------------------+-----------------------------------------------+\n    | RA_app           | target apparent RA (float, deg,               |\n    |                  | ``R.A._(a-app)``)                             |\n    +------------------+-----------------------------------------------+\n    | DEC_app          | target apparent DEC (float, deg,              |\n    |                  | ``DEC_(a-app)``)                              |\n    +------------------+-----------------------------------------------+\n    | RA_rate          | target rate RA (float, arcsec/hr, ``RA*cosD``)|\n    +------------------+-----------------------------------------------+\n    | DEC_rate         | target RA (float, arcsec/hr, ``d(DEC)/dt``)   |\n    +------------------+-----------------------------------------------+\n    | AZ               | Azimuth (float, deg, EoN, ``Azi_(a-app)``)    |\n    +------------------+-----------------------------------------------+\n    | EL               | Elevation (float, deg, ``Elev_(a-app)``)      |\n    +------------------+-----------------------------------------------+\n    | AZ_rate          | Azimuth rate (float, arcsec/minute,           |\n    |                  | ``dAZ*cosE``)                                 |\n    +------------------+-----------------------------------------------+\n    | EL_rate          | Elevation rate (float, arcsec/minute,         |\n    |                  | ``d(ELV)/dt``)                                |\n    +------------------+-----------------------------------------------+\n    | sat_X            | satellite X position (arcsec,                 |\n    |                  | ``X_(sat-prim)``)                             |\n    +------------------+-----------------------------------------------+\n    | sat_Y            | satellite Y position (arcsec,                 |\n    |                  | ``Y_(sat-prim)``)                             |\n    +------------------+-----------------------------------------------+\n    | sat_PANG         | satellite position angle (deg,                |\n    |                  | ``SatPANG``)                                  |\n    +------------------+-----------------------------------------------+\n    | siderealtime     | local apparent sidereal time (str,            |\n    |                  | ``L_Ap_Sid_Time``)                            |\n    +------------------+-----------------------------------------------+\n    | airmass          | target optical airmass (float, ``a-mass``)    |\n    +------------------+-----------------------------------------------+\n    | magextinct       | V-mag extinction (float, mag, ``mag_ex``)     |\n    +------------------+-----------------------------------------------+\n    | V                | V magnitude (float, mag, ``APmag``)           |\n    +------------------+-----------------------------------------------+\n    | Tmag             | comet Total magnitude (float, mag, ``T-mag``) |\n    +------------------+-----------------------------------------------+\n    | Nmag             | comet Nucleaus magnitude (float, mag,         |\n    |                  | ``N-mag``)                                    |\n    +------------------+-----------------------------------------------+\n    | surfbright       | surf brightness (float, mag/arcsec^2,         |\n    |                  | ``S-brt``)                                    |\n    +------------------+-----------------------------------------------+\n    | illumination     | frac of illumination (float, percent,         |\n    |                  | ``Illu%``)                                    |\n    +------------------+-----------------------------------------------+\n    | illum_defect     | Defect of illumination (float, arcsec,        |\n    |                  | ``Dec_illu``)                                 |\n    +------------------+-----------------------------------------------+\n    | sat_sep          | Target-primary angular separation (float,     |\n    |                  | arcsec, ``ang-sep``)                          |\n    +------------------+-----------------------------------------------+\n    | sat_vis          | Target-primary visibility (str, ``v``)        |\n    +------------------+-----------------------------------------------+\n    | ang_width        | Angular width of target (float, arcsec,       |\n    |                  | ``Ang-diam``)                                 |\n    +------------------+-----------------------------------------------+\n    | PDObsLon         | Apparent planetodetic longitude (float, deg,  |\n    |                  | ``ObsSub-LON``)                               |\n    +------------------+-----------------------------------------------+\n    | PDObsLat         | Apparent planetodetic latitude  (float, deg,  |\n    |                  | ``ObsSub-LAT``)                               |\n    +------------------+-----------------------------------------------+\n    | PDSunLon         | Subsolar planetodetic longitude (float, deg,  |\n    |                  | ``SunSub-LON``)                               |\n    +------------------+-----------------------------------------------+\n    | PDSunLat         | Subsolar planetodetic latitude  (float, deg,  |\n    |                  | ``SunSub-LAT``)                               |\n    +------------------+-----------------------------------------------+\n    | SubSol_ang       | Target sub-solar point position angle         |\n    |                  | (float, deg, ``SN.ang``)                      |\n    +------------------+-----------------------------------------------+\n    | SubSol_dist      | Target sub-solar point position angle distance|\n    |                  | (float, arcsec, ``SN.dist``)                  |\n    +------------------+-----------------------------------------------+\n    | NPole_ang        | Target's North Pole position angle            |\n    |                  | (float, deg, ``NP.ang``)                      |\n    +------------------+-----------------------------------------------+\n    | NPole_dist       | Target's North Pole position angle distance   |\n    |                  | (float, arcsec, ``NP.dist``)                  |\n    +------------------+-----------------------------------------------+\n    | EclLon           | heliocentr ecl long (float, deg, ``hEcl-Lon``)|\n    +------------------+-----------------------------------------------+\n    | EclLat           | heliocentr ecl lat (float, deg, ``hEcl-Lat``) |\n    +------------------+-----------------------------------------------+\n    | ObsEclLon        | obscentr ecl long (float, deg, ``ObsEcLon``)  |\n    +------------------+-----------------------------------------------+\n    | ObsEclLat        | obscentr ecl lat (float, deg, ``ObsEcLat``)   |\n    +------------------+-----------------------------------------------+\n    | r                | heliocentric distance (float, au, ``r``)      |\n    +------------------+-----------------------------------------------+\n    | r_rate           | heliocentric radial rate (float, km/s,        |\n    |                  | ``rdot``)                                     |\n    +------------------+-----------------------------------------------+\n    | delta            | distance from observer (float, au, ``delta``) |\n    +------------------+-----------------------------------------------+\n    | delta_rate       | obs-centric rad rate (float, km/s, ``deldot``)|\n    +------------------+-----------------------------------------------+\n    | lighttime        | one-way light time (float, min, ``1-way_LT``) |\n    +------------------+-----------------------------------------------+\n    | vel_sun          | Target center velocity wrt Sun                |\n    |                  | (float, km/s, ``VmagSn``)                     |\n    +------------------+-----------------------------------------------+\n    | vel_obs          | Target center velocity wrt Observer           |\n    |                  | (float, km/s, ``VmagOb``)                     |\n    +------------------+-----------------------------------------------+\n    | elong            | solar elongation (float, deg, ``S-O-T``)      |\n    +------------------+-----------------------------------------------+\n    | elongFlag        | app. position relative to Sun (str, ``/r``)   |\n    +------------------+-----------------------------------------------+\n    | alpha            | solar phase angle (float, deg, ``S-T-O``)     |\n    +------------------+-----------------------------------------------+\n    | lunar_elong      | Apparent lunar elongation angle wrt target    |\n    |                  | (float, deg, ``T-O-M``)                       |\n    +------------------+-----------------------------------------------+\n    | lunar_illum      | Lunar illumination percentage                 |\n    |                  | (float, percent, ``MN_Illu%``)                |\n    +------------------+-----------------------------------------------+\n    | IB_elong         | Apparent interfering body elongation angle    |\n    |                  | wrt target (float, deg, ``T-O-I``)            |\n    +------------------+-----------------------------------------------+\n    | IB_illum         | Interfering body illumination percentage      |\n    |                  | (float, percent, ``IB_Illu%``)                |\n    +------------------+-----------------------------------------------+\n    | sat_alpha        | Observer-Primary-Target angle                 |\n    |                  | (float, deg, ``O-P-T``)                       |\n    +------------------+-----------------------------------------------+\n    | OrbPlaneAng      | orbital plane angle (float, deg, ``PlAng``)   |\n    +------------------+-----------------------------------------------+\n    | sunTargetPA      | -Sun vector PA (float, deg, EoN, ``PsAng``)   |\n    +------------------+-----------------------------------------------+\n    | velocityPA       | -velocity vector PA (float, deg, EoN,         |\n    |                  | ``PsAMV``)                                    |\n    +------------------+-----------------------------------------------+\n    | constellation    | constellation ID containing target (str,      |\n    |                  | ``Cnst``)                                     |\n    +------------------+-----------------------------------------------+\n    | TDB-UT           | difference between TDB and UT (float,         |\n    |                  | seconds, ``TDB-UT``)                          |\n    +------------------+-----------------------------------------------+\n    | NPole_RA         | Target's North Pole RA (float, deg,           |\n    |                  | ``N.Pole-RA``)                                |\n    +------------------+-----------------------------------------------+\n    | NPole_DEC        | Target's North Pole DEC (float, deg,          |\n    |                  | ``N.Pole-DC``)                                |\n    +------------------+-----------------------------------------------+\n    | GlxLon           | galactic longitude (float, deg, ``GlxLon``)   |\n    +------------------+-----------------------------------------------+\n    | GlxLat           | galactic latitude  (float, deg, ``GlxLat``)   |\n    +------------------+-----------------------------------------------+\n    | solartime        | local apparent solar time (string,            |\n    |                  | ``L_Ap_SOL_Time``)                            |\n    +------------------+-----------------------------------------------+\n    | earth_lighttime  | observer lighttime from center of Earth       |\n    |                  | (float, minutes, ``399_ins_LT``               |\n    +------------------+-----------------------------------------------+\n    | RA_3sigma        | 3 sigma positional uncertainty in RA (float,  |\n    |                  | arcsec, ``RA_3sigma``)                        |\n    +------------------+-----------------------------------------------+\n    | DEC_3sigma       | 3 sigma positional uncertainty in  DEC (float,|\n    |                  | arcsec, ``DEC_3sigma``)                       |\n    +------------------+-----------------------------------------------+\n    | SMAA_3sigma      | 3sig pos unc error ellipse semi-major axis    |\n    |                  | (float, arcsec, ``SMAA_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | SMIA_3sigma      | 3sig pos unc error ellipse semi-minor axis    |\n    |                  | (float, arcsec, ``SMIA_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | Theta_3sigma     | pos unc error ellipse position angle          |\n    |                  | (float, deg, ``Theta``)                       |\n    +------------------+-----------------------------------------------+\n    | Area_3sigma      | 3sig pos unc error ellipse are                |\n    |                  | (float, arcsec^2, ``Area_3sig``)              |\n    +------------------+-----------------------------------------------+\n    | RSS_3sigma       | 3sig pos unc error ellipse root-sum-square    |\n    |                  | (float, arcsec, ``POS_3sigma``)               |\n    +------------------+-----------------------------------------------+\n    | r_3sigma         | 3sig range uncertainty                        |\n    |                  | (float, km, ``RNG_3sigma``)                   |\n    +------------------+-----------------------------------------------+\n    | r_rate_3sigma    | 3sig range rate uncertainty                   |\n    |                  | (float, km/second, ``RNGRT_3sigma``)          |\n    +------------------+-----------------------------------------------+\n    | SBand_3sigma     | 3sig Doppler radar uncertainties at S-band    |\n    |                  | (float, Hertz, ``DOP_S_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | XBand_3sigma     | 3sig Doppler radar uncertainties at X-band    |\n    |                  | (float, Hertz, ``DOP_X_3sig``)                |\n    +------------------+-----------------------------------------------+\n    | DoppDelay_3sigma | 3sig Doppler radar round-trip delay           |\n    |                  | unc (float, second, ``RT_delay_3sig``)        |\n    +------------------+-----------------------------------------------+\n    | true_anom        | True Anomaly (float, deg, ``Tru_Anom``)       |\n    +------------------+-----------------------------------------------+\n    | hour_angle       | local apparent hour angle (string,            |\n    |                  | sexagesimal angular hours, ``L_Ap_Hour_Ang``) |\n    +------------------+-----------------------------------------------+\n    | alpha_true       | true phase angle (float, deg, ``phi``)        |\n    +------------------+-----------------------------------------------+\n    | PABLon           | phase angle bisector longitude                |\n    |                  | (float, deg, ``PAB-LON``)                     |\n    +------------------+-----------------------------------------------+\n    | PABLat           | phase angle bisector latitude                 |\n    |                  | (float, deg, ``PAB-LAT``)                     |\n    +------------------+-----------------------------------------------+\n    \n    \n    Parameters\n    ----------\n    airmass_lessthan : float, optional\n        Defines a maximum airmass for the query, default: 99\n    solar_elongation : tuple, optional\n        Permissible solar elongation range: (minimum, maximum); default:\n        (0,180)\n    max_hour_angle : float, optional\n        Defines a maximum hour angle for the query, default: 0\n    rate_cutoff : float, optional\n        Angular range rate upper limit cutoff in arcsec/h; default: disabled\n    skip_daylight : boolean, optional\n        Crop daylight epochs in query, default: False\n    refraction : boolean\n        If ``True``, coordinates account for a standard atmosphere\n        refraction model; if ``False``, coordinates do not account for\n        refraction (airless model); default: ``False``\n    refsystem : string\n        Coordinate reference system: ``'ICRF'`` or ``'B1950'``; default:\n        ``'ICRF'``\n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for\n        non-cometary objects.\n    quantities : integer or string, optional\n        Single integer or comma-separated list in the form of a string\n        corresponding to all the quantities to be queried from JPL Horizons\n        using the coding according to the `JPL Horizons User Manual\n        Definition of Observer Table Quantities\n        <https://ssd.jpl.nasa.gov/?horizons_doc#table_quantities>`_;\n        default: all quantities\n    get_query_payload : boolean, optional\n        When set to `True` the method returns the HTTP request parameters as\n        a dict, default: False\n    get_raw_response : boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    extra_precision : boolean, optional\n        Enables extra precision in RA and DEC values; default: False\n    \n    \n    Returns\n    -------\n    response : `requests.Response`\n        The response of the HTTP request.\n    \n    \n    Examples\n    --------\n    >>> from astroquery.jplhorizons import Horizons\n    >>> obj = Horizons(id='Ceres', location='568',\n    ...             epochs={'start':'2010-01-01',\n    ...                     'stop':'2010-03-01',\n    ...                     'step':'10d'})\n    >>> eph = obj.ephemerides()  # doctest: +SKIP\n    >>> print(eph)  # doctest: +SKIP\n        targetname       datetime_str   datetime_jd ...  PABLon  PABLat\n           ---               ---             d      ...   deg     deg\n    ----------------- ----------------- ----------- ... -------- ------\n    1 Ceres (A801 AA) 2010-Jan-01 00:00   2455197.5 ... 238.2494 4.5532\n    1 Ceres (A801 AA) 2010-Jan-11 00:00   2455207.5 ... 241.3339 4.2832\n    1 Ceres (A801 AA) 2010-Jan-21 00:00   2455217.5 ... 244.3394 4.0089\n    1 Ceres (A801 AA) 2010-Jan-31 00:00   2455227.5 ... 247.2518 3.7289\n    1 Ceres (A801 AA) 2010-Feb-10 00:00   2455237.5 ... 250.0576 3.4415\n    1 Ceres (A801 AA) 2010-Feb-20 00:00   2455247.5 ... 252.7383 3.1451",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e87d55bb7904eff25b0d5ca42679ca6c8ed00e2804f82b3ca8a9c39734592a4f",
            "fields": [
                {
                    "id": "fsj1bok5",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.jplhorizons.core.HorizonsClass.ephemerides_async object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m9m0ng8f",
                    "encoding": "",
                    "name": "airmass_lessthan",
                    "value": 99,
                    "defaultValue": 99,
                    "description": "Defines a maximum airmass for the query, default: 99",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kbt90ppc",
                    "encoding": "",
                    "name": "solar_elongation",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "Permissible solar elongation range: (minimum, maximum); default:\n(0,180)",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "svy1wb6y",
                    "encoding": "",
                    "name": "max_hour_angle",
                    "value": 0,
                    "defaultValue": 0,
                    "description": "Defines a maximum hour angle for the query, default: 0",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vxcgj32h",
                    "encoding": "",
                    "name": "rate_cutoff",
                    "value": "",
                    "defaultValue": "",
                    "description": "Angular range rate upper limit cutoff in arcsec/h; default: disabled",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "68zjc0vu",
                    "encoding": "",
                    "name": "skip_daylight",
                    "value": false,
                    "defaultValue": false,
                    "description": "Crop daylight epochs in query, default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s2lkzmc_",
                    "encoding": "",
                    "name": "refraction",
                    "value": false,
                    "defaultValue": false,
                    "description": "If ``True``, coordinates account for a standard atmosphere\nrefraction model; if ``False``, coordinates do not account for\nrefraction (airless model); default: ``False``",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6l3ypzwl",
                    "encoding": "",
                    "name": "refsystem",
                    "value": "ICRF",
                    "defaultValue": "ICRF",
                    "description": "Coordinate reference system: ``'ICRF'`` or ``'B1950'``; default:\n``'ICRF'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2qljrs3b",
                    "encoding": "",
                    "name": "closest_apparition",
                    "value": false,
                    "defaultValue": false,
                    "description": "Only applies to comets. This option will choose the closest\napparition available in time to the selected epoch; default: False.\nDo not use this option for non-cometary objects.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3wh1b4qk",
                    "encoding": "",
                    "name": "no_fragments",
                    "value": false,
                    "defaultValue": false,
                    "description": "Only applies to comets. Reject all comet fragments from selection;\ndefault: False. Do not use this option for\nnon-cometary objects.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tz_gm319",
                    "encoding": "",
                    "name": "quantities",
                    "value": "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43",
                    "defaultValue": "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43",
                    "description": "Single integer or comma-separated list in the form of a string\ncorresponding to all the quantities to be queried from JPL Horizons\nusing the coding according to the `JPL Horizons User Manual\nDefinition of Observer Table Quantities\n<https://ssd.jpl.nasa.gov/?horizons_doc#table_quantities>`_;\ndefault: all quantities",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uqd3f9bq",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to `True` the method returns the HTTP request parameters as\na dict, default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z6vif41t",
                    "encoding": "",
                    "name": "get_raw_response",
                    "value": false,
                    "defaultValue": false,
                    "description": "Return raw data as obtained by JPL Horizons without parsing the data\ninto a table, default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mjn5oi5p",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "130nuqku",
                    "encoding": "",
                    "name": "extra_precision",
                    "value": false,
                    "defaultValue": false,
                    "description": "Enables extra precision in RA and DEC values; default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ls5yi7kn",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.ephemerides_async",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.ephemerides_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4ejjjld1",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lz95p1fz",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6jq372wy",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "czs2w2ey",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r4dju3d3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qt8uh7yt",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "hsn0j8w3",
            "name": "HorizonsClass.vectors",
            "description": "Queries the service and returns a table object.\n    \n    Query JPL Horizons for state vectors.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the center body relative to which the vectors are provided.\n    \n    The following table lists the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime_str     | epoch Date (str, ``Calendar Date (TDB)``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float, ``JDTDB``)          |\n    +------------------+-----------------------------------------------+\n    | delta_T          | time-varying difference between TDB and UT    |\n    |                  | (float, ``delta-T``, optional)                |\n    +------------------+-----------------------------------------------+\n    | x                | x-component of position vector                |\n    |                  | (float, au, ``X``)                            |\n    +------------------+-----------------------------------------------+\n    | y                | y-component of position vector                |\n    |                  | (float, au, ``Y``)                            |\n    +------------------+-----------------------------------------------+\n    | z                | z-component of position vector                |\n    |                  | (float, au, ``Z``)                            |\n    +------------------+-----------------------------------------------+\n    | vx               | x-component of velocity vector (float, au/d,  |\n    |                  | ``VX``)                                       |\n    +------------------+-----------------------------------------------+\n    | vy               | y-component of velocity vector (float, au/d,  |\n    |                  | ``VY``)                                       |\n    +------------------+-----------------------------------------------+\n    | vz               | z-component of velocity vector (float, au/d,  |\n    |                  | ``VZ``)                                       |\n    +------------------+-----------------------------------------------+\n    | lighttime        | one-way lighttime (float, d, ``LT``)          |\n    +------------------+-----------------------------------------------+\n    | range            | range from coordinate center (float, au,      |\n    |                  | ``RG``)                                       |\n    +------------------+-----------------------------------------------+\n    | range_rate       | range rate (float, au/d, ``RR``)              |\n    +------------------+-----------------------------------------------+\n    \n    \n    Parameters\n    ----------\n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for non-cometary objects.\n    get_query_payload : boolean, optional\n        When set to `True` the method returns the HTTP request parameters as\n        a dict, default: False\n    get_raw_response: boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    refplane : string\n        Reference plane for all output quantities: ``'ecliptic'`` (ecliptic\n        and mean equinox of reference epoch), ``'earth'`` (Earth mean\n        equator and equinox of reference epoch), or ``'body'`` (body mean\n        equator and node of date); default: ``'ecliptic'``.\n    \n        See :ref:`Horizons Reference Frames <jpl-horizons-reference-frames>`\n        in the astroquery documentation for details.\n    aberrations : string, optional\n        Aberrations to be accounted for: [``'geometric'``,\n        ``'astrometric'``, ``'apparent'``]. Default: ``'geometric'``\n    delta_T : boolean, optional\n        Triggers output of time-varying difference between TDB and UT\n        time-scales. Default: False\n    \n    \n    \n    Examples\n    --------\n        >>> from astroquery.jplhorizons import Horizons\n        >>> obj = Horizons(id='2012 TC4', location='257',\n        ...             epochs={'start':'2017-10-01',\n        ...                     'stop':'2017-10-02',\n        ...                     'step':'10m'})\n        >>> vec = obj.vectors()  # doctest: +SKIP\n        >>> print(vec)  # doctest: +SKIP\n        targetname  datetime_jd  ...      range          range_rate\n           ---           d       ...        AU             AU / d\n        ---------- ------------- ... --------------- -----------------\n        (2012 TC4)     2458027.5 ... 0.0429332099306 -0.00408018711862\n        (2012 TC4) 2458027.50694 ... 0.0429048742906 -0.00408040726527\n        (2012 TC4) 2458027.51389 ... 0.0428765385796 -0.00408020747595\n        (2012 TC4) 2458027.52083 ... 0.0428482057142  -0.0040795878561\n        (2012 TC4) 2458027.52778 ...  0.042819878607 -0.00407854931543\n        (2012 TC4) 2458027.53472 ... 0.0427915601617  -0.0040770935665\n               ...           ... ...             ...               ...\n        (2012 TC4) 2458028.45833 ... 0.0392489462501 -0.00405496595173\n        (2012 TC4) 2458028.46528 ...   0.03922077771 -0.00405750632914\n        (2012 TC4) 2458028.47222 ...  0.039192592935 -0.00405964084539\n        (2012 TC4) 2458028.47917 ...  0.039164394759 -0.00406136516755\n        (2012 TC4) 2458028.48611 ... 0.0391361860433 -0.00406267574646\n        (2012 TC4) 2458028.49306 ... 0.0391079696711  -0.0040635698239\n        (2012 TC4)     2458028.5 ... 0.0390797485422 -0.00406404543822\n        Length = 145 rows\n    \n    Returns\n    -------\n    table : A `~astropy.table.Table` object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "41333be751d8ba4e5d52f4ebeb63bbe93b5ab3876bbf91c9fe96f2bfd320caf4",
            "fields": [
                {
                    "id": "0dqxp0nx",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.jplhorizons.core.HorizonsClass.vectors object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fuc265y0",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r5on9xqq",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eq6s5hil",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.vectors",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.vectors",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qciyzahy",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8hj2jqw5",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "h4hrcleo",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zuknuyk0",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g5nn4g6e",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ud9pvv33",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "vw2vbj9l",
            "name": "HorizonsClass.vectors_async",
            "description": "Query JPL Horizons for state vectors.\n    \n    The ``location`` parameter in ``HorizonsClass`` refers in this case to\n    the center body relative to which the vectors are provided.\n    \n    The following table lists the values queried, their definitions, data\n    types, units, and original Horizons designations (where available). For\n    more information on the definitions of these quantities, please refer to\n    the `Horizons User Manual <https://ssd.jpl.nasa.gov/?horizons_doc>`_.\n    \n    +------------------+-----------------------------------------------+\n    | Column Name      | Definition                                    |\n    +==================+===============================================+\n    | targetname       | official number, name, designation (string)   |\n    +------------------+-----------------------------------------------+\n    | H                | absolute magnitude in V band (float, mag)     |\n    +------------------+-----------------------------------------------+\n    | G                | photometric slope parameter (float)           |\n    +------------------+-----------------------------------------------+\n    | M1               | comet total abs mag (float, mag, ``M1``)      |\n    +------------------+-----------------------------------------------+\n    | M2               | comet nuclear abs mag (float, mag, ``M2``)    |\n    +------------------+-----------------------------------------------+\n    | k1               | total mag scaling factor (float, ``k1``)      |\n    +------------------+-----------------------------------------------+\n    | k2               | nuclear mag scaling factor (float, ``k2``)    |\n    +------------------+-----------------------------------------------+\n    | phasecoeff       | comet phase coeff (float, mag/deg, ``PHCOFF``)|\n    +------------------+-----------------------------------------------+\n    | datetime_str     | epoch Date (str, ``Calendar Date (TDB)``)     |\n    +------------------+-----------------------------------------------+\n    | datetime_jd      | epoch Julian Date (float, ``JDTDB``)          |\n    +------------------+-----------------------------------------------+\n    | delta_T          | time-varying difference between TDB and UT    |\n    |                  | (float, ``delta-T``, optional)                |\n    +------------------+-----------------------------------------------+\n    | x                | x-component of position vector                |\n    |                  | (float, au, ``X``)                            |\n    +------------------+-----------------------------------------------+\n    | y                | y-component of position vector                |\n    |                  | (float, au, ``Y``)                            |\n    +------------------+-----------------------------------------------+\n    | z                | z-component of position vector                |\n    |                  | (float, au, ``Z``)                            |\n    +------------------+-----------------------------------------------+\n    | vx               | x-component of velocity vector (float, au/d,  |\n    |                  | ``VX``)                                       |\n    +------------------+-----------------------------------------------+\n    | vy               | y-component of velocity vector (float, au/d,  |\n    |                  | ``VY``)                                       |\n    +------------------+-----------------------------------------------+\n    | vz               | z-component of velocity vector (float, au/d,  |\n    |                  | ``VZ``)                                       |\n    +------------------+-----------------------------------------------+\n    | lighttime        | one-way lighttime (float, d, ``LT``)          |\n    +------------------+-----------------------------------------------+\n    | range            | range from coordinate center (float, au,      |\n    |                  | ``RG``)                                       |\n    +------------------+-----------------------------------------------+\n    | range_rate       | range rate (float, au/d, ``RR``)              |\n    +------------------+-----------------------------------------------+\n    \n    \n    Parameters\n    ----------\n    closest_apparition : boolean, optional\n        Only applies to comets. This option will choose the closest\n        apparition available in time to the selected epoch; default: False.\n        Do not use this option for non-cometary objects.\n    no_fragments : boolean, optional\n        Only applies to comets. Reject all comet fragments from selection;\n        default: False. Do not use this option for non-cometary objects.\n    get_query_payload : boolean, optional\n        When set to `True` the method returns the HTTP request parameters as\n        a dict, default: False\n    get_raw_response: boolean, optional\n        Return raw data as obtained by JPL Horizons without parsing the data\n        into a table, default: False\n    refplane : string\n        Reference plane for all output quantities: ``'ecliptic'`` (ecliptic\n        and mean equinox of reference epoch), ``'earth'`` (Earth mean\n        equator and equinox of reference epoch), or ``'body'`` (body mean\n        equator and node of date); default: ``'ecliptic'``.\n    \n        See :ref:`Horizons Reference Frames <jpl-horizons-reference-frames>`\n        in the astroquery documentation for details.\n    aberrations : string, optional\n        Aberrations to be accounted for: [``'geometric'``,\n        ``'astrometric'``, ``'apparent'``]. Default: ``'geometric'``\n    delta_T : boolean, optional\n        Triggers output of time-varying difference between TDB and UT\n        time-scales. Default: False\n    \n    \n    Returns\n    -------\n    response : `requests.Response`\n        The response of the HTTP request.\n    \n    \n    Examples\n    --------\n        >>> from astroquery.jplhorizons import Horizons\n        >>> obj = Horizons(id='2012 TC4', location='257',\n        ...             epochs={'start':'2017-10-01',\n        ...                     'stop':'2017-10-02',\n        ...                     'step':'10m'})\n        >>> vec = obj.vectors()  # doctest: +SKIP\n        >>> print(vec)  # doctest: +SKIP\n        targetname  datetime_jd  ...      range          range_rate\n           ---           d       ...        AU             AU / d\n        ---------- ------------- ... --------------- -----------------\n        (2012 TC4)     2458027.5 ... 0.0429332099306 -0.00408018711862\n        (2012 TC4) 2458027.50694 ... 0.0429048742906 -0.00408040726527\n        (2012 TC4) 2458027.51389 ... 0.0428765385796 -0.00408020747595\n        (2012 TC4) 2458027.52083 ... 0.0428482057142  -0.0040795878561\n        (2012 TC4) 2458027.52778 ...  0.042819878607 -0.00407854931543\n        (2012 TC4) 2458027.53472 ... 0.0427915601617  -0.0040770935665\n               ...           ... ...             ...               ...\n        (2012 TC4) 2458028.45833 ... 0.0392489462501 -0.00405496595173\n        (2012 TC4) 2458028.46528 ...   0.03922077771 -0.00405750632914\n        (2012 TC4) 2458028.47222 ...  0.039192592935 -0.00405964084539\n        (2012 TC4) 2458028.47917 ...  0.039164394759 -0.00406136516755\n        (2012 TC4) 2458028.48611 ... 0.0391361860433 -0.00406267574646\n        (2012 TC4) 2458028.49306 ... 0.0391079696711  -0.0040635698239\n        (2012 TC4)     2458028.5 ... 0.0390797485422 -0.00406404543822\n        Length = 145 rows",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "15a9b6b74aad454f4079aa63ea938868efa266a6b8d9b6cb2656a3dca73e24d6",
            "fields": [
                {
                    "id": "45xruo7n",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.jplhorizons.core.HorizonsClass.vectors_async object",
                    "type": "Object:astroquery.jplhorizons.core.HorizonsClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0p93a9v1",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to `True` the method returns the HTTP request parameters as\na dict, default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lywqin5k",
                    "encoding": "",
                    "name": "closest_apparition",
                    "value": false,
                    "defaultValue": false,
                    "description": "Only applies to comets. This option will choose the closest\napparition available in time to the selected epoch; default: False.\nDo not use this option for non-cometary objects.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jnu98__v",
                    "encoding": "",
                    "name": "no_fragments",
                    "value": false,
                    "defaultValue": false,
                    "description": "Only applies to comets. Reject all comet fragments from selection;\ndefault: False. Do not use this option for non-cometary objects.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zektztfd",
                    "encoding": "",
                    "name": "get_raw_response",
                    "value": false,
                    "defaultValue": false,
                    "description": "Return raw data as obtained by JPL Horizons without parsing the data\ninto a table, default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2pgulf2i",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wvzcpt__",
                    "encoding": "",
                    "name": "refplane",
                    "value": "ecliptic",
                    "defaultValue": "ecliptic",
                    "description": "Reference plane for all output quantities: ``'ecliptic'`` (ecliptic\nand mean equinox of reference epoch), ``'earth'`` (Earth mean\nequator and equinox of reference epoch), or ``'body'`` (body mean\nequator and node of date); default: ``'ecliptic'``.\n\nSee :ref:`Horizons Reference Frames <jpl-horizons-reference-frames>`\nin the astroquery documentation for details.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pxo_ap4q",
                    "encoding": "",
                    "name": "aberrations",
                    "value": "geometric",
                    "defaultValue": "geometric",
                    "description": "Aberrations to be accounted for: [``'geometric'``,\n``'astrometric'``, ``'apparent'``]. Default: ``'geometric'``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7x_d_r0m",
                    "encoding": "",
                    "name": "delta_T",
                    "value": false,
                    "defaultValue": false,
                    "description": "Triggers output of time-varying difference between TDB and UT\ntime-scales. Default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o6gmkubs",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass.vectors_async",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass.vectors_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ek3pr6s9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_4jm8rb_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vmiq112u",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r13t1jp_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core.HorizonsClass",
                    "defaultValue": "astroquery.jplhorizons.core.HorizonsClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a38i5wcs",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9qzf8g88",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "1cpn9mw8",
            "name": "core.Horizons",
            "description": "A class for querying the\n    `JPL Horizons <https://ssd.jpl.nasa.gov/horizons/>`_ service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4aed1897a67e21641369556ebe1232ef8b0d8ac4cb8d2d49ce9c4e99b5fda372",
            "fields": [
                {
                    "id": "azuvg5ho",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "py_jrx4i",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yfeqwh43",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.jplhorizons.core.Horizons",
                    "defaultValue": "astroquery.jplhorizons.core.Horizons",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9y300t49",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "awfftda1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5x6s5n0v",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2znr9g6j",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.jplhorizons.core",
                    "defaultValue": "astroquery.jplhorizons.core",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "29a0_hsv",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "76heis2_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}