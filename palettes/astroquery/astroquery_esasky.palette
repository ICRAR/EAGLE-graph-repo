{
    "modelData": {
        "filePath": "astroquery_esasky.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.2",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "astroquery",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "ef59c297982368d921aae39fff8d09ebc2b13d908edee94e2d6bd60688b1b464",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755099101.872619,
        "numLGNodes": 28
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "qer85o0f",
            "name": "esasky.ESASky",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5e02629867a78c21c5803bbd2e164d5258fa879e5b3e103698d5f04a2a390c3f",
            "fields": [
                {
                    "id": "89hmgd3m",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5vh4ehr3",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "51q1lpas",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.ESASky",
                    "defaultValue": "astroquery.esasky.ESASky",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rr6z_6o2",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k5f184rl",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "fd94sf9h",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "61p5x5ey",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky",
                    "defaultValue": "astroquery.esasky",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7oo713xw",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y32igq6f",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "au7vdu6f",
            "name": "ESASkyClass.__init__",
            "description": "\nThis is the base class for all the query classes in astroquery. It\n    is implemented as an abstract class and must not be directly instantiated.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7a0fc7840ca3fcfa7c4279686870421286d211300dae2462a8bfb7a77ebd3717",
            "fields": [
                {
                    "id": "0i16f4ha",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to ESASkyClass object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8ullk7dh",
                    "encoding": "",
                    "name": "tap_handler",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0tmcj96o",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.__init__",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tdcxj6xz",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cu3jbb44",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "eckrra70",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "shnt5b5a",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "47p8gvz9",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kyi0afx1",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "c2_u4qjl",
            "name": "ESASkyClass.find_sso",
            "description": "This method allows you to find solar and extra solar system objects with a given name.\n    ESASky is using IMCCE's SsODNet to resolve the objects.\n    \n    Parameters\n    ----------\n    sso_name : str\n        A name or alias of a solar system object recognized by SsODNet.\n    sso_type : str, optional\n        Can be any of the sso types found in SSO_TYPES.\n        Defaults to 'all'.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    list : `list`\n        Returns a list of object matching your search.\n        Each mission match has sso_name, sso_type, and aliases.\n    \n    Examples\n    --------\n    find_sso(sso_name=\"Pallas\")\n    find_sso(sso_name=\"503\")\n    find_sso(sso_name=\"503\", sso_type=\"SATELLITE\")",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c6dd3d48421e0da02f300e9268c97fae09e49573bd5bbcdad1068a492643e928",
            "fields": [
                {
                    "id": "mp1js5oa",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.find_sso object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aqueh4h2",
                    "encoding": "",
                    "name": "sso_name",
                    "value": "",
                    "defaultValue": "",
                    "description": "A name or alias of a solar system object recognized by SsODNet.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_yu02b11",
                    "encoding": "",
                    "name": "sso_type",
                    "value": "ALL",
                    "defaultValue": "ALL",
                    "description": "Can be any of the sso types found in SSO_TYPES.\nDefaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9kc9t5ew",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wusj3gvi",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.find_sso",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.find_sso",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "050l49jp",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dtre08a_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "53svo32s",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a3_ry6fa",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xqflaw6l",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_31hy2zn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "02b22vdi",
            "name": "ESASkyClass.get_columns",
            "description": "Get the available columns for a table in ESASky TAP service\n    \n    Parameters\n    ----------\n    table_name : str, mandatory, default None\n        table name of which, columns will be returned\n    only_names : bool, optional, default 'True'\n        True to load table names only\n    verbose : bool, optional, default 'False'\n        flag to display information about the process\n    \n    Returns\n    -------\n    A list of columns",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "72f8211fa2fb420ef24b8f5affc64eb5e020fd47606cc05a1b3f6c45cfdead96",
            "fields": [
                {
                    "id": "qs2bnz20",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.get_columns object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "65gcwc8k",
                    "encoding": "",
                    "name": "table_name",
                    "value": "",
                    "defaultValue": "",
                    "description": "table name of which, columns will be returned",
                    "type": "str, mandatory, default None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2im2w6ub",
                    "encoding": "",
                    "name": "only_names",
                    "value": true,
                    "defaultValue": true,
                    "description": "True to load table names only",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "29xfijmv",
                    "encoding": "",
                    "name": "verbose",
                    "value": false,
                    "defaultValue": false,
                    "description": "flag to display information about the process",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_ofpfz1s",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.get_columns",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.get_columns",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "782cty7u",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z45dszso",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ctbnzejn",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p59lur8y",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k91u_00b",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9nd02afg",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "zun26cae",
            "name": "ESASkyClass.get_images",
            "description": "This method gets the fits files available for the selected mission and\n    position or observation_ids and downloads all maps to the the selected folder.\n    The method returns a dictionary which is divided by mission.\n    All mission except Herschel returns a list of HDULists.\n    For Herschel each item in the list is a dictionary where the used\n    filter is the key and the HDUList is the value.\n    \n    Parameters\n    ----------\n    position : str or `astropy.coordinates` object, optional\n        Can either be a string of the location, eg 'M51', or the coordinates\n        of the object. An input is required for either position or observation_ids.\n    observation_ids : str or list, optional\n        A list of observation ID's, you would like to download.\n        If this parameter is empty, a cone search will be performed instead using the radius and position.\n        An input is required for either position or observation_ids.\n    radius : str or `~astropy.units.Quantity`, optional\n        The radius of a region. Defaults to 0.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_missions()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    download_dir : str, optional\n        The folder where all downloaded maps should be stored.\n        Defaults to a folder called 'Maps' in the current working directory.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    \n    Returns\n    -------\n    maps : `dict`\n        All mission except Herschel returns a list of HDULists.\n        For Herschel each item in the list is a dictionary where the used\n        filter is the key and the HDUList is the value.\n        It is structured in a dictionary like this:\n        dict: {\n        'HERSCHEL': [{'70': HDUList, '160': HDUList}, {'70': HDUList, '160': HDUList}, ...],\n        'HST':[HDUList, HDUList, HDUList, HDUList, HDUList, ...],\n        'XMM-EPIC' : [HDUList, HDUList, HDUList, HDUList, ...]\n        ...\n        }\n    \n    Examples\n    --------\n    get_images(position=\"m101\", radius=\"14'\", missions=\"all\")\n    \n    missions = [\"SUZAKU\", \"ISO-IR\", \"Chandra\", \"XMM-OM-OPTICAL\", \"XMM\", \"XMM-OM-UV\", \"HST-IR\", \"Herschel\", \"Spitzer\", \"HST-UV\", \"HST-OPTICAL\"]\n    observation_ids = [\"100001010\", \"01500403\", \"21171\", \"0852000101\", \"0851180201\", \"0851180201\", \"n3tr01c3q\", \"1342247257\", \"30002561-25100\", \"hst_07553_3h_wfpc2_f160bw_pc\", \"ocli05leq\"]\n    get_images(observation_ids=observation_ids, missions=missions)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f072228c8d35c55910680268265b985f80c6e09e96a831a5ac79e2fe484959a1",
            "fields": [
                {
                    "id": "wre8odux",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.get_images object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pl992_cw",
                    "encoding": "",
                    "name": "position",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can either be a string of the location, eg 'M51', or the coordinates\nof the object. An input is required for either position or observation_ids.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "azte7agl",
                    "encoding": "",
                    "name": "observation_ids",
                    "value": "",
                    "defaultValue": "",
                    "description": "A list of observation ID's, you would like to download.\nIf this parameter is empty, a cone search will be performed instead using the radius and position.\nAn input is required for either position or observation_ids.",
                    "type": "str or list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t_tym4js",
                    "encoding": "",
                    "name": "radius",
                    "value": "0 arcmin",
                    "defaultValue": "0 arcmin",
                    "description": "The radius of a region. Defaults to 0.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q_j8d5ni",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_missions()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4w7g1h0w",
                    "encoding": "",
                    "name": "download_dir",
                    "value": "Maps",
                    "defaultValue": "Maps",
                    "description": "The folder where all downloaded maps should be stored.\nDefaults to a folder called 'Maps' in the current working directory.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o5y42lc_",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w3altsv5",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.get_images",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.get_images",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w1u6gub4",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_qi9onb4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kx10jopc",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ak5kne6h",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8_a8m8v3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "niajox75",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "iiul4omp",
            "name": "ESASkyClass.get_images_sso",
            "description": "This method gets the fits files for the input (either a sso_name or table_list)\n    and downloads all maps to the the selected folder.\n    If a sso_name is entered, this method performs a crossmatch on\n    the chosen solar system object and the selected missions using\n    ESASky's crossmatch algorithm.\n    The method returns a dictionary which is divided by mission.\n    All mission except Herschel returns a list of HDULists.\n    For Herschel each item in the list is a dictionary where the used\n    filter is the key and the HDUList is the value.\n    \n    Parameters\n    ----------\n    sso_name : str, optional\n        A name or alias of a solar system object recognized by SsODNet.\n        One of sso_name and table_list is required.\n    sso_type : str, optional\n        Can be any of the sso types found in SSO_TYPES.\n        Defaults to 'all'.\n    table_list : `~astroquery.utils.TableList` or dict or list of (name, `~astropy.table.Table`) pairs\n        A TableList or dict or list of name and Table pairs with all the\n        missions wanted and their respective metadata. Usually the\n        return value of query_sso.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_sso()) or 'all' to search in all\n        missions. Defaults to 'all'.\n        .astropy/astroquery/cache. Defaults to True.\n    download_dir : str, optional\n        The folder where all downloaded maps should be stored.\n        Defaults to a folder called 'Maps' in the current working directory.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    maps : `dict`\n        All mission except Herschel returns a list of HDULists.\n        For Herschel each item in the list is a dictionary where the used\n        filter is the key and the HDUList is the value.\n        It is structured in a dictionary like this:\n        dict: {\n        'HERSCHEL': [{'70': HDUList, '160': HDUList}, {'70': HDUList, '160': HDUList}, ...],\n        'HST':[HDUList, HDUList, HDUList, HDUList, HDUList, ...],\n        'XMM' : [HDUList, HDUList, HDUList, HDUList, ...]\n        ...\n        }\n    \n    Examples\n    --------\n    get_images_sso(sso_name=\"Pallas\", missions=\"HST\")\n    get_images_sso(sso_name=\"503\", sso_type=\"SATELLITE\")\n    get_images_sso(sso_name=\"503\", sso_type=\"SATELLITE\", missions=[\"XMM\", \"HST\"])\n    \n    table = ESASky.query_sso(sso_name=\"503\", sso_type=\"SATELLITE\", missions=[\"XMM\", \"HST\"])\n    table[\"XMM\"].remove_rows([1, 18, 23])\n    get_images_sso(table_list=table, missions=\"XMM\")",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "063f23480524dbcba9d055aa1eda3b7d7a5c57c546466447eeafedcf529f9f31",
            "fields": [
                {
                    "id": "qw681vdc",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.get_images_sso object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "abaf6q3r",
                    "encoding": "",
                    "name": "sso_name",
                    "value": "",
                    "defaultValue": "",
                    "description": "A name or alias of a solar system object recognized by SsODNet.\nOne of sso_name and table_list is required.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2muwe4_f",
                    "encoding": "",
                    "name": "sso_type",
                    "value": "ALL",
                    "defaultValue": "ALL",
                    "description": "Can be any of the sso types found in SSO_TYPES.\nDefaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qvpvkjhz",
                    "encoding": "",
                    "name": "table_list",
                    "value": "",
                    "defaultValue": "",
                    "description": "A TableList or dict or list of name and Table pairs with all the\nmissions wanted and their respective metadata. Usually the\nreturn value of query_sso.",
                    "type": "astroquery.utils.TableList or dict or list of (name, astropy.table.Table) pairs",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "16l2lljh",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_sso()) or 'all' to search in all\nmissions. Defaults to 'all'.\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6qvcukz1",
                    "encoding": "",
                    "name": "download_dir",
                    "value": "Maps",
                    "defaultValue": "Maps",
                    "description": "The folder where all downloaded maps should be stored.\nDefaults to a folder called 'Maps' in the current working directory.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w26xxcrz",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tti4rko2",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.get_images_sso",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.get_images_sso",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h82_0fjo",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tl0r4x4a",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "e07wmvn3",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "om7u4cx_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cq5id99q",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r3818eo0",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "857dthjy",
            "name": "ESASkyClass.get_maps",
            "description": "This method takes the dictionary of missions and metadata as returned by\n    query_region_maps and downloads all maps to the selected folder.\n    The method returns a dictionary which is divided by mission.\n    All mission except Herschel returns a list of HDULists.\n    For Herschel each item in the list is a dictionary where the used\n    filter is the key and the HDUList is the value.\n    \n    Parameters\n    ----------\n    query_table_list : `~astroquery.utils.TableList` or dict or list of (name, `~astropy.table.Table`) pairs\n        A TableList or dict or list of name and Table pairs with all the\n        missions wanted and their respective metadata. Usually the\n        return value of query_region_maps.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_missions()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    download_dir : str, optional\n        The folder where all downloaded maps should be stored.\n        Defaults to a folder called 'Maps' in the current working directory.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    maps : `dict`\n        All mission except Herschel returns a list of HDULists.\n        For Herschel each item in the list is a dictionary where the used\n        filter is the key and the HDUList is the value.\n        It is structured in a dictionary like this:\n        dict: {\n        'HERSCHEL': [{'70': HDUList, '160': HDUList}, {'70': HDUList, '160': HDUList}, ...],\n        'HST':[HDUList, HDUList, HDUList, HDUList, HDUList, ...],\n        'XMM-EPIC' : [HDUList, HDUList, HDUList, HDUList, ...]\n        ...\n        }\n    \n    Examples\n    --------\n    get_maps(query_region_maps(\"m101\", \"14'\", \"all\"))",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f134408fe602f6342e613b258fc04bc7f091e35f1cb2294a77220280c83f59af",
            "fields": [
                {
                    "id": "kjjo7vjo",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.get_maps object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "76q5vlm6",
                    "encoding": "",
                    "name": "query_table_list",
                    "value": "",
                    "defaultValue": "",
                    "description": "A TableList or dict or list of name and Table pairs with all the\nmissions wanted and their respective metadata. Usually the\nreturn value of query_region_maps.",
                    "type": "astroquery.utils.TableList or dict or list of (name, astropy.table.Table) pairs",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ti8uovfr",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_missions()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ib1kx5t7",
                    "encoding": "",
                    "name": "download_dir",
                    "value": "Maps",
                    "defaultValue": "Maps",
                    "description": "The folder where all downloaded maps should be stored.\nDefaults to a folder called 'Maps' in the current working directory.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cmm3ev2e",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "22139ocg",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.get_maps",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.get_maps",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "15ehbjyn",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wgvbjpuq",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wm0qemc1",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r4ckqfkg",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kbgg06gq",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4ms66l_7",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "8v6iw7w7",
            "name": "ESASkyClass.get_spectra",
            "description": "This method gets the fits files available for the selected missions and\n    position or observation_ids and downloads all spectra to the the selected folder.\n    The method returns a dictionary which is divided by mission.\n    All mission except Herschel returns a list of HDULists.\n    Herschel returns a three-level dictionary.\n    \n    Parameters\n    ----------\n    position : str or `astropy.coordinates` object, optional\n        Can either be a string of the location, eg 'M51', or the coordinates\n        of the object. An input is required for either position or observation_ids.\n    observation_ids : str or list, optional\n        A list of observation ID's, you would like to download.\n        If this parameter is empty, a cone search will be performed instead using the radius and position.\n        An input is required for either position or observation_ids.\n    radius : str or `~astropy.units.Quantity`, optional\n        The radius of a region. Defaults to 0.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_spectra()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    download_dir : str, optional\n        The folder where all downloaded spectra should be stored.\n        Defaults to a folder called 'Spectra' in the current working directory.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    spectra : `dict`\n        All mission except Herschel returns a list of HDULists.\n        Herschel returns a three-level dictionary.\n        Read more about Herschel here: https://www.cosmos.esa.int/web/esdc/esasky-observations#HERSCHEL-OBS\n    \n        The response is structured in a dictionary like this:\n        dict: {\n        'HERSCHEL': {'1342211195': {'red' : {'HPSTBRRS' : HDUList}, 'blue' : {'HPSTBRBS': HDUList},\n        '1342180796': {'WBS' : {'WBS-H_LSB_5a' : HDUList}, 'HRS' : {'HRS-H_LSB_5a': HDUList}, ...},\n        'HST-IR':[HDUList, HDUList, HDUList, HDUList, HDUList, ...],\n        'XMM-NEWTON' : [HDUList, HDUList, HDUList, HDUList, ...]\n        ...\n        }\n    \n    Examples\n    --------\n    \n    get_spectra(position=\"m101\", radius=\"14'\", missions=[\"HST-IR\", \"XMM-NEWTON\", \"HERSCHEL\"])\n    \n    missions = [\"ISO-IR\", \"Chandra\", \"IUE\", \"XMM-NEWTON\", \"HST-IR\", \"Herschel\", \"HST-UV\", \"HST-OPTICAL\"]\n    observation_ids = [\"02101201\", \"1005\", \"LWR13178\", \"0001730201\", \"ibh706cqq\", \"1342253595\", \"z1ax0102t\", \"oeik2s020\"]\n    get_spectra(observation_ids=observation_ids, missions=missions)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2c26b87daa9ae8d518945b5d47894fa462ffba665ebc136f87f93023306588b4",
            "fields": [
                {
                    "id": "180q26n9",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.get_spectra object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dr1cyglp",
                    "encoding": "",
                    "name": "position",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can either be a string of the location, eg 'M51', or the coordinates\nof the object. An input is required for either position or observation_ids.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x7bqeljy",
                    "encoding": "",
                    "name": "observation_ids",
                    "value": "",
                    "defaultValue": "",
                    "description": "A list of observation ID's, you would like to download.\nIf this parameter is empty, a cone search will be performed instead using the radius and position.\nAn input is required for either position or observation_ids.",
                    "type": "str or list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b0en9d81",
                    "encoding": "",
                    "name": "radius",
                    "value": "0 arcmin",
                    "defaultValue": "0 arcmin",
                    "description": "The radius of a region. Defaults to 0.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1yxukseh",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_spectra()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ld6fwzqn",
                    "encoding": "",
                    "name": "download_dir",
                    "value": "Spectra",
                    "defaultValue": "Spectra",
                    "description": "The folder where all downloaded spectra should be stored.\nDefaults to a folder called 'Spectra' in the current working directory.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zccdf06m",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cy67biyj",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.get_spectra",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.get_spectra",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lfuov0au",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_51dv9b2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5eus8w1m",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6tfe3dg6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xotbrjw8",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ylwlg7ie",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "heualgsc",
            "name": "ESASkyClass.get_spectra_from_table",
            "description": "This method takes the dictionary of missions and metadata as returned by\n    query_region_spectra and downloads all spectra to the selected folder.\n    The method returns a dictionary which is divided by mission.\n    All mission except Herschel returns a list of HDULists.\n    Herschel returns a three-level dictionary.\n    \n    Parameters\n    ----------\n    query_table_list : `~astroquery.utils.TableList` or dict or list of (name, `~astropy.table.Table`) pairs\n        A TableList or dict or list of name and Table pairs with all the\n        missions wanted and their respective metadata. Usually the\n        return value of query_region_spectra.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_spectra()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    download_dir : str, optional\n        The folder where all downloaded spectra should be stored.\n        Defaults to a folder called 'Spectra' in the current working directory.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    spectra : `dict`\n        All mission except Herschel returns a list of HDULists.\n        Herschel returns a three-level dictionary.\n        Read more about Herschel here: https://www.cosmos.esa.int/web/esdc/esasky-observations#HERSCHEL-OBS\n    \n        The response is structured in a dictionary like this:\n        dict: {\n        'HERSCHEL': {'1342211195': {'red' : {'HPSTBRRS' : HDUList}, 'blue' : {'HPSTBRBS': HDUList},\n        '1342180796': {'WBS' : {'WBS-H_LSB_5a' : HDUList}, 'HRS' : {'HRS-H_LSB_5a': HDUList}, ...},\n        'HST-IR':[HDUList, HDUList, HDUList, HDUList, HDUList, ...],\n        'XMM-NEWTON' : [HDUList, HDUList, HDUList, HDUList, ...]\n        ...\n        }\n    \n    Examples\n    --------\n    table = query_region_spectra(\"m101\", \"14'\", [\"HST-IR\", \"XMM-NEWTON\", \"HERSCHEL\"])\n    get_spectra_from_table(table)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "66d509e23970d9cace7e5f50047d5e644d246727963dde13a7ebad4357775f33",
            "fields": [
                {
                    "id": "gwc50iyv",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.get_spectra_from_table object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zlsd8l6w",
                    "encoding": "",
                    "name": "query_table_list",
                    "value": "",
                    "defaultValue": "",
                    "description": "A TableList or dict or list of name and Table pairs with all the\nmissions wanted and their respective metadata. Usually the\nreturn value of query_region_spectra.",
                    "type": "astroquery.utils.TableList or dict or list of (name, astropy.table.Table) pairs",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y2u69ddy",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_spectra()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w3pj9voq",
                    "encoding": "",
                    "name": "download_dir",
                    "value": "Spectra",
                    "defaultValue": "Spectra",
                    "description": "The folder where all downloaded spectra should be stored.\nDefaults to a folder called 'Spectra' in the current working directory.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sqzg13gy",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wwyzikuh",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.get_spectra_from_table",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.get_spectra_from_table",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s75ujyih",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x96bsc5v",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "71wkwbps",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xvn3uzqa",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n71yrpr1",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bemy_413",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "l_g_as41",
            "name": "ESASkyClass.get_tables",
            "description": "Get the available table in ESASky TAP service\n    \n    Parameters\n    ----------\n    only_names : bool, optional, default 'True'\n        True to load table names only\n    verbose : bool, optional, default 'False'\n        flag to display information about the process\n    \n    Returns\n    -------\n    A list of tables",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6cc575c12ed35a00945640b54488f3e9ab54ee30887769a439c02c38aa96cc54",
            "fields": [
                {
                    "id": "t1gh2tq6",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.get_tables object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fq9tqp0i",
                    "encoding": "",
                    "name": "only_names",
                    "value": true,
                    "defaultValue": true,
                    "description": "True to load table names only",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "32ra4whq",
                    "encoding": "",
                    "name": "verbose",
                    "value": false,
                    "defaultValue": false,
                    "description": "flag to display information about the process",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "az3jdykc",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3rv2metg",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.get_tables",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.get_tables",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vwsdunzi",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qy37n5nx",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "4roc_2c0",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yk_zkrb8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w_njc5qd",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "an0x79s3",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "03y2rf8f",
            "name": "ESASkyClass.get_tap",
            "description": "Get a TAP+ instance for the ESASky servers, which supports\n    all common TAP+ operations (synchronous & asynchronous queries,\n    uploading of tables, table sharing and more)\n    Full documentation and examples available here:\n    https://astroquery.readthedocs.io/en/latest/utils/tap.html\n    \n    Returns\n    -------\n    tap : `~astroquery.utils.tap.core.TapPlus`",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0c43382e823e7ab678aae7a27648fa78643635235ca2e75fc58e01027cb6235a",
            "fields": [
                {
                    "id": "i63iavor",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.get_tap object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pxqrqev1",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.get_tap",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.get_tap",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5fvonn36",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kdwh2v1p",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "v6wktw4a",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nqpanzql",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gsi21lh7",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "96k4lv6k",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "2qjb0wvp",
            "name": "ESASkyClass.list_catalogs",
            "description": "Get a list of the mission names of the available catalogs in ESASky",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c0e68d22dc7ebd16cef13a41551f99c7cc9f8d8ae8b6e7f1e258ae7c67db939a",
            "fields": [
                {
                    "id": "vfni_wfa",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.list_catalogs object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y2ddqdgo",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.list_catalogs",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.list_catalogs",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vsiy3yam",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kwjps1ys",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ed2xungj",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a_yzpkvh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cxlskff_",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dx4c6_h1",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "zv1c5a2z",
            "name": "ESASkyClass.list_maps",
            "description": "Get a list of the mission names of the available observations in ESASky",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b3b1c0d72310cc7db5b4c2a898007b43927d64a2a17b107e581f44bb3b3b5326",
            "fields": [
                {
                    "id": "wbil3z0a",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.list_maps object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kylgvmbu",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.list_maps",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.list_maps",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uwu_f878",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bzp7o86z",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "y1b89e_o",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d3rxmdgt",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6o8c6jt9",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vf14a5w5",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "en2smbk0",
            "name": "ESASkyClass.list_spectra",
            "description": "Get a list of the mission names of the available spectra in ESASky",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "eefc75ff6dc4d9dc6c0e23137931242682438d2f89a54f1205898c7baeb4a938",
            "fields": [
                {
                    "id": "9uffyj6e",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.list_spectra object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ej_54xq0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.list_spectra",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.list_spectra",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hjeam5rc",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ksu3lm3a",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "f1btuplz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w92_uuoc",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nfvpp3dx",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y6sep2_2",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "jh0aps55",
            "name": "ESASkyClass.list_sso",
            "description": "Get a list of the mission names of the available observations with SSO crossmatch in ESASky",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9284a32fc235bd1f0d44565bad5a28e4750bf7887a169c3d8e00b7c13ad5eeb0",
            "fields": [
                {
                    "id": "v4szh9q8",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.list_sso object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ceucmpau",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.list_sso",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.list_sso",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8w2mh1q0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_92il6in",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "mdup6kor",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "go9mg5d6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p0zz5bhr",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6be8w8b6",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "wd9s52p5",
            "name": "ESASkyClass.query",
            "description": "Launches a synchronous job to query the ESASky TAP\n    \n    Parameters\n    ----------\n    query : str, mandatory\n        query (adql) to be executed\n    output_file : str, optional, default None\n        file name where the results are saved if dumpToFile is True.\n        If this parameter is not provided, the jobid is used instead\n    output_format : str, optional, default 'votable'\n        possible values 'votable' or 'csv'\n    verbose : bool, optional, default 'False'\n        flag to display information about the process\n    \n    Returns\n    -------\n    A table object",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "44e225fd748d3e79c136ad39d7541e4d43c8d313c4ad0337dfc4c342066e3408",
            "fields": [
                {
                    "id": "ed3iomvq",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "62pm5uzg",
                    "encoding": "",
                    "name": "query",
                    "value": "",
                    "defaultValue": "",
                    "description": "query (adql) to be executed",
                    "type": "str, mandatory",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tz1cdsnq",
                    "encoding": "",
                    "name": "output_file",
                    "value": "",
                    "defaultValue": "",
                    "description": "file name where the results are saved if dumpToFile is True.\nIf this parameter is not provided, the jobid is used instead",
                    "type": "str, optional, default None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5teufrp0",
                    "encoding": "",
                    "name": "output_format",
                    "value": "votable",
                    "defaultValue": "votable",
                    "description": "possible values 'votable' or 'csv'",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "77wu_ra6",
                    "encoding": "",
                    "name": "verbose",
                    "value": false,
                    "defaultValue": false,
                    "description": "flag to display information about the process",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d2o16i57",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c6i5rfp9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cgfkh407",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "3sgp2skr",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "09ke3lc2",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ias_gb8b",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2saitks_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "1qf6umcp",
            "name": "ESASkyClass.query_ids_catalogs",
            "description": "This method fetches the metadata for all the given source id's and returns a TableList.\n    \n    Parameters\n    ----------\n    source_ids : str or list\n        The source IDs / names to fetch.\n    catalogs : str or list, optional\n        Can be either a specific catalog or a list of catalogs (all catalog\n        names are found in list_catalogs()) or 'all' to search in all\n        catalogs. Defaults to 'all'.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'CHANDRA-SC2' with 41 column(s) and 2 row(s)\n        'HIPPARCOS-2' with 45 column(s) and 2 row(s)\n    \n    Examples\n    --------\n    query_ids_catalogs(source_ids=['2CXO J090341.1-322609', '2CXO J090353.8-322642'], catalogs=\"CHANDRA-SC2\")\n    query_ids_catalogs(source_ids='2CXO J090341.1-322609')\n    query_ids_catalogs(source_ids=['2CXO J090341.1-322609', '45057'], catalogs=[\"CHANDRA-SC2\", \"Hipparcos-2\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "42169a5ad42185f6c6e59620aeca0bb7654170dfdf091e93f94c5a69301a7c66",
            "fields": [
                {
                    "id": "wj_cec7w",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_ids_catalogs object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "byskkklk",
                    "encoding": "",
                    "name": "source_ids",
                    "value": "",
                    "defaultValue": "",
                    "description": "The source IDs / names to fetch.",
                    "type": "str or list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tj5ydq5x",
                    "encoding": "",
                    "name": "catalogs",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific catalog or a list of catalogs (all catalog\nnames are found in list_catalogs()) or 'all' to search in all\ncatalogs. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3856ds9v",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ykownps4",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4zsfuxju",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "emi4do06",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_ids_catalogs",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_ids_catalogs",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v3rf2d6g",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t35an6cl",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "x8s41t_z",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bmyepj6t",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gj5xvzbg",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ixxtiav6",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "n6_p7pbj",
            "name": "ESASkyClass.query_ids_maps",
            "description": "This method fetches the metadata for all the given observations id's and returns a TableList.\n    \n    Parameters\n    ----------\n    observation_ids : string or list\n        The observation IDs to fetch.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_missions()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'HERSCHEL' with 15 column(s) and 2 row(s)\n        'HST-UV' with 15 column(s) and 2 row(s)\n    \n    Examples\n    --------\n    query_ids_maps(observation_ids=['lbsk03vbq', 'ieag90010'], missions=\"HST-UV\")\n    query_ids_maps(observation_ids='lbsk03vbq')\n    query_ids_maps(observation_ids=['lbsk03vbq', '1342221848'], missions=[\"Herschel\", \"HST-UV\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "12cf5d04db2c2f51c5afa181559c9fb5248e58766772eb736f1bd36528fc9bea",
            "fields": [
                {
                    "id": "w6u9gf7w",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_ids_maps object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hq77fikq",
                    "encoding": "",
                    "name": "observation_ids",
                    "value": "",
                    "defaultValue": "",
                    "description": "The observation IDs to fetch.",
                    "type": "string or list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aefiltnb",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_missions()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gkgt276d",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u3vq07px",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7r022dpx",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "27shk8i1",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_ids_maps",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_ids_maps",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n3vvkv01",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z23peixh",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ysff7lbg",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "661ql3fx",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gwg8o7gl",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jmfo6h2z",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "037nad8b",
            "name": "ESASkyClass.query_ids_spectra",
            "description": "This method fetches the metadata for all the given observations id's and returns a TableList.\n    \n    Parameters\n    ----------\n    observation_ids : str or list\n        The observation IDs to fetch.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_spectra()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'XMM-NEWTON' with 16 column(s) and 2 row(s)\n        'HERSCHEL' with 16 column(s) and 1 row(s)\n    \n    Examples\n    --------\n    query_ids_spectra(observation_ids=['0001730501', '0011420101'], missions='XMM-NEWTON')\n    query_ids_spectra(observation_ids='0001730501')\n    query_ids_spectra(observation_ids=['0001730501', '0011420101', '1342246640'], missions=['XMM-NEWTON', 'Herschel'])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "716307c3d6b0c1cdc44e823d2f957a0e5346f6a7468d823d44bdf05bdc4bfe97",
            "fields": [
                {
                    "id": "284556kz",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_ids_spectra object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "82wb2z34",
                    "encoding": "",
                    "name": "observation_ids",
                    "value": "",
                    "defaultValue": "",
                    "description": "The observation IDs to fetch.",
                    "type": "str or list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rrhm26p3",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_spectra()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kckx7p3z",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gcx_r_5m",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vr35argq",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qw2bochp",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_ids_spectra",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_ids_spectra",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ranfu6rb",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hb19cmzg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wy4jtwov",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_c9jt25v",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ea_yb5wy",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5qamaaw5",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "lqy8rw6e",
            "name": "ESASkyClass.query_object_catalogs",
            "description": "This method queries a chosen object or coordinate for all available\n    catalogs and returns a TableList with all the found catalogs metadata\n    for the chosen missions and object. To account for errors in telescope\n    position, the method will look for any sources within a radius of\n    5 arcsec of the chosen position.\n    \n    Parameters\n    ----------\n    position : str or `astropy.coordinates` object\n        Can either be a string of the location, eg 'M51', or the coordinates\n        of the object.\n    catalogs : str or list, optional\n        Can be either a specific catalog or a list of catalogs (all catalog\n        names are found in list_catalogs()) or 'all' to search in all\n        catalogs. Defaults to 'all'.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata\n        of the catalogs available for the chosen mission and object.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'HSC' with 9 column(s) and 232 row(s)\n        'XMM-OM' with 11 column(s) and 2 row(s)\n    \n    Examples\n    --------\n    query_object_catalogs(\"m101\", \"all\")\n    \n    query_object_catalogs(\"202.469, 47.195\", \"HSC\")\n    query_object_catalogs(\"202.469, 47.195\", [\"HSC\", \"XMM-OM\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "98864bd20642ae6c632d3e0483c64c734bfb5dd9c6f600a9c9c2bc59f4349cc6",
            "fields": [
                {
                    "id": "8mzln5mj",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_object_catalogs object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r36whppq",
                    "encoding": "",
                    "name": "position",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can either be a string of the location, eg 'M51', or the coordinates\nof the object.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b4m3lzg8",
                    "encoding": "",
                    "name": "catalogs",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific catalog or a list of catalogs (all catalog\nnames are found in list_catalogs()) or 'all' to search in all\ncatalogs. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gjoyrjam",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4yysdl19",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oc8we225",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3mqxim4d",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_object_catalogs",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_object_catalogs",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y32qs3gb",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ego0nhtt",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kozowa47",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9ko8kp0_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jzxonwa3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o8ae54xw",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "jw4_42yr",
            "name": "ESASkyClass.query_object_maps",
            "description": "This method queries a chosen object or coordinate for all available maps\n    which have observation data on the chosen position. It returns a\n    TableList with all the found maps metadata for the chosen missions\n    and object.\n    \n    Parameters\n    ----------\n    position : str or `astropy.coordinates` object\n        Can either be a string of the location, eg 'M51', or the coordinates\n        of the object.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_missions()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata\n        and observations available for the chosen missions and object.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'HERSCHEL' with 12 column(s) and 152 row(s)\n        'HST-OPTICAL' with 12 column(s) and 6 row(s)\n    \n    Examples\n    --------\n    query_object_maps(\"m101\", \"all\")\n    \n    query_object_maps(\"265.05, 69.0\", \"Herschel\")\n    query_object_maps(\"265.05, 69.0\", [\"Herschel\", \"HST-OPTICAL\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "02c0a307515a9da31fb25364c2a3ed3d3dbe22bc81eaaa1c5345571f16a1350c",
            "fields": [
                {
                    "id": "tyv5zuto",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_object_maps object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rmebo7t6",
                    "encoding": "",
                    "name": "position",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can either be a string of the location, eg 'M51', or the coordinates\nof the object.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p8iv0e8l",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_missions()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e7q1zh2d",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_z_1vb59",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "meeyxf3e",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ar90_psp",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_object_maps",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_object_maps",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3xv6_9vz",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x0626av_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "67k98e5c",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5m_z375z",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wwf9z6ce",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8xggwn2x",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "jr7zdoro",
            "name": "ESASkyClass.query_object_spectra",
            "description": "This method queries a chosen object or coordinate for all available missions\n    which have spectral data on the chosen position. It returns a\n    TableList with all the found spectra metadata for the chosen missions\n    and object.\n    \n    Parameters\n    ----------\n    position : str or `astropy.coordinates` object\n        Can either be a string of the location, eg 'M51', or the coordinates\n        of the object.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_spectra()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata\n        and spectra available for the chosen missions and object.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'HERSCHEL' with 12 column(s) and 12 row(s)\n        'HST-OPTICAL' with 12 column(s) and 19 row(s)\n    \n    Examples\n    --------\n    query_object_spectra(\"m101\", \"all\")\n    \n    query_object_spectra(\"202.469, 47.195\", \"Herschel\")\n    query_object_spectra(\"202.469, 47.195\", [\"Herschel\", \"HST-OPTICAL\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "29f0807dd99945e728411c3eeef83ab66491de9660a12a96973a08d552e1a3cd",
            "fields": [
                {
                    "id": "ba93h5q7",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_object_spectra object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "99aemaly",
                    "encoding": "",
                    "name": "position",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can either be a string of the location, eg 'M51', or the coordinates\nof the object.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mwqyppeu",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_spectra()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9gzwnmg2",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "96c2o4wa",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zkn_cxxp",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ajo6_hdb",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_object_spectra",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_object_spectra",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "um9tg4w0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6j1jd6u0",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "j0xk6f6r",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "krx6kc6o",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t001nrn8",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x5a8gcki",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "qzxn3h2_",
            "name": "ESASkyClass.query_region_catalogs",
            "description": "This method queries a chosen region for all available catalogs and\n    returns a TableList with all the found catalogs metadata for the chosen\n    missions and region.\n    \n    Parameters\n    ----------\n    position : str or `astropy.coordinates` object\n        Can either be a string of the location, eg 'M51', or the coordinates\n        of the object.\n    radius : str or `~astropy.units.Quantity`\n        The radius of a region.\n    catalogs : str or list, optional\n        Can be either a specific catalog or a list of catalogs (all catalog\n        names are found in list_catalogs()) or 'all' to search in all\n        catalogs. Defaults to 'all'.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata of\n        the catalogs available for the chosen mission and region.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'HIPPARCOS-2' with 7 column(s) and 2 row(s)\n        'HSC' with 9 column(s) and 10000 row(s)\n    \n    Examples\n    --------\n    query_region_catalogs(\"m101\", \"14'\", \"all\")\n    \n    import astropy.units as u\n    query_region_catalogs(\"265.05, 69.0\", 14*u.arcmin, \"Hipparcos-2\")\n    query_region_catalogs(\"265.05, 69.0\", 14*u.arcmin, [\"Hipparcos-2\", \"HSC\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "04bec961c3182342f95231ca622d28959fe7d63608f80c1bbe4aa19efad7b4c8",
            "fields": [
                {
                    "id": "sacvevey",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_region_catalogs object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v03hqvho",
                    "encoding": "",
                    "name": "position",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can either be a string of the location, eg 'M51', or the coordinates\nof the object.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rpybrta8",
                    "encoding": "",
                    "name": "radius",
                    "value": "",
                    "defaultValue": "",
                    "description": "The radius of a region.",
                    "type": "str or astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xla8f0v9",
                    "encoding": "",
                    "name": "catalogs",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific catalog or a list of catalogs (all catalog\nnames are found in list_catalogs()) or 'all' to search in all\ncatalogs. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rarvk1yn",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tvbk4wqk",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ls20jktb",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pwgxm0fa",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_region_catalogs",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_region_catalogs",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tbn5shi9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yrvt2t07",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "hii5wjr9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kflaaq8z",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7lwkrq23",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6qevs399",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "96od2gv_",
            "name": "ESASkyClass.query_region_maps",
            "description": "This method queries a chosen region for all available maps and returns a\n    TableList with all the found maps metadata for the chosen missions and\n    region.\n    \n    Parameters\n    ----------\n    position : str or `astropy.coordinates` object\n        Can either be a string of the location, eg 'M51', or the coordinates\n        of the object.\n    radius : str or `~astropy.units.Quantity`\n        The radius of a region.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_missions()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata\n        and observations available for the chosen missions and region.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'HERSCHEL' with 12 column(s) and 152 row(s)\n        'HST-OPTICAL' with 12 column(s) and 71 row(s)\n    \n    Examples\n    --------\n    query_region_maps(\"m101\", \"14'\", \"all\")\n    \n    import astropy.units as u\n    query_region_maps(\"265.05, 69.0\", 14*u.arcmin, \"Herschel\")\n    query_region_maps(\"265.05, 69.0\", 14*u.arcmin, [\"Herschel\", \"HST-OPTICAL\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "14b7a2259c91bdad68325e6e54d560d60daff37548662db3efbe2b9638d3eb92",
            "fields": [
                {
                    "id": "o4nf79jo",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_region_maps object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mpp59kdw",
                    "encoding": "",
                    "name": "position",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can either be a string of the location, eg 'M51', or the coordinates\nof the object.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "psz1jd3r",
                    "encoding": "",
                    "name": "radius",
                    "value": "",
                    "defaultValue": "",
                    "description": "The radius of a region.",
                    "type": "str or astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "paj5zm16",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_missions()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zh63fpem",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h7xyj9sr",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v7asmbl4",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zy07s9uh",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_region_maps",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_region_maps",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ri7vy24w",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "exucbzm9",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "zjiqjx8q",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4pah74wh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e6i7nls5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r4p1icqk",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "c4hwn3_k",
            "name": "ESASkyClass.query_region_spectra",
            "description": "This method queries a chosen region for all available spectra and returns a\n    TableList with all the found spectra metadata for the chosen missions and\n    region.\n    \n    Parameters\n    ----------\n    position : str or `astropy.coordinates` object\n        Can either be a string of the location, eg 'M51', or the coordinates\n        of the object.\n    radius : str or `~astropy.units.Quantity`\n        The radius of a region.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_spectra()) or 'all' to search in all\n        missions. Defaults to 'all'.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    get_query_payload : bool, optional\n        When set to True the method returns the HTTP request parameters.\n        Defaults to False.\n    cache : bool, optional\n        When set to True the method will use a cache located at\n        .astropy/astroquery/cache. Defaults to True.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata\n        and observations available for the chosen missions and region.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'HERSCHEL' with 12 column(s) and 264 row(s)\n        'IUE' with 12 column(s) and 14 row(s)\n    \n    Examples\n    --------\n    query_region_spectra(\"m101\", \"14'\", \"all\")\n    \n    import astropy.units as u\n    query_region_spectra(\"265.05, 69.0\", 30*u.arcmin, \"Herschel\")\n    query_region_spectra(\"265.05, 69.0\", 30*u.arcmin, [\"Herschel\", \"IUE\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6ec8b5e6a9390ee01926d031a42b57993db132253eb31b4a5db1c345db8d9bce",
            "fields": [
                {
                    "id": "t8mftmx4",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_region_spectra object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tgcxt_fh",
                    "encoding": "",
                    "name": "position",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can either be a string of the location, eg 'M51', or the coordinates\nof the object.",
                    "type": "str or astropy.coordinates object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l79xnxq3",
                    "encoding": "",
                    "name": "radius",
                    "value": "",
                    "defaultValue": "",
                    "description": "The radius of a region.",
                    "type": "str or astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "idfdarl1",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_spectra()) or 'all' to search in all\nmissions. Defaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kumrsehv",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m4zhipod",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "When set to True the method returns the HTTP request parameters.\nDefaults to False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wkkm4ugs",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "When set to True the method will use a cache located at\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8tvq5pk_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_region_spectra",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_region_spectra",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eoyvlxdo",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "09kige17",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "q63xn0vq",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7e2cp_jq",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7wepy15v",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y1ysryxn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "_jd8_gah",
            "name": "ESASkyClass.query_sso",
            "description": "This method performs a crossmatch on the chosen solar system object\n    and the selected missions using ESASky's crossmatch algorithm.\n    The algorithm detects both targeted and serendipitous observations.\n    It returns a TableList with all the found maps metadata for the\n    chosen missions and object.\n    \n    Parameters\n    ----------\n    sso_name : str\n        A name or alias of a solar system object recognized by SsODNet.\n    sso_type : str, optional\n        Can be any of the sso types found in SSO_TYPES.\n        Defaults to 'all'.\n    missions : str or list, optional\n        Can be either a specific mission or a list of missions (all mission\n        names are found in list_sso()) or 'all' to search in all\n        missions. Defaults to 'all'.\n        .astropy/astroquery/cache. Defaults to True.\n    row_limit : int, optional\n        Determines how many rows that will be fetched from the database\n        for each mission. Can be -1 to select maximum (currently 100 000).\n        Defaults to 10000.\n    \n    Returns\n    -------\n    table_list : `~astroquery.utils.TableList`\n        Each mission returns a `~astropy.table.Table` with the metadata\n        and observations available for the chosen missions and object.\n        It is structured in a TableList like this:\n        TableList with 2 tables:\n        'HERSCHEL' with 12 column(s) and 152 row(s)\n        'HST' with 12 column(s) and 6 row(s)\n    \n    Examples\n    --------\n    query_sso(sso_name=\"Pallas\", missions=\"HST\")\n    query_sso(sso_name=\"503\", sso_type=\"SATELLITE\")\n    query_sso(sso_name=\"503\", sso_type=\"SATELLITE\", missions=[\"XMM\", \"HST\"])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4a3da27bdf3bca696b4eb1edc93ea8dc28f8c511e1936d938fdcaf23af4c062c",
            "fields": [
                {
                    "id": "vmcsw0hg",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.esasky.core.ESASkyClass.query_sso object",
                    "type": "Object:astroquery.esasky.core.ESASkyClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0gszhc8_",
                    "encoding": "",
                    "name": "sso_name",
                    "value": "",
                    "defaultValue": "",
                    "description": "A name or alias of a solar system object recognized by SsODNet.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wzsc3vxo",
                    "encoding": "",
                    "name": "sso_type",
                    "value": "ALL",
                    "defaultValue": "ALL",
                    "description": "Can be any of the sso types found in SSO_TYPES.\nDefaults to 'all'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6f8517ql",
                    "encoding": "",
                    "name": "missions",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Can be either a specific mission or a list of missions (all mission\nnames are found in list_sso()) or 'all' to search in all\nmissions. Defaults to 'all'.\n.astropy/astroquery/cache. Defaults to True.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "crnogh5d",
                    "encoding": "",
                    "name": "row_limit",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Determines how many rows that will be fetched from the database\nfor each mission. Can be -1 to select maximum (currently 100 000).\nDefaults to 10000.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dps7w2uf",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASkyClass.query_sso",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass.query_sso",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g1b18o4t",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yu9seqnf",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ch08j1h3",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "icusj437",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core.ESASkyClass",
                    "defaultValue": "astroquery.esasky.core.ESASkyClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gsrxo6ib",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "57rqxn97",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "sem8hks7",
            "name": "core.ESASky",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "91968d35813d9955294474e3af776a201147187c83cfefd448c4605905d61257",
            "fields": [
                {
                    "id": "wpy19hj5",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p07xk98y",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qng69xhe",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.ESASky",
                    "defaultValue": "astroquery.esasky.core.ESASky",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cnb6jmya",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w8km2yke",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "jc4t8p4d",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c8vhmpon",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core",
                    "defaultValue": "astroquery.esasky.core",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p1ctffin",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0djqsozc",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ohstvmfa",
            "name": "core.async_to_sync",
            "description": "Convert all query_x_async methods to query_x methods\n    \n    (see\n    http://stackoverflow.com/questions/18048341/add-methods-to-a-class-generated-from-other-methods\n    for help understanding)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b353be0e5e7acf4957fe3b20bc6df169ee561ae74bb76ae6ead8f4589f65a675",
            "fields": [
                {
                    "id": "eva_f9tp",
                    "encoding": "",
                    "name": "cls",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xdc6tovv",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.esasky.core.async_to_sync",
                    "defaultValue": "astroquery.esasky.core.async_to_sync",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "it5xjifz",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b7xocf4z",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "u6xxoalr",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o3px2p2x",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.esasky.core",
                    "defaultValue": "astroquery.esasky.core",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_o47jxzj",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k77lln8f",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}