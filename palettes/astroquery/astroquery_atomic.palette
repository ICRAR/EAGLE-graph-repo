{
    "modelData": {
        "filePath": "astroquery_atomic.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.2",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "astroquery",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "af3eb550a8d1633ace8746331a0c8b3b066d02ecfa6be875bc1f8a6348ed10a4",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755099099.849673,
        "numLGNodes": 7
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "bcgm2rpl",
            "name": "atomic.AtomicLineList",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "642f87a368145291ed1025f8e796cb4205602efbbc5563a05a731b89eedce1bc",
            "fields": [
                {
                    "id": "n8l42zmw",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h8dj8z3g",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "784rt5vo",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.atomic.AtomicLineList",
                    "defaultValue": "astroquery.atomic.AtomicLineList",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j4hlhtum",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "91s98j32",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wvwrjtmd",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3r6p69tm",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.atomic",
                    "defaultValue": "astroquery.atomic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v_gmr_be",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z51mtg07",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "1vufffh8",
            "name": "AtomicLineListClass.__init__",
            "description": "\nThis is the base class for all the query classes in astroquery. It\n    is implemented as an abstract class and must not be directly instantiated.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0439a47c6532a3c3df8403f417dad83bbc5e5811534475877ddd1693c270762a",
            "fields": [
                {
                    "id": "4wyeg5bk",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to AtomicLineListClass object",
                    "type": "Object:astroquery.atomic.core.AtomicLineListClass",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "65l5h4ql",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.atomic.core.AtomicLineListClass.__init__",
                    "defaultValue": "astroquery.atomic.core.AtomicLineListClass.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s4ku0qur",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0_ut_gyl",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "qkh_ztnw",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4e43j3og",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.atomic.core.AtomicLineListClass",
                    "defaultValue": "astroquery.atomic.core.AtomicLineListClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3a01a7qr",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4ak_sgyn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "65lc4_7t",
            "name": "AtomicLineListClass.query_object",
            "description": "Queries Atomic Line List for the given parameters adnd returns the\n    result as a `~astropy.table.Table`. All parameters are optional.\n    \n    Parameters\n    ----------\n    wavelength_range : pair of `astropy.units.Unit` values\n        Wavelength range. Can be done in two ways: supply a lower and\n        upper limit for the region or, supply the central wavelength and\n        the 1 sigma error (68 % confidence value) for that line. If the\n        first number is smaller than the second number, this implies\n        that the first option has been chosen, and otherwise the second\n        option.\n    \n    wavelength_type : str\n        Either ``'Air'`` or ``'Vacuum'``.\n    \n    wavelength_accuracy : str\n        All wavelengths in the line list have relative accuracies of\n        5% or better. The default is to list all lines, irrespective\n        of their accuracy. When a relative accuracy in percent is\n        given, only those lines with accuracies better than or equal\n        to the passed value are included in the search. Values larger\n        than 5% will be ignored.\n    \n    element_spectrum : str\n        Restrict the search to a range of elements and/or ionization\n        stages. The elements should be entered by their usual\n        symbolic names (e.g. Fe) and the ionization stages by the\n        usual spectroscopic notation (e.g. I for neutral, II for\n        singly ionized etc.). To pass multiple values, separate them\n        by ``\\n`` (newline).\n    \n    minimal_abundance : str\n         Impose a lower limit on the abundances of elements to be\n         considered for possible identifications. Default is to\n         consider arbitrary low abundances. The elements are assumed\n         to have standard cosmic abundances.\n    \n    depl_factor : str\n        For nebular conditions it is not a realistic assumption that\n        the elements have standard cosmic abundances since most\n        metals will be depleted on grains. To simulate this it is\n        possible to supply a depletion factor df. This factor will be\n        used to calculate the actual abundance A from the cosmic\n        abundance Ac using the formula A(elm) = Ac(elm) - df*sd(elm)\n        where sd is the standard depletion for each element.\n    \n    lower_level_energy_range : `~astropy.units.Quantity`\n        Default is to consider all values for the lower/upper level\n        energy to find a possible identification. To restrict the\n        search a range of energies can be supplied.\n        The supported units are: Ry, eV, 1/cm, J, erg.\n    \n    upper_level_energy_range : `~astropy.units.Quantity`\n        See parameter ``lower_level_energy_range``.\n    \n    nmax : int\n        Maximum for principal quantum number n. Default is to\n        consider all possible values for the principal quantum number\n        n to find possible identifications. However, transitions\n        involving electrons with a very high quantum number n tend to\n        be weaker and can therefore be less likely identifications.\n        These transitions can be suppressed using this parameter.\n    \n    multiplet : str\n        This option (case sensitive) can be used to find all lines in\n        a specific multiplet within a certain wavelength range. The\n        lower and upper level term should be entered here exactly as\n        they appear in the output of the query. The spectrum to which\n        this multiplet belongs should of course also be supplied in\n        the ``element_spectrum`` parameter.\n    \n    transitions : str`\n        Possible values are:\n            - ``'all'``:\n                The default, consider all transition types.\n            - ``'nebular'``:\n                Consider only allowed transitions of Hydrogen or\n                Helium and only magnetic dipole or electric quadrupole\n                transitions of other elements.\n            - A union of the values: One of the following:\n              ``'E1'``, ``'IC'``, ``'M1'``, ``'E2'``\n              Refer to [1]_ for the meaning of these values.\n    \n    show_fine_structure : bool\n         If `True`, the fine structure components will be included in\n         the output. Refer to [1]_ for more information.\n    \n    show_auto_ionizing_transitions : bool\n        If `True`, transitions originating from auto-ionizing levels\n        will be included in the output. In this context, all levels\n        with energies higher than the ionization potential going to\n        the ground state of the next ion are considered auto-ionizing\n        levels.\n    \n    output_columns : tuple\n        A Tuple of strings indicating which output columns are retrieved.\n        A subset of ('spec', 'type', 'conf', 'term', 'angm', 'prob',\n        'ener') should be used. Where each string corresponds to the\n        column titled Spectrum, Transition type, Configuration, Term,\n        Angular momentum, Transition probability and Level energies\n        respectively.\n    \n    Returns\n    -------\n    result : `~astropy.table.Table`\n        The result of the query as a `~astropy.table.Table` object.\n    \n    References\n    ----------\n    .. [1] http://www.pa.uky.edu/~peter/atomic/instruction.html",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8381bdc9ddae53c2c20318b3d0d7481f91f2c621da9c89b3e4164c005c35d72f",
            "fields": [
                {
                    "id": "s7_fgflc",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.atomic.core.AtomicLineListClass.query_object object",
                    "type": "Object:astroquery.atomic.core.AtomicLineListClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ipp3fre7",
                    "encoding": "",
                    "name": "wavelength_range",
                    "value": "",
                    "defaultValue": "",
                    "description": "Wavelength range. Can be done in two ways: supply a lower and\nupper limit for the region or, supply the central wavelength and\nthe 1 sigma error (68 % confidence value) for that line. If the\nfirst number is smaller than the second number, this implies\nthat the first option has been chosen, and otherwise the second\noption.",
                    "type": "pair of astropy.units.Unit values",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ffn62m9d",
                    "encoding": "",
                    "name": "wavelength_type",
                    "value": "",
                    "defaultValue": "",
                    "description": "Either ``'Air'`` or ``'Vacuum'``.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nlc5c16j",
                    "encoding": "",
                    "name": "wavelength_accuracy",
                    "value": "",
                    "defaultValue": "",
                    "description": "All wavelengths in the line list have relative accuracies of\n5% or better. The default is to list all lines, irrespective\nof their accuracy. When a relative accuracy in percent is\ngiven, only those lines with accuracies better than or equal\nto the passed value are included in the search. Values larger\nthan 5% will be ignored.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t0e77edq",
                    "encoding": "",
                    "name": "element_spectrum",
                    "value": "",
                    "defaultValue": "",
                    "description": "Restrict the search to a range of elements and/or ionization\nstages. The elements should be entered by their usual\nsymbolic names (e.g. Fe) and the ionization stages by the\nusual spectroscopic notation (e.g. I for neutral, II for\nsingly ionized etc.). To pass multiple values, separate them\nby ``\\n`` (newline).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hxx8wde9",
                    "encoding": "",
                    "name": "minimal_abundance",
                    "value": "",
                    "defaultValue": "",
                    "description": "Impose a lower limit on the abundances of elements to be\nconsidered for possible identifications. Default is to\nconsider arbitrary low abundances. The elements are assumed\nto have standard cosmic abundances.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fekpl9c6",
                    "encoding": "",
                    "name": "depl_factor",
                    "value": "",
                    "defaultValue": "",
                    "description": "For nebular conditions it is not a realistic assumption that\nthe elements have standard cosmic abundances since most\nmetals will be depleted on grains. To simulate this it is\npossible to supply a depletion factor df. This factor will be\nused to calculate the actual abundance A from the cosmic\nabundance Ac using the formula A(elm) = Ac(elm) - df*sd(elm)\nwhere sd is the standard depletion for each element.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vbyv0qhp",
                    "encoding": "",
                    "name": "lower_level_energy_range",
                    "value": "",
                    "defaultValue": "",
                    "description": "Default is to consider all values for the lower/upper level\nenergy to find a possible identification. To restrict the\nsearch a range of energies can be supplied.\nThe supported units are: Ry, eV, 1/cm, J, erg.",
                    "type": "astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n6o3beg6",
                    "encoding": "",
                    "name": "upper_level_energy_range",
                    "value": "",
                    "defaultValue": "",
                    "description": "See parameter ``lower_level_energy_range``.",
                    "type": "astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eenx8v4s",
                    "encoding": "",
                    "name": "nmax",
                    "value": "",
                    "defaultValue": "",
                    "description": "Maximum for principal quantum number n. Default is to\nconsider all possible values for the principal quantum number\nn to find possible identifications. However, transitions\ninvolving electrons with a very high quantum number n tend to\nbe weaker and can therefore be less likely identifications.\nThese transitions can be suppressed using this parameter.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aypvxtks",
                    "encoding": "",
                    "name": "multiplet",
                    "value": "",
                    "defaultValue": "",
                    "description": "This option (case sensitive) can be used to find all lines in\na specific multiplet within a certain wavelength range. The\nlower and upper level term should be entered here exactly as\nthey appear in the output of the query. The spectrum to which\nthis multiplet belongs should of course also be supplied in\nthe ``element_spectrum`` parameter.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jzgpydzl",
                    "encoding": "",
                    "name": "transitions",
                    "value": "",
                    "defaultValue": "",
                    "description": "Possible values are:\n    - ``'all'``:\n        The default, consider all transition types.\n    - ``'nebular'``:\n        Consider only allowed transitions of Hydrogen or\n        Helium and only magnetic dipole or electric quadrupole\n        transitions of other elements.\n    - A union of the values: One of the following:\n      ``'E1'``, ``'IC'``, ``'M1'``, ``'E2'``\n      Refer to [1]_ for the meaning of these values.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7ik55uqr",
                    "encoding": "",
                    "name": "show_fine_structure",
                    "value": "",
                    "defaultValue": "",
                    "description": "If `True`, the fine structure components will be included in\nthe output. Refer to [1]_ for more information.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "johcns6c",
                    "encoding": "",
                    "name": "show_auto_ionizing_transitions",
                    "value": "",
                    "defaultValue": "",
                    "description": "If `True`, transitions originating from auto-ionizing levels\nwill be included in the output. In this context, all levels\nwith energies higher than the ionization potential going to\nthe ground state of the next ion are considered auto-ionizing\nlevels.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "74uozd5v",
                    "encoding": "",
                    "name": "output_columns",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "A Tuple of strings indicating which output columns are retrieved.\nA subset of ('spec', 'type', 'conf', 'term', 'angm', 'prob',\n'ener') should be used. Where each string corresponds to the\ncolumn titled Spectrum, Transition type, Configuration, Term,\nAngular momentum, Transition probability and Level energies\nrespectively.",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z9iwota9",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yk3g01lj",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "alih_hvt",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.atomic.core.AtomicLineListClass.query_object",
                    "defaultValue": "astroquery.atomic.core.AtomicLineListClass.query_object",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6p4l01eg",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lpxm0162",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "2ul96h_v",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s92o9hqk",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.atomic.core.AtomicLineListClass",
                    "defaultValue": "astroquery.atomic.core.AtomicLineListClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g1e95meo",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ubmeya0d",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "iqs3bhfh",
            "name": "AtomicLineListClass.query_object_async",
            "description": "Queries Atomic Line List for the given parameters adnd returns the\n    result as a `~astropy.table.Table`. All parameters are optional.\n    \n    Parameters\n    ----------\n    wavelength_range : pair of `astropy.units.Unit` values\n        Wavelength range. Can be done in two ways: supply a lower and\n        upper limit for the region or, supply the central wavelength and\n        the 1 sigma error (68 % confidence value) for that line. If the\n        first number is smaller than the second number, this implies\n        that the first option has been chosen, and otherwise the second\n        option.\n    \n    wavelength_type : str\n        Either ``'Air'`` or ``'Vacuum'``.\n    \n    wavelength_accuracy : str\n        All wavelengths in the line list have relative accuracies of\n        5% or better. The default is to list all lines, irrespective\n        of their accuracy. When a relative accuracy in percent is\n        given, only those lines with accuracies better than or equal\n        to the passed value are included in the search. Values larger\n        than 5% will be ignored.\n    \n    element_spectrum : str\n        Restrict the search to a range of elements and/or ionization\n        stages. The elements should be entered by their usual\n        symbolic names (e.g. Fe) and the ionization stages by the\n        usual spectroscopic notation (e.g. I for neutral, II for\n        singly ionized etc.). To pass multiple values, separate them\n        by ``\\n`` (newline).\n    \n    minimal_abundance : str\n         Impose a lower limit on the abundances of elements to be\n         considered for possible identifications. Default is to\n         consider arbitrary low abundances. The elements are assumed\n         to have standard cosmic abundances.\n    \n    depl_factor : str\n        For nebular conditions it is not a realistic assumption that\n        the elements have standard cosmic abundances since most\n        metals will be depleted on grains. To simulate this it is\n        possible to supply a depletion factor df. This factor will be\n        used to calculate the actual abundance A from the cosmic\n        abundance Ac using the formula A(elm) = Ac(elm) - df*sd(elm)\n        where sd is the standard depletion for each element.\n    \n    lower_level_energy_range : `~astropy.units.Quantity`\n        Default is to consider all values for the lower/upper level\n        energy to find a possible identification. To restrict the\n        search a range of energies can be supplied.\n        The supported units are: Ry, eV, 1/cm, J, erg.\n    \n    upper_level_energy_range : `~astropy.units.Quantity`\n        See parameter ``lower_level_energy_range``.\n    \n    nmax : int\n        Maximum for principal quantum number n. Default is to\n        consider all possible values for the principal quantum number\n        n to find possible identifications. However, transitions\n        involving electrons with a very high quantum number n tend to\n        be weaker and can therefore be less likely identifications.\n        These transitions can be suppressed using this parameter.\n    \n    multiplet : str\n        This option (case sensitive) can be used to find all lines in\n        a specific multiplet within a certain wavelength range. The\n        lower and upper level term should be entered here exactly as\n        they appear in the output of the query. The spectrum to which\n        this multiplet belongs should of course also be supplied in\n        the ``element_spectrum`` parameter.\n    \n    transitions : str`\n        Possible values are:\n            - ``'all'``:\n                The default, consider all transition types.\n            - ``'nebular'``:\n                Consider only allowed transitions of Hydrogen or\n                Helium and only magnetic dipole or electric quadrupole\n                transitions of other elements.\n            - A union of the values: One of the following:\n              ``'E1'``, ``'IC'``, ``'M1'``, ``'E2'``\n              Refer to [1]_ for the meaning of these values.\n    \n    show_fine_structure : bool\n         If `True`, the fine structure components will be included in\n         the output. Refer to [1]_ for more information.\n    \n    show_auto_ionizing_transitions : bool\n        If `True`, transitions originating from auto-ionizing levels\n        will be included in the output. In this context, all levels\n        with energies higher than the ionization potential going to\n        the ground state of the next ion are considered auto-ionizing\n        levels.\n    \n    output_columns : tuple\n        A Tuple of strings indicating which output columns are retrieved.\n        A subset of ('spec', 'type', 'conf', 'term', 'angm', 'prob',\n        'ener') should be used. Where each string corresponds to the\n        column titled Spectrum, Transition type, Configuration, Term,\n        Angular momentum, Transition probability and Level energies\n        respectively.\n    \n    References\n    ----------\n    .. [1] http://www.pa.uky.edu/~peter/atomic/instruction.html\n    \n    Returns\n    -------\n    response : `requests.Response`\n        The HTTP response returned from the service.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "86b4d0ce844fc44452b8b28932c22471f7dfee3d53b6049ac394f73160508195",
            "fields": [
                {
                    "id": "nsxtq3b4",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astroquery.atomic.core.AtomicLineListClass.query_object_async object",
                    "type": "Object:astroquery.atomic.core.AtomicLineListClass",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yvuyub_p",
                    "encoding": "",
                    "name": "wavelength_range",
                    "value": "",
                    "defaultValue": "",
                    "description": "Wavelength range. Can be done in two ways: supply a lower and\nupper limit for the region or, supply the central wavelength and\nthe 1 sigma error (68 % confidence value) for that line. If the\nfirst number is smaller than the second number, this implies\nthat the first option has been chosen, and otherwise the second\noption.",
                    "type": "pair of astropy.units.Unit values",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mx8rapf2",
                    "encoding": "",
                    "name": "wavelength_type",
                    "value": "",
                    "defaultValue": "",
                    "description": "Either ``'Air'`` or ``'Vacuum'``.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z1prwqp8",
                    "encoding": "",
                    "name": "wavelength_accuracy",
                    "value": "",
                    "defaultValue": "",
                    "description": "All wavelengths in the line list have relative accuracies of\n5% or better. The default is to list all lines, irrespective\nof their accuracy. When a relative accuracy in percent is\ngiven, only those lines with accuracies better than or equal\nto the passed value are included in the search. Values larger\nthan 5% will be ignored.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "myq4gxv_",
                    "encoding": "",
                    "name": "element_spectrum",
                    "value": "",
                    "defaultValue": "",
                    "description": "Restrict the search to a range of elements and/or ionization\nstages. The elements should be entered by their usual\nsymbolic names (e.g. Fe) and the ionization stages by the\nusual spectroscopic notation (e.g. I for neutral, II for\nsingly ionized etc.). To pass multiple values, separate them\nby ``\\n`` (newline).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i1ddpcdg",
                    "encoding": "",
                    "name": "minimal_abundance",
                    "value": "",
                    "defaultValue": "",
                    "description": "Impose a lower limit on the abundances of elements to be\nconsidered for possible identifications. Default is to\nconsider arbitrary low abundances. The elements are assumed\nto have standard cosmic abundances.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rpds_wjw",
                    "encoding": "",
                    "name": "depl_factor",
                    "value": "",
                    "defaultValue": "",
                    "description": "For nebular conditions it is not a realistic assumption that\nthe elements have standard cosmic abundances since most\nmetals will be depleted on grains. To simulate this it is\npossible to supply a depletion factor df. This factor will be\nused to calculate the actual abundance A from the cosmic\nabundance Ac using the formula A(elm) = Ac(elm) - df*sd(elm)\nwhere sd is the standard depletion for each element.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pikt_hrc",
                    "encoding": "",
                    "name": "lower_level_energy_range",
                    "value": "",
                    "defaultValue": "",
                    "description": "Default is to consider all values for the lower/upper level\nenergy to find a possible identification. To restrict the\nsearch a range of energies can be supplied.\nThe supported units are: Ry, eV, 1/cm, J, erg.",
                    "type": "astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zk3xp6nt",
                    "encoding": "",
                    "name": "upper_level_energy_range",
                    "value": "",
                    "defaultValue": "",
                    "description": "See parameter ``lower_level_energy_range``.",
                    "type": "astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0s4sb181",
                    "encoding": "",
                    "name": "nmax",
                    "value": "",
                    "defaultValue": "",
                    "description": "Maximum for principal quantum number n. Default is to\nconsider all possible values for the principal quantum number\nn to find possible identifications. However, transitions\ninvolving electrons with a very high quantum number n tend to\nbe weaker and can therefore be less likely identifications.\nThese transitions can be suppressed using this parameter.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "va_ss9ma",
                    "encoding": "",
                    "name": "multiplet",
                    "value": "",
                    "defaultValue": "",
                    "description": "This option (case sensitive) can be used to find all lines in\na specific multiplet within a certain wavelength range. The\nlower and upper level term should be entered here exactly as\nthey appear in the output of the query. The spectrum to which\nthis multiplet belongs should of course also be supplied in\nthe ``element_spectrum`` parameter.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bsf3ar5r",
                    "encoding": "",
                    "name": "transitions",
                    "value": "",
                    "defaultValue": "",
                    "description": "Possible values are:\n    - ``'all'``:\n        The default, consider all transition types.\n    - ``'nebular'``:\n        Consider only allowed transitions of Hydrogen or\n        Helium and only magnetic dipole or electric quadrupole\n        transitions of other elements.\n    - A union of the values: One of the following:\n      ``'E1'``, ``'IC'``, ``'M1'``, ``'E2'``\n      Refer to [1]_ for the meaning of these values.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k1a4_ae8",
                    "encoding": "",
                    "name": "show_fine_structure",
                    "value": "",
                    "defaultValue": "",
                    "description": "If `True`, the fine structure components will be included in\nthe output. Refer to [1]_ for more information.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jb62a6s6",
                    "encoding": "",
                    "name": "show_auto_ionizing_transitions",
                    "value": "",
                    "defaultValue": "",
                    "description": "If `True`, transitions originating from auto-ionizing levels\nwill be included in the output. In this context, all levels\nwith energies higher than the ionization potential going to\nthe ground state of the next ion are considered auto-ionizing\nlevels.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ewecmacc",
                    "encoding": "",
                    "name": "output_columns",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "A Tuple of strings indicating which output columns are retrieved.\nA subset of ('spec', 'type', 'conf', 'term', 'angm', 'prob',\n'ener') should be used. Where each string corresponds to the\ncolumn titled Spectrum, Transition type, Configuration, Term,\nAngular momentum, Transition probability and Level energies\nrespectively.",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9fnemykh",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1ybaryqf",
                    "encoding": "",
                    "name": "get_query_payload",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tq5mh74y",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.atomic.core.AtomicLineListClass.query_object_async",
                    "defaultValue": "astroquery.atomic.core.AtomicLineListClass.query_object_async",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5om4ra2h",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sfhh6qe_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "gc9v6g6_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fu5qpskf",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.atomic.core.AtomicLineListClass",
                    "defaultValue": "astroquery.atomic.core.AtomicLineListClass",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v_429nzd",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fel8racg",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "virb5n59",
            "name": "Transition.__init__",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a4347668334a5cae0264c566af45163404d8b722c6fc426561d3a09330541c94",
            "fields": [
                {
                    "id": "ukdnv2vt",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:astroquery.atomic.Transition",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": true
                },
                {
                    "id": "exu2pkaa",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "23650acy",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kn65ze11",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.atomic.Transition.__init__",
                    "defaultValue": "astroquery.atomic.Transition.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zr99y6um",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "antjsry4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "aoksxkne",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4ezw40n0",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.atomic.Transition",
                    "defaultValue": "astroquery.atomic.Transition",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a5dwgrz5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xx4o3qvx",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "lauvat_0",
            "name": "core.AtomicLineList",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e58055ae13ba2e7caecb144f66d2c95cf1f7526be22ed24975ee98f5d91a52db",
            "fields": [
                {
                    "id": "joytr2bd",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zkm9kaxg",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ccwttg4y",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.atomic.core.AtomicLineList",
                    "defaultValue": "astroquery.atomic.core.AtomicLineList",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_wuzamkc",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iie8db7s",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "7oe1v9ym",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ovb9k1tw",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.atomic.core",
                    "defaultValue": "astroquery.atomic.core",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g042zlhf",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cbjs11tx",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "txub6eff",
            "name": "utils.is_valid_transitions_param",
            "description": "Parameters\n    ----------\n    transitions : `~astroquery.atomic.Transitions`",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3b0befd2700e51132cba976322d34b673b22932ec4cd0ce6f095217d3adc6c84",
            "fields": [
                {
                    "id": "w235rak_",
                    "encoding": "",
                    "name": "transitions",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hl41l480",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astroquery.atomic.utils.is_valid_transitions_param",
                    "defaultValue": "astroquery.atomic.utils.is_valid_transitions_param",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z03mqj0w",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h85wzu1o",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "gbrnnazj",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cht0c0qe",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astroquery.atomic.utils",
                    "defaultValue": "astroquery.atomic.utils",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v9q9g4xm",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7y76bd8u",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}