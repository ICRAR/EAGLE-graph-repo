{
    "modelData": {
        "filePath": "astropy_coordinates_sky_coordinate.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.5.5",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "coordinates",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "18352094e56a1250b93fe22e552d62c8497032a27849d6ea975b7d78e48589f4",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1752679350.406959,
        "numLGNodes": 40
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "vm_ypqyy",
            "name": "SkyCoord.__init__",
            "description": "\nHigh-level object providing a flexible interface for celestial coordinate\n    representation, manipulation, and transformation between systems.\n    \n    The |SkyCoord| class accepts a wide variety of inputs for initialization. At\n    a minimum these must provide one or more celestial coordinate values with\n    unambiguous units.  Inputs may be scalars or lists/tuples/arrays, yielding\n    scalar or array coordinates (can be checked via ``SkyCoord.isscalar``).\n    Typically one also specifies the coordinate frame, though this is not\n    required. The general pattern for spherical representations is::\n    \n      SkyCoord(COORD, [FRAME], keyword_args ...)\n      SkyCoord(LON, LAT, [FRAME], keyword_args ...)\n      SkyCoord(LON, LAT, [DISTANCE], frame=FRAME, unit=UNIT, keyword_args ...)\n      SkyCoord([FRAME], <lon_attr>=LON, <lat_attr>=LAT, keyword_args ...)\n    \n    It is also possible to input coordinate values in other representations\n    such as cartesian or cylindrical.  In this case one includes the keyword\n    argument ``representation_type='cartesian'`` (for example) along with data\n    in ``x``, ``y``, and ``z``.\n    \n    See also: https://docs.astropy.org/en/stable/coordinates/\n    \n    Examples\n    --------\n    The examples below illustrate common ways of initializing a |SkyCoord|\n    object.  For a complete description of the allowed syntax see the\n    full coordinates documentation.  First some imports::\n    \n      >>> from astropy.coordinates import SkyCoord  # High-level coordinates\n      >>> from astropy.coordinates import ICRS, Galactic, FK4, FK5  # Low-level frames\n      >>> from astropy.coordinates import Angle, Latitude, Longitude  # Angles\n      >>> import astropy.units as u\n    \n    The coordinate values and frame specification can now be provided using\n    positional and keyword arguments::\n    \n      >>> c = SkyCoord(10, 20, unit=\"deg\")  # defaults to ICRS frame\n      >>> c = SkyCoord([1, 2, 3], [-30, 45, 8], frame=\"icrs\", unit=\"deg\")  # 3 coords\n    \n      >>> coords = [\"1:12:43.2 +31:12:43\", \"1 12 43.2 +31 12 43\"]\n      >>> c = SkyCoord(coords, frame=FK4, unit=(u.hourangle, u.deg), obstime=\"J1992.21\")\n    \n      >>> c = SkyCoord(\"1h12m43.2s +1d12m43s\", frame=Galactic)  # Units from string\n      >>> c = SkyCoord(frame=\"galactic\", l=\"1h12m43.2s\", b=\"+1d12m43s\")\n    \n      >>> ra = Longitude([1, 2, 3], unit=u.deg)  # Could also use Angle\n      >>> dec = np.array([4.5, 5.2, 6.3]) * u.deg  # Astropy Quantity\n      >>> c = SkyCoord(ra, dec, frame='icrs')\n      >>> c = SkyCoord(frame=ICRS, ra=ra, dec=dec, obstime='2001-01-02T12:34:56')\n    \n      >>> c = FK4(1 * u.deg, 2 * u.deg)  # Uses defaults for obstime, equinox\n      >>> c = SkyCoord(c, obstime='J2010.11', equinox='B1965')  # Override defaults\n    \n      >>> c = SkyCoord(w=0, u=1, v=2, unit='kpc', frame='galactic',\n      ...              representation_type='cartesian')\n    \n      >>> c = SkyCoord([ICRS(ra=1*u.deg, dec=2*u.deg), ICRS(ra=3*u.deg, dec=4*u.deg)])\n    \n    Velocity components (proper motions or radial velocities) can also be\n    provided in a similar manner::\n    \n      >>> c = SkyCoord(ra=1*u.deg, dec=2*u.deg, radial_velocity=10*u.km/u.s)\n    \n      >>> c = SkyCoord(ra=1*u.deg, dec=2*u.deg, pm_ra_cosdec=2*u.mas/u.yr, pm_dec=1*u.mas/u.yr)\n    \n    As shown, the frame can be a `~astropy.coordinates.BaseCoordinateFrame`\n    class or the corresponding string alias -- lower-case versions of the\n    class name that allow for creating a |SkyCoord| object and transforming\n    frames without explicitly importing the frame classes.\n    \n    Parameters\n    ----------\n    frame : `~astropy.coordinates.BaseCoordinateFrame` class or string, optional\n        Type of coordinate frame this |SkyCoord| should represent. Defaults to\n        to ICRS if not given or given as None.\n    unit : `~astropy.units.Unit`, string, or tuple of :class:`~astropy.units.Unit` or str, optional\n        Units for supplied coordinate values.\n        If only one unit is supplied then it applies to all values.\n        Note that passing only one unit might lead to unit conversion errors\n        if the coordinate values are expected to have mixed physical meanings\n        (e.g., angles and distances).\n    obstime : time-like, optional\n        Time(s) of observation.\n    equinox : time-like, optional\n        Coordinate frame equinox time.\n    representation_type : str or Representation class\n        Specifies the representation, e.g. 'spherical', 'cartesian', or\n        'cylindrical'.  This affects the positional args and other keyword args\n        which must correspond to the given representation.\n    copy : bool, optional\n        If `True` (default), a copy of any coordinate data is made.  This\n        argument can only be passed in as a keyword argument.\n    **keyword_args\n        Other keyword arguments as applicable for user-defined coordinate frames.\n        Common options include:\n    \n        ra, dec : angle-like, optional\n            RA and Dec for frames where ``ra`` and ``dec`` are keys in the\n            frame's ``representation_component_names``, including ``ICRS``,\n            ``FK5``, ``FK4``, and ``FK4NoETerms``.\n        pm_ra_cosdec, pm_dec  : `~astropy.units.Quantity` ['angular speed'], optional\n            Proper motion components, in angle per time units.\n        l, b : angle-like, optional\n            Galactic ``l`` and ``b`` for for frames where ``l`` and ``b`` are\n            keys in the frame's ``representation_component_names``, including\n            the ``Galactic`` frame.\n        pm_l_cosb, pm_b : `~astropy.units.Quantity` ['angular speed'], optional\n            Proper motion components in the `~astropy.coordinates.Galactic` frame,\n            in angle per time units.\n        x, y, z : float or `~astropy.units.Quantity` ['length'], optional\n            Cartesian coordinates values\n        u, v, w : float or `~astropy.units.Quantity` ['length'], optional\n            Cartesian coordinates values for the Galactic frame.\n        radial_velocity : `~astropy.units.Quantity` ['speed'], optional\n            The component of the velocity along the line-of-sight (i.e., the\n            radial direction), in velocity units.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "da86acc81a9d1cd57cb36fb0e9e968cd3acea3d6a62ff54cf4ce8d1a9f250460",
            "fields": [
                {
                    "id": "so_rdj6n",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to SkyCoord object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dmwkrs14",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q0a5fg5l",
                    "encoding": "",
                    "name": "copy",
                    "value": true,
                    "defaultValue": true,
                    "description": "If `True` (default), a copy of any coordinate data is made.  This\nargument can only be passed in as a keyword argument.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "13gzyf9n",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_vmp80oc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.__init__",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mtze8idj",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "av6huo7h",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ehhe8q3w",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6hhp05if",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lutze4n5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j0g9m4fk",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "5lb91pwy",
            "name": "SkyCoord.apply_space_motion",
            "description": "Compute the position to a new time using the velocities.\n    \n    Compute the position of the source represented by this coordinate object\n    to a new time using the velocities stored in this object and assuming\n    linear space motion (including relativistic corrections). This is\n    sometimes referred to as an \"epoch transformation\".\n    \n    The initial time before the evolution is taken from the ``obstime``\n    attribute of this coordinate.  Note that this method currently does not\n    support evolving coordinates where the *frame* has an ``obstime`` frame\n    attribute, so the ``obstime`` is only used for storing the before and\n    after times, not actually as an attribute of the frame. Alternatively,\n    if ``dt`` is given, an ``obstime`` need not be provided at all.\n    \n    Parameters\n    ----------\n    new_obstime : `~astropy.time.Time`, optional\n        The time at which to evolve the position to. Requires that the\n        ``obstime`` attribute be present on this frame.\n    dt : `~astropy.units.Quantity`, `~astropy.time.TimeDelta`, optional\n        An amount of time to evolve the position of the source. Cannot be\n        given at the same time as ``new_obstime``.\n    \n    Returns\n    -------\n    new_coord : |SkyCoord|\n        A new coordinate object with the evolved location of this coordinate\n        at the new time.  ``obstime`` will be set on this object to the new\n        time only if ``self`` also has ``obstime``.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "82313d803c7c82f09db0509b6f8f9ab5a1225e7eeae8c0835ed9cde1db4d7df2",
            "fields": [
                {
                    "id": "ea4dyfcm",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.apply_space_motion object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "th69i17t",
                    "encoding": "",
                    "name": "new_obstime",
                    "value": "",
                    "defaultValue": "",
                    "description": "The time at which to evolve the position to. Requires that the\n``obstime`` attribute be present on this frame.",
                    "type": "astropy.time.Time",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hjo8chrs",
                    "encoding": "",
                    "name": "dt",
                    "value": "",
                    "defaultValue": "",
                    "description": "An amount of time to evolve the position of the source. Cannot be\ngiven at the same time as ``new_obstime``.",
                    "type": "astropy.units.Quantity, astropy.time.TimeDelta",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t02h799d",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.apply_space_motion",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.apply_space_motion",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2cb43mky",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_bkjn2qn",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "h4o2ldmk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mxiopdr6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qgn0dipo",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vax17g47",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "ijxaus3e",
            "name": "SkyCoord.contained_by",
            "description": "Determines if the SkyCoord is contained in the given wcs footprint.\n    \n    Parameters\n    ----------\n    wcs : `~astropy.wcs.WCS`\n        The coordinate to check if it is within the wcs coordinate.\n    image : array\n        Optional.  The image associated with the wcs object that the coordinate\n        is being checked against. If not given the naxis keywords will be used\n        to determine if the coordinate falls within the wcs footprint.\n    **kwargs\n        Additional arguments to pass to `~astropy.coordinates.SkyCoord.to_pixel`\n    \n    Returns\n    -------\n    response : bool\n        True means the WCS footprint contains the coordinate, False means it does not.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "bbc873795716e4cf5e13b8b189c607a3efa19ac334736039a5978b418d12fa0a",
            "fields": [
                {
                    "id": "jtcydmyo",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.contained_by object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "htxocy3k",
                    "encoding": "",
                    "name": "wcs",
                    "value": "",
                    "defaultValue": "",
                    "description": "The coordinate to check if it is within the wcs coordinate.",
                    "type": "astropy.wcs.WCS",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4foke5o4",
                    "encoding": "",
                    "name": "image",
                    "value": "",
                    "defaultValue": "",
                    "description": "Optional.  The image associated with the wcs object that the coordinate\nis being checked against. If not given the naxis keywords will be used\nto determine if the coordinate falls within the wcs footprint.",
                    "type": "array",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "41tcpn3i",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d5jqnzdo",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.contained_by",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.contained_by",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "leqnsdqo",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y5txmdjb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "br5gv_do",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5l3i0apg",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ruql6bo0",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hdb8yxmn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "aove867o",
            "name": "SkyCoord.copy",
            "description": "Return an instance containing copies of the internal data.\n    \n    Parameters are as for :meth:`~numpy.ndarray.copy`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c90b9e6af2b900e2d9ebfb2c7922953a071e321c5e6fb90078bb3b5a72a669a6",
            "fields": [
                {
                    "id": "b3l0ll0y",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.copy object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ewogtmra",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qx53h0qg",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "op_7pj3q",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.copy",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.copy",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b7rlv2ik",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fajgadt7",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wcjrxza2",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qcvykoxo",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i67ssjx5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t7meh_25",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "36tb0d8i",
            "name": "SkyCoord.diagonal",
            "description": "Return an instance with the specified diagonals.\n    \n    Parameters are as for :meth:`~numpy.ndarray.diagonal`.  All internal\n    data are views of the data of the original.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9430ed7a8edacdeeb180b83df53fec5797b3c2fafe6b782268f639b145b18a03",
            "fields": [
                {
                    "id": "pm8cepf3",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.diagonal object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "khpv8t0f",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w68r48fw",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9nh4y8jd",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.diagonal",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.diagonal",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5j4m0dwj",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0bbovrrz",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "dj00zk5g",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h9zihxhs",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mf6tb50h",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aumvab32",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "pnpf7e5w",
            "name": "SkyCoord.directional_offset_by",
            "description": "Computes coordinates at the given offset from this coordinate.\n    \n    Parameters\n    ----------\n    position_angle : `~astropy.coordinates.Angle`\n        position_angle of offset\n    separation : `~astropy.coordinates.Angle`\n        offset angular separation\n    \n    Returns\n    -------\n    newpoints : `~astropy.coordinates.SkyCoord`\n        The coordinates for the location that corresponds to offsetting by\n        the given ``position_angle`` and ``separation``.\n    \n    Notes\n    -----\n    Returned SkyCoord frame retains only the frame attributes that are for\n    the resulting frame type.  (e.g. if the input frame is\n    `~astropy.coordinates.ICRS`, an ``equinox`` value will be retained, but\n    an ``obstime`` will not.)\n    \n    For a more complete set of transform offsets, use `~astropy.wcs.WCS`.\n    `~astropy.coordinates.SkyCoord.skyoffset_frame()` can also be used to\n    create a spherical frame with (lat=0, lon=0) at a reference point,\n    approximating an xy cartesian system for small offsets. This method\n    is distinct in that it is accurate on the sphere.\n    \n    See Also\n    --------\n    :meth:`~astropy.coordinates.BaseCoordinateFrame.position_angle` :\n        inverse operation for the ``position_angle`` component\n    :meth:`~astropy.coordinates.BaseCoordinateFrame.separation` :\n        inverse operation for the ``separation`` component",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7e0e5427b6fb109ad740f5e363fbc56f74558684dca4907e066e20997f45aca3",
            "fields": [
                {
                    "id": "1_anv6cp",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.directional_offset_by object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "updgbyhx",
                    "encoding": "",
                    "name": "position_angle",
                    "value": "",
                    "defaultValue": "",
                    "description": "position_angle of offset",
                    "type": "astropy.coordinates.Angle",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b_svglhj",
                    "encoding": "",
                    "name": "separation",
                    "value": "",
                    "defaultValue": "",
                    "description": "offset angular separation",
                    "type": "astropy.coordinates.Angle",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vt5ln746",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.directional_offset_by",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.directional_offset_by",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xla1qpvl",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o3emzh8j",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vc9p4ceo",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ej5hptdj",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5_9_hvws",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oqh3p312",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "xyibcn84",
            "name": "SkyCoord.flatten",
            "description": "Return a copy with the array collapsed into one dimension.\n    \n    Parameters are as for :meth:`~numpy.ndarray.flatten`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "727a541f39d37dac686400696e4072d32856ba4c64f2154145334bc03c813f18",
            "fields": [
                {
                    "id": "j9buylm7",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.flatten object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tbjqpq08",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hbo4qcrh",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r956fiik",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.flatten",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.flatten",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uzy3u7k7",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aw0zxvsw",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "yx2qd_f0",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pwpn6ys5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "utnpi6im",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p1fkprwu",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "f9bcujoi",
            "name": "SkyCoord.from_name",
            "description": "Given a name, query the CDS name resolver to attempt to retrieve\n    coordinate information for that object. The search database, sesame\n    url, and  query timeout can be set through configuration items in\n    ``astropy.coordinates.name_resolve`` -- see docstring for\n    `~astropy.coordinates.get_icrs_coordinates` for more\n    information.\n    \n    Parameters\n    ----------\n    name : str\n        The name of the object to get coordinates for, e.g. ``'M42'``.\n    frame : str or `BaseCoordinateFrame` class or instance\n        The frame to transform the object to.\n    parse : bool\n        Whether to attempt extracting the coordinates from the name by\n        parsing with a regex. For objects catalog names that have\n        J-coordinates embedded in their names, e.g.,\n        'CRTS SSS100805 J194428-420209', this may be much faster than a\n        Sesame query for the same object name. The coordinates extracted\n        in this way may differ from the database coordinates by a few\n        deci-arcseconds, so only use this option if you do not need\n        sub-arcsecond accuracy for coordinates.\n    cache : bool, optional\n        Determines whether to cache the results or not. To update or\n        overwrite an existing value, pass ``cache='update'``.\n    \n    Returns\n    -------\n    coord : SkyCoord\n        Instance of the SkyCoord class.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0dc92ab35e10a1b15d9840bc86d151aa6938f6e27150781c4c9e8453795716b3",
            "fields": [
                {
                    "id": "yuzz8d69",
                    "encoding": "",
                    "name": "name",
                    "value": "",
                    "defaultValue": "",
                    "description": "The name of the object to get coordinates for, e.g. ``'M42'``.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "12i6nrl4",
                    "encoding": "",
                    "name": "frame",
                    "value": "icrs",
                    "defaultValue": "icrs",
                    "description": "The frame to transform the object to.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "occ8kz7b",
                    "encoding": "",
                    "name": "parse",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to attempt extracting the coordinates from the name by\nparsing with a regex. For objects catalog names that have\nJ-coordinates embedded in their names, e.g.,\n'CRTS SSS100805 J194428-420209', this may be much faster than a\nSesame query for the same object name. The coordinates extracted\nin this way may differ from the database coordinates by a few\ndeci-arcseconds, so only use this option if you do not need\nsub-arcsecond accuracy for coordinates.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9tzdys9_",
                    "encoding": "",
                    "name": "cache",
                    "value": true,
                    "defaultValue": true,
                    "description": "Determines whether to cache the results or not. To update or\noverwrite an existing value, pass ``cache='update'``.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eg_gjmga",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.from_name",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.from_name",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pc4qwaip",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xyfdr2kf",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "975g5vii",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nht0folb",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0suftwul",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8bz9axed",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "_c9f50uy",
            "name": "SkyCoord.from_pixel",
            "description": "Create a new SkyCoord from pixel coordinates using a World Coordinate System.\n    \n    Parameters\n    ----------\n    xp, yp : float or ndarray\n        The coordinates to convert.\n    wcs : `~astropy.wcs.WCS`\n        The WCS to use for convert\n    origin : int\n        Whether to return 0 or 1-based pixel coordinates.\n    mode : 'all' or 'wcs'\n        Whether to do the transformation including distortions (``'all'``) or\n        only including only the core WCS transformation (``'wcs'``).\n    \n    Returns\n    -------\n    coord : `~astropy.coordinates.SkyCoord`\n        A new object with sky coordinates corresponding to the input ``xp``\n        and ``yp``.\n    \n    See Also\n    --------\n    to_pixel : to do the inverse operation\n    astropy.wcs.utils.pixel_to_skycoord : the implementation of this method",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "23be5fec298420ea139ebe44f331c8d816405b370e10cd9f46f8c3e9fa64745f",
            "fields": [
                {
                    "id": "ayk5g6qz",
                    "encoding": "",
                    "name": "xp",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wh4usmmi",
                    "encoding": "",
                    "name": "yp",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "boark8o_",
                    "encoding": "",
                    "name": "wcs",
                    "value": "",
                    "defaultValue": "",
                    "description": "The WCS to use for convert",
                    "type": "astropy.wcs.WCS",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p8afy11k",
                    "encoding": "",
                    "name": "origin",
                    "value": 0,
                    "defaultValue": 0,
                    "description": "Whether to return 0 or 1-based pixel coordinates.",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lc5_id3l",
                    "encoding": "",
                    "name": "mode",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Whether to do the transformation including distortions (``'all'``) or\nonly including only the core WCS transformation (``'wcs'``).",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "67ylghru",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.from_pixel",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.from_pixel",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q8_qyyoy",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r_uacywj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vmvtuaww",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eqe785kv",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w5z74u2e",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t7ibmv3q",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "l4c00et7",
            "name": "SkyCoord.get_constellation",
            "description": "Determines the constellation(s) of the coordinates this SkyCoord contains.\n    \n    Parameters\n    ----------\n    short_name : bool\n        If True, the returned names are the IAU-sanctioned abbreviated\n        names.  Otherwise, full names for the constellations are used.\n    constellation_list : str\n        The set of constellations to use.  Currently only ``'iau'`` is\n        supported, meaning the 88 \"modern\" constellations endorsed by the IAU.\n    \n    Returns\n    -------\n    constellation : str or string array\n        If this is a scalar coordinate, returns the name of the\n        constellation.  If it is an array |SkyCoord|, it returns an array of\n        names.\n    \n    Notes\n    -----\n    To determine which constellation a point on the sky is in, this first\n    precesses to B1875, and then uses the Delporte boundaries of the 88\n    modern constellations, as tabulated by\n    `Roman 1987 <https://cdsarc.cds.unistra.fr/viz-bin/Cat?VI/42>`_.\n    \n    See Also\n    --------\n    astropy.coordinates.get_constellation",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7ea1604fe54db93110bc3ef59e411028a39692377b9180041a26b7ef8ac8e344",
            "fields": [
                {
                    "id": "sduyn27l",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.get_constellation object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "28waxg_t",
                    "encoding": "",
                    "name": "short_name",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the returned names are the IAU-sanctioned abbreviated\nnames.  Otherwise, full names for the constellations are used.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z6f3k2ti",
                    "encoding": "",
                    "name": "constellation_list",
                    "value": "iau",
                    "defaultValue": "iau",
                    "description": "The set of constellations to use.  Currently only ``'iau'`` is\nsupported, meaning the 88 \"modern\" constellations endorsed by the IAU.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b5iejczn",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.get_constellation",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.get_constellation",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mhh2g05p",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v34inhjx",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "3fux4gmj",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kd8a_vjw",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ibf8yv97",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ud7k7t1_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "pat4wn0y",
            "name": "SkyCoord.guess_from_table",
            "description": "A convenience method to create and return a new SkyCoord from the data\n    in an astropy Table.\n    \n    This method matches table columns that start with the case-insensitive\n    names of the components of the requested frames (including\n    differentials), if they are also followed by a non-alphanumeric\n    character. It will also match columns that *end* with the component name\n    if a non-alphanumeric character is *before* it.\n    \n    For example, the first rule means columns with names like\n    ``'RA[J2000]'`` or ``'ra'`` will be interpreted as ``ra`` attributes for\n    `~astropy.coordinates.ICRS` frames, but ``'RAJ2000'`` or ``'radius'``\n    are *not*. Similarly, the second rule applied to the\n    `~astropy.coordinates.Galactic` frame means that a column named\n    ``'gal_l'`` will be used as the ``l`` component, but ``gall`` or\n    ``'fill'`` will not.\n    \n    The definition of alphanumeric here is based on Unicode's definition\n    of alphanumeric, except without ``_`` (which is normally considered\n    alphanumeric).  So for ASCII, this means the non-alphanumeric characters\n    are ``<space>_!\"#$%&'()*+,-./\\:;<=>?@[]^`{|}~``).\n    \n    Parameters\n    ----------\n    table : `~astropy.table.Table` or subclass\n        The table to load data from.\n    **coord_kwargs\n        Any additional keyword arguments are passed directly to this class's\n        constructor.\n    \n    Returns\n    -------\n    newsc : `~astropy.coordinates.SkyCoord` or subclass\n        The new instance.\n    \n    Raises\n    ------\n    ValueError\n        If more than one match is found in the table for a component,\n        unless the additional matches are also valid frame component names.\n        If a \"coord_kwargs\" is provided for a value also found in the table.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "28ce0f9a5079793fbdf5f1b66958ac6e63a73ebb6e19bd1b9e28aae972decea2",
            "fields": [
                {
                    "id": "mbur8n5o",
                    "encoding": "",
                    "name": "table",
                    "value": "",
                    "defaultValue": "",
                    "description": "The table to load data from.",
                    "type": "astropy.table.Table or subclass",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2s8a5hp5",
                    "encoding": "",
                    "name": "coord_kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w5xntp0u",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.guess_from_table",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.guess_from_table",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bf7h318_",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "85wysakg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "1yh_1i2s",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d0_d8ymu",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1u15rj1x",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jlmisxav",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "jyo63vgc",
            "name": "SkyCoord.insert",
            "description": "Insert coordinate values before the given indices in the object and\n    return a new Frame object.\n    \n    The values to be inserted must conform to the rules for in-place setting\n    of |SkyCoord| objects.\n    \n    The API signature matches the ``np.insert`` API, but is more limited.\n    The specification of insert index ``obj`` must be a single integer,\n    and the ``axis`` must be ``0`` for simple insertion before the index.\n    \n    Parameters\n    ----------\n    obj : int\n        Integer index before which ``values`` is inserted.\n    values : array-like\n        Value(s) to insert.  If the type of ``values`` is different\n        from that of quantity, ``values`` is converted to the matching type.\n    axis : int, optional\n        Axis along which to insert ``values``.  Default is 0, which is the\n        only allowed value and will insert a row.\n    \n    Returns\n    -------\n    out : `~astropy.coordinates.SkyCoord` instance\n        New coordinate object with inserted value(s)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2e9a6895885d699f771b4716a0b7f67dda1ddf5d33cc0a5d707a10f47a1870a3",
            "fields": [
                {
                    "id": "ph_npaqx",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.insert object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uont6azc",
                    "encoding": "",
                    "name": "obj",
                    "value": "",
                    "defaultValue": "",
                    "description": "Integer index before which ``values`` is inserted.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "phlsrtjh",
                    "encoding": "",
                    "name": "values",
                    "value": "",
                    "defaultValue": "",
                    "description": "Value(s) to insert.  If the type of ``values`` is different\nfrom that of quantity, ``values`` is converted to the matching type.",
                    "type": "array-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ieqha3h8",
                    "encoding": "",
                    "name": "axis",
                    "value": 0,
                    "defaultValue": 0,
                    "description": "Axis along which to insert ``values``.  Default is 0, which is the\nonly allowed value and will insert a row.",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3lxah74y",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.insert",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.insert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rrktu24a",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "evo_als4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wcivs80d",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7xbv1wd0",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "no_3dzxv",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yx5y7wt_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "ip56x4uw",
            "name": "SkyCoord.is_equivalent_frame",
            "description": "Checks if this object's frame is the same as that of the ``other``\n    object.\n    \n    To be the same frame, two objects must be the same frame class and have\n    the same frame attributes. For two |SkyCoord| objects, *all* of the\n    frame attributes have to match, not just those relevant for the object's\n    frame.\n    \n    Parameters\n    ----------\n    other : SkyCoord or BaseCoordinateFrame\n        The other object to check.\n    \n    Returns\n    -------\n    isequiv : bool\n        True if the frames are the same, False if not.\n    \n    Raises\n    ------\n    TypeError\n        If ``other`` isn't a |SkyCoord| or a subclass of\n        `~astropy.coordinates.BaseCoordinateFrame`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "96791e4954d1fd35ad58c5fd9c02734b498e96762765da9c5ae26fbea1f3565c",
            "fields": [
                {
                    "id": "54xdpnst",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.is_equivalent_frame object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "22j7wc07",
                    "encoding": "",
                    "name": "other",
                    "value": "",
                    "defaultValue": "",
                    "description": "The other object to check.",
                    "type": "SkyCoord or BaseCoordinateFrame",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2xhcgr_1",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.is_equivalent_frame",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.is_equivalent_frame",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gocw8i4k",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "40heygay",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "8mf2ila6",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "68is5930",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rcqxkz7m",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xf_wsy2a",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "cq8ups5y",
            "name": "SkyCoord.is_transformable_to",
            "description": "Determines if this coordinate frame can be transformed to another\n    given frame.\n    \n    Parameters\n    ----------\n    new_frame : frame class, frame object, or str\n        The proposed frame to transform into.\n    \n    Returns\n    -------\n    transformable : bool or str\n        `True` if this can be transformed to ``new_frame``, `False` if\n        not, or the string 'same' if ``new_frame`` is the same system as\n        this object but no transformation is defined.\n    \n    Notes\n    -----\n    A return value of 'same' means the transformation will work, but it will\n    just give back a copy of this object.  The intended usage is::\n    \n        if coord.is_transformable_to(some_unknown_frame):\n            coord2 = coord.transform_to(some_unknown_frame)\n    \n    This will work even if ``some_unknown_frame``  turns out to be the same\n    frame class as ``coord``.  This is intended for cases where the frame\n    is the same regardless of the frame attributes (e.g. ICRS), but be\n    aware that it *might* also indicate that someone forgot to define the\n    transformation between two objects of the same frame class but with\n    different attributes.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7bbf569a37bf83a26eecef129a92e9e93c9ea2cddd599aa7053aae51798db868",
            "fields": [
                {
                    "id": "ocyp8whn",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.is_transformable_to object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9hoa16oe",
                    "encoding": "",
                    "name": "new_frame",
                    "value": "",
                    "defaultValue": "",
                    "description": "The proposed frame to transform into.",
                    "type": "frame class, frame object, or str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z7z87zwe",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.is_transformable_to",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.is_transformable_to",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gprzs_q0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9kqd3rnj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "d5vn0yrk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oqck4yzo",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nqxmcj_s",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_x06i25w",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "aqa241vd",
            "name": "SkyCoord.match_to_catalog_3d",
            "description": "Finds the nearest 3-dimensional matches of this coordinate to a set\n    of catalog coordinates.\n    \n    This finds the 3-dimensional closest neighbor, which is only different\n    from the on-sky distance if ``distance`` is set in this object or the\n    ``catalogcoord`` object.\n    \n    For more on how to use this (and related) functionality, see the\n    examples in :ref:`astropy-coordinates-separations-matching`.\n    \n    Parameters\n    ----------\n    catalogcoord : `~astropy.coordinates.SkyCoord` or `~astropy.coordinates.BaseCoordinateFrame`\n        The base catalog in which to search for matches. Typically this\n        will be a coordinate object that is an array (i.e.,\n        ``catalogcoord.isscalar == False``)\n    nthneighbor : int, optional\n        Which closest neighbor to search for.  Typically ``1`` is\n        desired here, as that is correct for matching one set of\n        coordinates to another.  The next likely use case is\n        ``2``, for matching a coordinate catalog against *itself*\n        (``1`` is inappropriate because each point will find\n        itself as the closest match).\n    \n    Returns\n    -------\n    idx : int array\n        Indices into ``catalogcoord`` to get the matched points for\n        each of this object's coordinates. Shape matches this\n        object.\n    sep2d : `~astropy.coordinates.Angle`\n        The on-sky separation between the closest match for each\n        element in this object in ``catalogcoord``. Shape matches\n        this object.\n    dist3d : `~astropy.units.Quantity` ['length']\n        The 3D distance between the closest match for each element\n        in this object in ``catalogcoord``. Shape matches this\n        object.\n    \n    Notes\n    -----\n    This method requires `SciPy <https://www.scipy.org/>`_ to be\n    installed or it will fail.\n    \n    See Also\n    --------\n    astropy.coordinates.match_coordinates_3d\n    SkyCoord.match_to_catalog_sky",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "117a89e2366e23b492a6b069e997fe2a5039ec733e2527b45c3319bf74bc93e6",
            "fields": [
                {
                    "id": "15nq2o90",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.match_to_catalog_3d object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "67ya_thk",
                    "encoding": "",
                    "name": "catalogcoord",
                    "value": "",
                    "defaultValue": "",
                    "description": "The base catalog in which to search for matches. Typically this\nwill be a coordinate object that is an array (i.e.,\n``catalogcoord.isscalar == False``)",
                    "type": "astropy.coordinates.SkyCoord or astropy.coordinates.BaseCoordinateFrame",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j6i7uqrq",
                    "encoding": "",
                    "name": "nthneighbor",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Which closest neighbor to search for.  Typically ``1`` is\ndesired here, as that is correct for matching one set of\ncoordinates to another.  The next likely use case is\n``2``, for matching a coordinate catalog against *itself*\n(``1`` is inappropriate because each point will find\nitself as the closest match).",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vlc93ypb",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.match_to_catalog_3d",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.match_to_catalog_3d",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oybu2g6q",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dzf8el1t",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "q9qo5r7o",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u7o_29ql",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5o7tuojs",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qfmh322m",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "qtcpzro4",
            "name": "SkyCoord.match_to_catalog_sky",
            "description": "Finds the nearest on-sky matches of this coordinate in a set of\n    catalog coordinates.\n    \n    For more on how to use this (and related) functionality, see the\n    examples in :ref:`astropy-coordinates-separations-matching`.\n    \n    Parameters\n    ----------\n    catalogcoord : `~astropy.coordinates.SkyCoord` or `~astropy.coordinates.BaseCoordinateFrame`\n        The base catalog in which to search for matches. Typically this\n        will be a coordinate object that is an array (i.e.,\n        ``catalogcoord.isscalar == False``)\n    nthneighbor : int, optional\n        Which closest neighbor to search for.  Typically ``1`` is\n        desired here, as that is correct for matching one set of\n        coordinates to another. The next likely use case is ``2``,\n        for matching a coordinate catalog against *itself* (``1``\n        is inappropriate because each point will find itself as the\n        closest match).\n    \n    Returns\n    -------\n    idx : int array\n        Indices into ``catalogcoord`` to get the matched points for\n        each of this object's coordinates. Shape matches this\n        object.\n    sep2d : `~astropy.coordinates.Angle`\n        The on-sky separation between the closest match for each\n        element in this object in ``catalogcoord``. Shape matches\n        this object.\n    dist3d : `~astropy.units.Quantity` ['length']\n        The 3D distance between the closest match for each element\n        in this object in ``catalogcoord``. Shape matches this\n        object. Unless both this and ``catalogcoord`` have associated\n        distances, this quantity assumes that all sources are at a\n        distance of 1 (dimensionless).\n    \n    Notes\n    -----\n    This method requires `SciPy <https://www.scipy.org/>`_ to be\n    installed or it will fail.\n    \n    See Also\n    --------\n    astropy.coordinates.match_coordinates_sky\n    SkyCoord.match_to_catalog_3d",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "55f60f6e1f028ae1a942319b65af01a0dde8e3807c33961b9884a06a2c3fb567",
            "fields": [
                {
                    "id": "c96wg7kh",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.match_to_catalog_sky object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "88cg3mwo",
                    "encoding": "",
                    "name": "catalogcoord",
                    "value": "",
                    "defaultValue": "",
                    "description": "The base catalog in which to search for matches. Typically this\nwill be a coordinate object that is an array (i.e.,\n``catalogcoord.isscalar == False``)",
                    "type": "astropy.coordinates.SkyCoord or astropy.coordinates.BaseCoordinateFrame",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v9txwsvo",
                    "encoding": "",
                    "name": "nthneighbor",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Which closest neighbor to search for.  Typically ``1`` is\ndesired here, as that is correct for matching one set of\ncoordinates to another. The next likely use case is ``2``,\nfor matching a coordinate catalog against *itself* (``1``\nis inappropriate because each point will find itself as the\nclosest match).",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t0h7xwph",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.match_to_catalog_sky",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.match_to_catalog_sky",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bvsg0rvn",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v002zlcm",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kks9zphw",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n2mpmoi1",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6j4fd49m",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n8exjt17",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "pxq2c87g",
            "name": "SkyCoord.radial_velocity_correction",
            "description": "Compute the correction required to convert a radial velocity at a given\n    time and place on the Earth's Surface to a barycentric or heliocentric\n    velocity.\n    \n    Parameters\n    ----------\n    kind : str\n        The kind of velocity correction.  Must be 'barycentric' or\n        'heliocentric'.\n    obstime : `~astropy.time.Time` or None, optional\n        The time at which to compute the correction.  If `None`, the\n        ``obstime`` frame attribute on the |SkyCoord| will be used.\n    location : `~astropy.coordinates.EarthLocation` or None, optional\n        The observer location at which to compute the correction.  If\n        `None`, the  ``location`` frame attribute on the passed-in\n        ``obstime`` will be used, and if that is None, the ``location``\n        frame attribute on the |SkyCoord| will be used.\n    \n    Raises\n    ------\n    ValueError\n        If either ``obstime`` or ``location`` are passed in (not ``None``)\n        when the frame attribute is already set on this |SkyCoord|.\n    TypeError\n        If ``obstime`` or ``location`` aren't provided, either as arguments\n        or as frame attributes.\n    \n    Returns\n    -------\n    vcorr : `~astropy.units.Quantity` ['speed']\n        The  correction with a positive sign.  I.e., *add* this\n        to an observed radial velocity to get the barycentric (or\n        heliocentric) velocity. If m/s precision or better is needed,\n        see the notes below.\n    \n    Notes\n    -----\n    The barycentric correction is calculated to higher precision than the\n    heliocentric correction and includes additional physics (e.g time dilation).\n    Use barycentric corrections if m/s precision is required.\n    \n    The algorithm here is sufficient to perform corrections at the mm/s level, but\n    care is needed in application. The barycentric correction returned uses the optical\n    approximation v = z * c. Strictly speaking, the barycentric correction is\n    multiplicative and should be applied as::\n    \n      >>> from astropy.time import Time\n      >>> from astropy.coordinates import SkyCoord, EarthLocation\n      >>> from astropy.constants import c\n      >>> t = Time(56370.5, format='mjd', scale='utc')\n      >>> loc = EarthLocation('149d33m00.5s','-30d18m46.385s',236.87*u.m)\n      >>> sc = SkyCoord(1*u.deg, 2*u.deg)\n      >>> vcorr = sc.radial_velocity_correction(kind='barycentric', obstime=t, location=loc)  # doctest: +REMOTE_DATA\n      >>> rv = rv + vcorr + rv * vcorr / c  # doctest: +SKIP\n    \n    Also note that this method returns the correction velocity in the so-called\n    *optical convention*::\n    \n      >>> vcorr = zb * c  # doctest: +SKIP\n    \n    where ``zb`` is the barycentric correction redshift as defined in section 3\n    of Wright & Eastman (2014). The application formula given above follows from their\n    equation (11) under assumption that the radial velocity ``rv`` has also been defined\n    using the same optical convention. Note, this can be regarded as a matter of\n    velocity definition and does not by itself imply any loss of accuracy, provided\n    sufficient care has been taken during interpretation of the results. If you need\n    the barycentric correction expressed as the full relativistic velocity (e.g., to provide\n    it as the input to another software which performs the application), the\n    following recipe can be used::\n    \n      >>> zb = vcorr / c  # doctest: +REMOTE_DATA\n      >>> zb_plus_one_squared = (zb + 1) ** 2  # doctest: +REMOTE_DATA\n      >>> vcorr_rel = c * (zb_plus_one_squared - 1) / (zb_plus_one_squared + 1)  # doctest: +REMOTE_DATA\n    \n    or alternatively using just equivalencies::\n    \n      >>> vcorr_rel = vcorr.to(u.Hz, u.doppler_optical(1*u.Hz)).to(vcorr.unit, u.doppler_relativistic(1*u.Hz))  # doctest: +REMOTE_DATA\n    \n    See also `~astropy.units.equivalencies.doppler_optical`,\n    `~astropy.units.equivalencies.doppler_radio`, and\n    `~astropy.units.equivalencies.doppler_relativistic` for more information on\n    the velocity conventions.\n    \n    The default is for this method to use the builtin ephemeris for\n    computing the sun and earth location.  Other ephemerides can be chosen\n    by setting the `~astropy.coordinates.solar_system_ephemeris` variable,\n    either directly or via ``with`` statement.  For example, to use the JPL\n    ephemeris, do::\n    \n      >>> from astropy.coordinates import solar_system_ephemeris\n      >>> sc = SkyCoord(1*u.deg, 2*u.deg)\n      >>> with solar_system_ephemeris.set('jpl'):  # doctest: +REMOTE_DATA\n      ...     rv += sc.radial_velocity_correction(obstime=t, location=loc)  # doctest: +SKIP",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "edae78eece5c61a6da225f31495e69844af9412fe014ddc375cfc8225c547ded",
            "fields": [
                {
                    "id": "uxic60_j",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.radial_velocity_correction object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kkb85lz8",
                    "encoding": "",
                    "name": "kind",
                    "value": "barycentric",
                    "defaultValue": "barycentric",
                    "description": "The kind of velocity correction.  Must be 'barycentric' or\n'heliocentric'.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hjla27h3",
                    "encoding": "",
                    "name": "obstime",
                    "value": "",
                    "defaultValue": "",
                    "description": "The time at which to compute the correction.  If `None`, the\n``obstime`` frame attribute on the |SkyCoord| will be used.",
                    "type": "astropy.time.Time or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_rr6_ht_",
                    "encoding": "",
                    "name": "location",
                    "value": "",
                    "defaultValue": "",
                    "description": "The observer location at which to compute the correction.  If\n`None`, the  ``location`` frame attribute on the passed-in\n``obstime`` will be used, and if that is None, the ``location``\nframe attribute on the |SkyCoord| will be used.",
                    "type": "astropy.coordinates.EarthLocation or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bcloihti",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.radial_velocity_correction",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.radial_velocity_correction",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lkiw0qq4",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wgdhar5i",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "c8v6axxe",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "__xx7c4x",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "611pirpn",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h82ao9ik",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "ckvfsnf5",
            "name": "SkyCoord.ravel",
            "description": "Return an instance with the array collapsed into one dimension.\n    \n    Parameters are as for :meth:`~numpy.ndarray.ravel`. Note that it is\n    not always possible to unravel an array without copying the data.\n    If you want an error to be raise if the data is copied, you should\n    should assign shape ``(-1,)`` to the shape attribute.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c05d42b6fc41890c4e5d0dc5ccc85c0c32f32407a9502e78615942a4c47006cb",
            "fields": [
                {
                    "id": "i8my3bms",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.ravel object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3ut45h1m",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3wy52gq0",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y0o5jw8q",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.ravel",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.ravel",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rt50wqp0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kj17ihb1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ewrind1b",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l2qblpb3",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "41jj_6ww",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vaph2zve",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "o4z7tfdj",
            "name": "SkyCoord.reshape",
            "description": "Returns an instance containing the same data with a new shape.\n    \n    Parameters are as for :meth:`~numpy.ndarray.reshape`.  Note that it is\n    not always possible to change the shape of an array without copying the\n    data (see :func:`~numpy.reshape` documentation). If you want an error\n    to be raise if the data is copied, you should assign the new shape to\n    the shape attribute (note: this may not be implemented for all classes\n    using ``NDArrayShapeMethods``).",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3820db083c687aa007a113bfe12dcb32f9a26efa23fbe90966fac33bd8e53c1e",
            "fields": [
                {
                    "id": "k6qxosco",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.reshape object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4xq093r_",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_612ta7t",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ks9r0z8l",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.reshape",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.reshape",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x9tcr_hl",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t4thgs7z",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ek7rm0hx",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ww41akju",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ke1qyyiv",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ixc3gfm_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "oatq33tw",
            "name": "SkyCoord.search_around_3d",
            "description": "Searches for all coordinates in this object around a supplied set of\n    points within a given 3D radius.\n    \n    This is intended for use on `~astropy.coordinates.SkyCoord` objects\n    with coordinate arrays, rather than a scalar coordinate.  For a scalar\n    coordinate, it is better to use\n    :meth:`~astropy.coordinates.BaseCoordinateFrame.separation_3d`.\n    \n    For more on how to use this (and related) functionality, see the\n    examples in :ref:`astropy-coordinates-separations-matching`.\n    \n    Parameters\n    ----------\n    searcharoundcoords : `~astropy.coordinates.SkyCoord` or `~astropy.coordinates.BaseCoordinateFrame`\n        The coordinates to search around to try to find matching points in\n        this |SkyCoord|. This should be an object with array coordinates,\n        not a scalar coordinate object.\n    distlimit : `~astropy.units.Quantity` ['length']\n        The physical radius to search within.\n    \n    Returns\n    -------\n    idxsearcharound : int array\n        Indices into ``searcharoundcoords`` that match the\n        corresponding elements of ``idxself``. Shape matches\n        ``idxself``.\n    idxself : int array\n        Indices into ``self`` that match the\n        corresponding elements of ``idxsearcharound``. Shape matches\n        ``idxsearcharound``.\n    sep2d : `~astropy.coordinates.Angle`\n        The on-sky separation between the coordinates. Shape matches\n        ``idxsearcharound`` and ``idxself``.\n    dist3d : `~astropy.units.Quantity` ['length']\n        The 3D distance between the coordinates. Shape matches\n        ``idxsearcharound`` and ``idxself``.\n    \n    Notes\n    -----\n    This method requires `SciPy <https://www.scipy.org/>`_ to be\n    installed or it will fail.\n    \n    In the current implementation, the return values are always sorted in\n    the same order as the ``searcharoundcoords`` (so ``idxsearcharound`` is\n    in ascending order).  This is considered an implementation detail,\n    though, so it could change in a future release.\n    \n    See Also\n    --------\n    astropy.coordinates.search_around_3d\n    SkyCoord.search_around_sky",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "09e76cb4971c6ee6ae3407946e6d3201740da9a2e840832a4b2be9d33bbc7112",
            "fields": [
                {
                    "id": "jnmjvk68",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.search_around_3d object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8ch7orrn",
                    "encoding": "",
                    "name": "searcharoundcoords",
                    "value": "",
                    "defaultValue": "",
                    "description": "The coordinates to search around to try to find matching points in\nthis |SkyCoord|. This should be an object with array coordinates,\nnot a scalar coordinate object.",
                    "type": "astropy.coordinates.SkyCoord or astropy.coordinates.BaseCoordinateFrame",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1hjq7_hi",
                    "encoding": "",
                    "name": "distlimit",
                    "value": "",
                    "defaultValue": "",
                    "description": "The physical radius to search within.",
                    "type": "astropy.units.Quantity ['length']",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0txgqnir",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.search_around_3d",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.search_around_3d",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nldsmuu0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "izsja8x1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "rl8h2l1c",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pim1tq9h",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mfo5m88_",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vshrckft",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "sai1t7da",
            "name": "SkyCoord.search_around_sky",
            "description": "Searches for all coordinates in this object around a supplied set of\n    points within a given on-sky separation.\n    \n    This is intended for use on `~astropy.coordinates.SkyCoord` objects\n    with coordinate arrays, rather than a scalar coordinate.  For a scalar\n    coordinate, it is better to use\n    :meth:`~astropy.coordinates.BaseCoordinateFrame.separation`.\n    \n    For more on how to use this (and related) functionality, see the\n    examples in :ref:`astropy-coordinates-separations-matching`.\n    \n    Parameters\n    ----------\n    searcharoundcoords : coordinate-like\n        The coordinates to search around to try to find matching points in\n        this |SkyCoord|. This should be an object with array coordinates,\n        not a scalar coordinate object.\n    seplimit : `~astropy.units.Quantity` ['angle']\n        The on-sky separation to search within.\n    \n    Returns\n    -------\n    idxsearcharound : int array\n        Indices into ``searcharoundcoords`` that match the\n        corresponding elements of ``idxself``. Shape matches\n        ``idxself``.\n    idxself : int array\n        Indices into ``self`` that match the\n        corresponding elements of ``idxsearcharound``. Shape matches\n        ``idxsearcharound``.\n    sep2d : `~astropy.coordinates.Angle`\n        The on-sky separation between the coordinates. Shape matches\n        ``idxsearcharound`` and ``idxself``.\n    dist3d : `~astropy.units.Quantity` ['length']\n        The 3D distance between the coordinates. Shape matches\n        ``idxsearcharound`` and ``idxself``.\n    \n    Notes\n    -----\n    This method requires `SciPy <https://www.scipy.org/>`_ to be\n    installed or it will fail.\n    \n    In the current implementation, the return values are always sorted in\n    the same order as the ``searcharoundcoords`` (so ``idxsearcharound`` is\n    in ascending order).  This is considered an implementation detail,\n    though, so it could change in a future release.\n    \n    See Also\n    --------\n    astropy.coordinates.search_around_sky\n    SkyCoord.search_around_3d",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "efe9b72d3adf8877ffe7f929b89958ae8ffc2794a5d369112ed3e672d5ae1a89",
            "fields": [
                {
                    "id": "vf5hpc86",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.search_around_sky object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qxaejip0",
                    "encoding": "",
                    "name": "searcharoundcoords",
                    "value": "",
                    "defaultValue": "",
                    "description": "The coordinates to search around to try to find matching points in\nthis |SkyCoord|. This should be an object with array coordinates,\nnot a scalar coordinate object.",
                    "type": "coordinate-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gz7bp8nu",
                    "encoding": "",
                    "name": "seplimit",
                    "value": "",
                    "defaultValue": "",
                    "description": "The on-sky separation to search within.",
                    "type": "astropy.units.Quantity ['angle']",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mcuxw7gm",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.search_around_sky",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.search_around_sky",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "921ext7c",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mypp1sum",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "sj6whlu5",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7w8m8sak",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qo9b12zj",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tdeomlhe",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "i2dzl5bn",
            "name": "SkyCoord.skyoffset_frame",
            "description": "Returns the sky offset frame with this SkyCoord at the origin.\n    \n    Parameters\n    ----------\n    rotation : angle-like\n        The final rotation of the frame about the ``origin``. The sign of\n        the rotation is the left-hand rule. That is, an object at a\n        particular position angle in the un-rotated system will be sent to\n        the positive latitude (z) direction in the final frame.\n    \n    Returns\n    -------\n    astrframe : `~astropy.coordinates.SkyOffsetFrame`\n        A sky offset frame of the same type as this |SkyCoord| (e.g., if\n        this object has an ICRS coordinate, the resulting frame is\n        SkyOffsetICRS, with the origin set to this object)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "131e7b357b9bdf09f5543ff8f91f31189dbaee99810117b43e0f4e45497c5c08",
            "fields": [
                {
                    "id": "gicu97b_",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.skyoffset_frame object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y8lcmpsu",
                    "encoding": "",
                    "name": "rotation",
                    "value": "",
                    "defaultValue": "",
                    "description": "The final rotation of the frame about the ``origin``. The sign of\nthe rotation is the left-hand rule. That is, an object at a\nparticular position angle in the un-rotated system will be sent to\nthe positive latitude (z) direction in the final frame.",
                    "type": "angle-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b70l1qo2",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.skyoffset_frame",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.skyoffset_frame",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "usgpn40u",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v77nres3",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "bja1_n_7",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "muhhoadc",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yjh_2gj0",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5u0_bawc",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "vtotnd1p",
            "name": "SkyCoord.spherical_offsets_by",
            "description": "Computes the coordinate that is a specified pair of angular offsets away\n    from this coordinate.\n    \n    Parameters\n    ----------\n    d_lon : angle-like\n        The angular offset in the longitude direction. The definition of\n        \"longitude\" depends on this coordinate's frame (e.g., RA for\n        equatorial coordinates).\n    d_lat : angle-like\n        The angular offset in the latitude direction. The definition of\n        \"latitude\" depends on this coordinate's frame (e.g., Dec for\n        equatorial coordinates).\n    \n    Returns\n    -------\n    newcoord : `~astropy.coordinates.SkyCoord`\n        The coordinates for the location that corresponds to offsetting by\n        ``d_lat`` in the latitude direction and ``d_lon`` in the longitude\n        direction.\n    \n    Notes\n    -----\n    This internally uses `~astropy.coordinates.SkyOffsetFrame` to do the\n    transformation. For a more complete set of transform offsets, use\n    `~astropy.coordinates.SkyOffsetFrame` or `~astropy.wcs.WCS` manually.\n    This specific method can be reproduced by doing\n    ``SkyCoord(SkyOffsetFrame(d_lon, d_lat, origin=self.frame).transform_to(self))``.\n    \n    See Also\n    --------\n    spherical_offsets_to : compute the angular offsets to another coordinate\n    directional_offset_by : offset a coordinate by an angle in a direction",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e7536c585ab4c4ac4b3e574eeceb5d15dec1d19efa63eb42de2b3646a17b1a11",
            "fields": [
                {
                    "id": "c079o43u",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.spherical_offsets_by object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gjkko1rw",
                    "encoding": "",
                    "name": "d_lon",
                    "value": "",
                    "defaultValue": "",
                    "description": "The angular offset in the longitude direction. The definition of\n\"longitude\" depends on this coordinate's frame (e.g., RA for\nequatorial coordinates).",
                    "type": "angle-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4cjmc440",
                    "encoding": "",
                    "name": "d_lat",
                    "value": "",
                    "defaultValue": "",
                    "description": "The angular offset in the latitude direction. The definition of\n\"latitude\" depends on this coordinate's frame (e.g., Dec for\nequatorial coordinates).",
                    "type": "angle-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ztcm2mvm",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.spherical_offsets_by",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.spherical_offsets_by",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gkxd8m1h",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qcohute1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kjgpy9ck",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5ovmum5n",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r8n6h47p",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jpx7206o",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "lbd_i4u1",
            "name": "SkyCoord.spherical_offsets_to",
            "description": "Computes angular offsets to go *from* this coordinate *to* another.\n    \n    Parameters\n    ----------\n    tocoord : `~astropy.coordinates.BaseCoordinateFrame`\n        The coordinate to find the offset to.\n    \n    Returns\n    -------\n    lon_offset : `~astropy.coordinates.Angle`\n        The angular offset in the longitude direction. The definition of\n        \"longitude\" depends on this coordinate's frame (e.g., RA for\n        equatorial coordinates).\n    lat_offset : `~astropy.coordinates.Angle`\n        The angular offset in the latitude direction. The definition of\n        \"latitude\" depends on this coordinate's frame (e.g., Dec for\n        equatorial coordinates).\n    \n    Raises\n    ------\n    ValueError\n        If the ``tocoord`` is not in the same frame as this one. This is\n        different from the behavior of the\n        :meth:`~astropy.coordinates.BaseCoordinateFrame.separation`/:meth:`~astropy.coordinates.BaseCoordinateFrame.separation_3d`\n        methods because the offset components depend critically on the\n        specific choice of frame.\n    \n    Notes\n    -----\n    This uses the sky offset frame machinery, and hence will produce a new\n    sky offset frame if one does not already exist for this object's frame\n    class.\n    \n    See Also\n    --------\n    :meth:`~astropy.coordinates.BaseCoordinateFrame.separation` :\n        for the *total* angular offset (not broken out into components).\n    :meth:`~astropy.coordinates.BaseCoordinateFrame.position_angle` :\n        for the direction of the offset.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7528fe1cf11d49323e1d6bf415dcf12ea9f09fc6333fe46e6d41c63717231ba8",
            "fields": [
                {
                    "id": "h11kxfgw",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.spherical_offsets_to object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3mdmsfi6",
                    "encoding": "",
                    "name": "tocoord",
                    "value": "",
                    "defaultValue": "",
                    "description": "The coordinate to find the offset to.",
                    "type": "astropy.coordinates.BaseCoordinateFrame",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u4jqhmfa",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.spherical_offsets_to",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.spherical_offsets_to",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qkpkf8fz",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eu49z0u6",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "25948e62",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ph7p17wx",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sevn7dxa",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pjgkbphy",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "yyqgzp0j",
            "name": "SkyCoord.squeeze",
            "description": "Return an instance with single-dimensional shape entries removed.\n    \n    Parameters are as for :meth:`~numpy.ndarray.squeeze`.  All internal\n    data are views of the data of the original.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5206eb7531c60c3ca8348ade5527aee5149dc2819844d6e06bf03dbcefaa2f5e",
            "fields": [
                {
                    "id": "zd9r546u",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.squeeze object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "30kbsghh",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oog7r3po",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uzssj0t9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.squeeze",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.squeeze",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eidvu8lq",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "57o_u5el",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "j5gzgy2p",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "49j_fkxw",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "up76ia9h",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ty3enu8l",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "ogzg89f8",
            "name": "SkyCoord.swapaxes",
            "description": "Return an instance with the given axes interchanged.\n    \n    Parameters are as for :meth:`~numpy.ndarray.swapaxes`:\n    ``axis1, axis2``.  All internal data are views of the data of the\n    original.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b67d2679e66a433eacdb2ac06f3ceec294afc124e448831789b03730f8baa68c",
            "fields": [
                {
                    "id": "ykqo7wro",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.swapaxes object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eewlu7st",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "beo7febr",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u7tc2vc1",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.swapaxes",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.swapaxes",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_x8zr2xw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m0bhz53x",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "jkzjvlim",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aemz1_3b",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bn31seyh",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a9cpeqhg",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "7eez48zr",
            "name": "SkyCoord.take",
            "description": "Return a new instance formed from the elements at the given indices.\n    \n    Parameters are as for :meth:`~numpy.ndarray.take`, except that,\n    obviously, no output array can be given.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2724efa00fef3779be4e093e8367aee8a43962b3c6b0ba745ed2201be1a1d2fb",
            "fields": [
                {
                    "id": "9z3voex5",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.take object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wu0qaxhd",
                    "encoding": "",
                    "name": "indices",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "__zy5cs_",
                    "encoding": "",
                    "name": "axis",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iq3lr3dk",
                    "encoding": "",
                    "name": "out",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4tosm2n1",
                    "encoding": "",
                    "name": "mode",
                    "value": "raise",
                    "defaultValue": "raise",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "js5gpau6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.take",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.take",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x5u5g7ro",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eqgh58jx",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "2e6h00vd",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p7uqfzwe",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ypmfzt_f",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uowo3fhy",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "9qsy1g4_",
            "name": "SkyCoord.to_pixel",
            "description": "Convert this coordinate to pixel coordinates using a `~astropy.wcs.WCS`\n    object.\n    \n    Parameters\n    ----------\n    wcs : `~astropy.wcs.WCS`\n        The WCS to use for convert\n    origin : int\n        Whether to return 0 or 1-based pixel coordinates.\n    mode : 'all' or 'wcs'\n        Whether to do the transformation including distortions (``'all'``) or\n        only including only the core WCS transformation (``'wcs'``).\n    \n    Returns\n    -------\n    xp, yp : `numpy.ndarray`\n        The pixel coordinates\n    \n    See Also\n    --------\n    astropy.wcs.utils.skycoord_to_pixel : the implementation of this method",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6f2eabcafeee82fcf3bcb3b14295a6f35b7e7460a01662620273db75816c11da",
            "fields": [
                {
                    "id": "6xxh8hr3",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.to_pixel object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5y2zksj2",
                    "encoding": "",
                    "name": "wcs",
                    "value": "",
                    "defaultValue": "",
                    "description": "The WCS to use for convert",
                    "type": "astropy.wcs.WCS",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uc8zu1is",
                    "encoding": "",
                    "name": "origin",
                    "value": 0,
                    "defaultValue": 0,
                    "description": "Whether to return 0 or 1-based pixel coordinates.",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "upi3tzbf",
                    "encoding": "",
                    "name": "mode",
                    "value": "all",
                    "defaultValue": "all",
                    "description": "Whether to do the transformation including distortions (``'all'``) or\nonly including only the core WCS transformation (``'wcs'``).",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5hajd1mj",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.to_pixel",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.to_pixel",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "88le_s6t",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "emeu852y",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vjzxmxsv",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ecla94nz",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rf0eztx1",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "88xs7tx4",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "25al8314",
            "name": "SkyCoord.to_string",
            "description": "A string representation of the coordinates.\n    \n    The default styles definitions are::\n    \n      'decimal': 'lat': {'decimal': True, 'unit': \"deg\"}\n                 'lon': {'decimal': True, 'unit': \"deg\"}\n      'dms': 'lat': {'unit': \"deg\"}\n             'lon': {'unit': \"deg\"}\n      'hmsdms': 'lat': {'alwayssign': True, 'pad': True, 'unit': \"deg\"}\n                'lon': {'pad': True, 'unit': \"hour\"}\n    \n    See :meth:`~astropy.coordinates.Angle.to_string` for details and\n    keyword arguments (the two angles forming the coordinates are are\n    both :class:`~astropy.coordinates.Angle` instances). Keyword\n    arguments have precedence over the style defaults and are passed\n    to :meth:`~astropy.coordinates.Angle.to_string`.\n    \n    Parameters\n    ----------\n    style : {'hmsdms', 'dms', 'decimal'}\n        The formatting specification to use. These encode the three most\n        common ways to represent coordinates. The default is `decimal`.\n    **kwargs\n        Keyword args passed to :meth:`~astropy.coordinates.Angle.to_string`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "61f5a604c81e938d495e83df7f9528f1581b645aa45792ad8b3264ddfc48b368",
            "fields": [
                {
                    "id": "jw3ao1i7",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.to_string object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ewcjmy_k",
                    "encoding": "",
                    "name": "style",
                    "value": "decimal",
                    "defaultValue": "decimal",
                    "description": "The formatting specification to use. These encode the three most\ncommon ways to represent coordinates. The default is `decimal`.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a_e02889",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l66gor_5",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.to_string",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.to_string",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f1wr7nru",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "75kkwwzz",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "zehkfwup",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rd9j0yet",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pqk1x0t9",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tx0d4gub",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "qx9mayw1",
            "name": "SkyCoord.to_table",
            "description": "Convert this |SkyCoord| to a |QTable|.\n    \n    Any attributes that have the same length as the |SkyCoord| will be\n    converted to columns of the |QTable|. All other attributes will be\n    recorded as metadata.\n    \n    Returns\n    -------\n    `~astropy.table.QTable`\n        A |QTable| containing the data of this |SkyCoord|.\n    \n    Examples\n    --------\n    >>> sc = SkyCoord(ra=[40, 70]*u.deg, dec=[0, -20]*u.deg,\n    ...               obstime=Time([2000, 2010], format='jyear'))\n    >>> t =  sc.to_table()\n    >>> t\n    <QTable length=2>\n       ra     dec   obstime\n      deg     deg\n    float64 float64   Time\n    ------- ------- -------\n       40.0     0.0  2000.0\n       70.0   -20.0  2010.0\n    >>> t.meta\n    {'representation_type': 'spherical', 'frame': 'icrs'}",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7ebd085f0f77142aed8a9a65d586b1c280870c3b142340732a2c7f5b501176e6",
            "fields": [
                {
                    "id": "zkejyzgi",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.to_table object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "99yem89n",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.to_table",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.to_table",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5krr1ceb",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3szmgj44",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ax3uy56g",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "spxmq0z1",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z2sjzzza",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "holdh66e",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "w4r2ld4q",
            "name": "SkyCoord.transform_to",
            "description": "Transform this coordinate to a new frame.\n    \n    The precise frame transformed to depends on ``merge_attributes``.\n    If `False`, the destination frame is used exactly as passed in.\n    But this is often not quite what one wants.  E.g., suppose one wants to\n    transform an ICRS coordinate that has an obstime attribute to FK4; in\n    this case, one likely would want to use this information. Thus, the\n    default for ``merge_attributes`` is `True`, in which the precedence is\n    as follows: (1) explicitly set (i.e., non-default) values in the\n    destination frame; (2) explicitly set values in the source; (3) default\n    value in the destination frame.\n    \n    Note that in either case, any explicitly set attributes on the source\n    |SkyCoord| that are not part of the destination frame's definition are\n    kept (stored on the resulting |SkyCoord|), and thus one can round-trip\n    (e.g., from FK4 to ICRS to FK4 without losing obstime).\n    \n    Parameters\n    ----------\n    frame : str, `~astropy.coordinates.BaseCoordinateFrame` class or instance, or |SkyCoord| instance\n        The frame to transform this coordinate into.  If a |SkyCoord|, the\n        underlying frame is extracted, and all other information ignored.\n    merge_attributes : bool, optional\n        Whether the default attributes in the destination frame are allowed\n        to be overridden by explicitly set attributes in the source\n        (see note above; default: `True`).\n    \n    Returns\n    -------\n    coord : |SkyCoord|\n        A new object with this coordinate represented in the `frame` frame.\n    \n    Raises\n    ------\n    ValueError\n        If there is no possible transformation route.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "276522b791299b4e357870fabdc04d5590635980c20f9bb625c524d01f2f19af",
            "fields": [
                {
                    "id": "7yq11qyy",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.transform_to object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_2ckwi_3",
                    "encoding": "",
                    "name": "frame",
                    "value": "",
                    "defaultValue": "",
                    "description": "The frame to transform this coordinate into.  If a |SkyCoord|, the\nunderlying frame is extracted, and all other information ignored.",
                    "type": "str, astropy.coordinates.BaseCoordinateFrame class or instance, or |SkyCoord| instance",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9uysyys6",
                    "encoding": "",
                    "name": "merge_attributes",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether the default attributes in the destination frame are allowed\nto be overridden by explicitly set attributes in the source\n(see note above; default: `True`).",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pfvfmc7_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.transform_to",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.transform_to",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vknlvtel",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uzdbars9",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "bc8ot5v5",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qp6pyk1n",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "juut_03r",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_flerd_a",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "7mnqks9s",
            "name": "SkyCoord.transpose",
            "description": "Return an instance with the data transposed.\n    \n    Parameters are as for :meth:`~numpy.ndarray.transpose`.  All internal\n    data are views of the data of the original.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9138303079108ae92379a4cbedf0f83c5f47cae4c8d2f9c960f90cbf4b7ff136",
            "fields": [
                {
                    "id": "i7r0n0xp",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoord.transpose object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoord",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "io85qdhp",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oz7ixke0",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3ei8jywv",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord.transpose",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord.transpose",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i2a98api",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6ou9lywg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "0k_o76eh",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rb8g3x4o",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoord",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t6yrdqs_",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ob0g3cgq",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "2b7ocp98",
            "name": "SkyCoordInfo.adjust_indices",
            "description": "Adjust info indices after column modification.\n    \n    Parameters\n    ----------\n    index : slice, int, list, or ndarray\n        Element(s) of column to modify. This parameter can\n        be a single row number, a list of row numbers, an\n        ndarray of row numbers, a boolean ndarray (a mask),\n        or a column slice.\n    value : int, list, or ndarray\n        New value(s) to insert\n    col_len : int\n        Length of the column",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "af6ee02bbf157e3a59386442ba5f3039759745456c8b7fadc2323052e4520e71",
            "fields": [
                {
                    "id": "04n0dr7h",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoordInfo.adjust_indices object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6f6t4kq7",
                    "encoding": "",
                    "name": "index",
                    "value": "",
                    "defaultValue": "",
                    "description": "Element(s) of column to modify. This parameter can\nbe a single row number, a list of row numbers, an\nndarray of row numbers, a boolean ndarray (a mask),\nor a column slice.",
                    "type": "slice, int, list, or ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2o7q9d4h",
                    "encoding": "",
                    "name": "value",
                    "value": "",
                    "defaultValue": "",
                    "description": "New value(s) to insert",
                    "type": "int, list, or ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jo8kgdvb",
                    "encoding": "",
                    "name": "col_len",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the column",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mqid30jp",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo.adjust_indices",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo.adjust_indices",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xc4tgji_",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "54hbxc42",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "cjdxxjh6",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5icmsikd",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1c1nk2gi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d9tbq_yy",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "g_erv1z5",
            "name": "SkyCoordInfo.default_format",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8d09dd662172143b2809b4b260348800f7038e3931e2818b49d40afd9bfb20c0",
            "fields": [
                {
                    "id": "ko38bimv",
                    "encoding": "",
                    "name": "val",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g7stlgiw",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo.default_format",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo.default_format",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hjugcgpp",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "piewyyhc",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "3uen1hem",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ua859l_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9xne9ir4",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9st30cej",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "enmpcnxt",
            "name": "SkyCoordInfo.get_sortable_arrays",
            "description": "Return a list of arrays which can be lexically sorted to represent\n    the order of the parent column.\n    \n    The base method raises NotImplementedError and must be overridden.\n    \n    Returns\n    -------\n    arrays : list of ndarray",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4c9ff06dcb0caa6d30e0b043368442639ea200182bcb9959267bdb70c1b7d380",
            "fields": [
                {
                    "id": "01nwxxhc",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoordInfo.get_sortable_arrays object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "njljvsie",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo.get_sortable_arrays",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo.get_sortable_arrays",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pncqj7s3",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "arhh9trw",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "f_yl91d1",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d0loz04a",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kr5st2ed",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pwig0ls8",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "2wsx2drr",
            "name": "SkyCoordInfo.func",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6e28a53fcd4b23105304a424ad58abc3a0427888026c9ae23ec1c61cbecd8e1c",
            "fields": [
                {
                    "id": "et2cs_j7",
                    "encoding": "",
                    "name": "dat",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tjp1xazc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo.func",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo.func",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xzd4z71m",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fqxnn3ey",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "r53j4ckv",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ik6p0st3",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t9cs7dl5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i2vsyesu",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "gmrv02qy",
            "name": "SkyCoordInfo.iter_str_vals",
            "description": "This is a mixin-safe version of Column.iter_str_vals.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0e5a822d0f4a228dd43101c356a9ac5b36513bae31f7f773b74868ae65dae5d3",
            "fields": [
                {
                    "id": "3ctsi5dz",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoordInfo.iter_str_vals object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sufokgyh",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo.iter_str_vals",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo.iter_str_vals",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r2_tq6mk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "59i3uam7",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "8ec1q99o",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "djj28yqp",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uc3pavjj",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jmovqlvb",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "6sxzexoq",
            "name": "SkyCoordInfo.merge_cols_attributes",
            "description": "Utility method to merge and validate the attributes ``attrs`` for the\n    input table columns ``cols``.\n    \n    Note that ``dtype`` and ``shape`` attributes are handled specially.\n    These should not be passed in ``attrs`` but will always be in the\n    returned dict of merged attributes.\n    \n    Parameters\n    ----------\n    cols : list\n        List of input Table column objects\n    metadata_conflicts : str ('warn'|'error'|'silent')\n        How to handle metadata conflicts\n    name : str\n        Output column name\n    attrs : list\n        List of attribute names to be merged\n    \n    Returns\n    -------\n    attrs : dict\n        Of merged attributes.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c08862d115f3ab31cbae34da77ce300272afe7d2411d5768a4b37e6d85446c4a",
            "fields": [
                {
                    "id": "sx49kzji",
                    "encoding": "",
                    "name": "cols",
                    "value": "",
                    "defaultValue": "",
                    "description": "List of input Table column objects",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d9h50ycn",
                    "encoding": "",
                    "name": "metadata_conflicts",
                    "value": "",
                    "defaultValue": "",
                    "description": "How to handle metadata conflicts",
                    "type": "str ('warn'|'error'|'silent')",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u7f6tbfo",
                    "encoding": "",
                    "name": "name",
                    "value": "",
                    "defaultValue": "",
                    "description": "Output column name",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jtriizyi",
                    "encoding": "",
                    "name": "attrs",
                    "value": "",
                    "defaultValue": "",
                    "description": "List of attribute names to be merged",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8xva8nrr",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo.merge_cols_attributes",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo.merge_cols_attributes",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wsfsugvw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6x1kq1cd",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5gl75t9n",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2467h89c",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8_0yenw6",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7vppto5_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "ce47cxdn",
            "name": "SkyCoordInfo.new_like",
            "description": "Return a new SkyCoord instance which is consistent with the input\n    SkyCoord objects ``skycoords`` and has ``length`` rows.  Being\n    \"consistent\" is defined as being able to set an item from one to each of\n    the rest without any exception being raised.\n    \n    This is intended for creating a new SkyCoord instance whose elements can\n    be set in-place for table operations like join or vstack.  This is used\n    when a SkyCoord object is used as a mixin column in an astropy Table.\n    \n    The data values are not predictable and it is expected that the consumer\n    of the object will fill in all values.\n    \n    Parameters\n    ----------\n    skycoords : list\n        List of input SkyCoord objects\n    length : int\n        Length of the output skycoord object\n    metadata_conflicts : str ('warn'|'error'|'silent')\n        How to handle metadata conflicts\n    name : str\n        Output name (sets output skycoord.info.name)\n    \n    Returns\n    -------\n    skycoord : |SkyCoord| (or subclass)\n        Instance of this class consistent with ``skycoords``",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0d7c3dfd16cb56ba30d10d6b90314e0ecefad0ee10c72455fce26aad75e61c63",
            "fields": [
                {
                    "id": "8tipv_7u",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoordInfo.new_like object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "od3c_kqm",
                    "encoding": "",
                    "name": "skycoords",
                    "value": "",
                    "defaultValue": "",
                    "description": "List of input SkyCoord objects",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "87whntfc",
                    "encoding": "",
                    "name": "length",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the output skycoord object",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "slkyzqwk",
                    "encoding": "",
                    "name": "metadata_conflicts",
                    "value": "warn",
                    "defaultValue": "warn",
                    "description": "How to handle metadata conflicts",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9a8iswkp",
                    "encoding": "",
                    "name": "name",
                    "value": "",
                    "defaultValue": "",
                    "description": "Output name (sets output skycoord.info.name)",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "23ozofsf",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo.new_like",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo.new_like",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zzczxa2n",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "71vvf_zb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ukoi4y23",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ioxed0xm",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dy4qoph1",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yzfgyk3m",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "vnblnh4d",
            "name": "SkyCoordInfo.slice_indices",
            "description": "Given a sliced object, modify its indices\n    to correctly represent the slice.\n    \n    Parameters\n    ----------\n    col_slice : `~astropy.table.Column` or mixin\n        Sliced object. If not a column, it must be a valid mixin, see\n        https://docs.astropy.org/en/stable/table/mixin_columns.html\n    item : slice, list, or ndarray\n        Slice used to create col_slice\n    col_len : int\n        Length of original object",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "59a6ffcab60a4a60b00e2586e347724ceb05e304a02dccf9126a8f155579659e",
            "fields": [
                {
                    "id": "t_5fsef7",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.coordinates.sky_coordinate.SkyCoordInfo.slice_indices object",
                    "type": "Object:astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4xmmx1oa",
                    "encoding": "",
                    "name": "col_slice",
                    "value": "",
                    "defaultValue": "",
                    "description": "Sliced object. If not a column, it must be a valid mixin, see\nhttps://docs.astropy.org/en/stable/table/mixin_columns.html",
                    "type": "astropy.table.Column or mixin",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nyjtipo_",
                    "encoding": "",
                    "name": "item",
                    "value": "",
                    "defaultValue": "",
                    "description": "Slice used to create col_slice",
                    "type": "slice, list, or ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7dadm6n_",
                    "encoding": "",
                    "name": "col_len",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of original object",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7_zpustk",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo.slice_indices",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo.slice_indices",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j5mcfy5x",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a9mlg58_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "dv0d53tp",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c65o1j25",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "defaultValue": "astropy.coordinates.sky_coordinate.SkyCoordInfo",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qovq51xz",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x_bg8j1e",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}