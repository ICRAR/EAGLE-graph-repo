{
    "modelData": {
        "filePath": "astropy_coordinates_funcs.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "This module contains convenience functions for coordinate-related functionality.\n\nThis is generally just wrapping around the object-oriented coordinates\nframework, but it is useful for some users who are used to more functional\ninterfaces.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.5.5",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "coordinates",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "4ab3439ca3f30152ec29b7dc14ec990eac3810f02afb5dc832e2829ea54aa768",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1752679350.048244,
        "numLGNodes": 6
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "hvlg4q7a",
            "name": "funcs.cartesian_to_spherical",
            "description": "Converts 3D rectangular cartesian coordinates to spherical polar\n    coordinates.\n    \n    Note that the resulting angles are latitude/longitude or\n    elevation/azimuthal form.  I.e., the origin is along the equator\n    rather than at the north pole.\n    \n    .. note::\n        This function simply wraps functionality provided by the\n        `~astropy.coordinates.CartesianRepresentation` and\n        `~astropy.coordinates.SphericalRepresentation` classes.  In general,\n        for both performance and readability, we suggest using these classes\n        directly.  But for situations where a quick one-off conversion makes\n        sense, this function is provided.\n    \n    Parameters\n    ----------\n    x : scalar, array-like, or `~astropy.units.Quantity`\n        The first Cartesian coordinate.\n    y : scalar, array-like, or `~astropy.units.Quantity`\n        The second Cartesian coordinate.\n    z : scalar, array-like, or `~astropy.units.Quantity`\n        The third Cartesian coordinate.\n    \n    Returns\n    -------\n    r : `~astropy.units.Quantity`\n        The radial coordinate (in the same units as the inputs).\n    lat : `~astropy.units.Quantity` ['angle']\n        The latitude in radians\n    lon : `~astropy.units.Quantity` ['angle']\n        The longitude in radians",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "1ab12c9fb445e8bd3ef5c81c44175bc44d1c2d8da1fb03c48c5661a512410f86",
            "fields": [
                {
                    "id": "w5io9obc",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The first Cartesian coordinate.",
                    "type": "scalar, array-like, or astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "grqq_nct",
                    "encoding": "",
                    "name": "y",
                    "value": "",
                    "defaultValue": "",
                    "description": "The second Cartesian coordinate.",
                    "type": "scalar, array-like, or astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yd8p7md5",
                    "encoding": "",
                    "name": "z",
                    "value": "",
                    "defaultValue": "",
                    "description": "The third Cartesian coordinate.",
                    "type": "scalar, array-like, or astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f2eguxgn",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.funcs.cartesian_to_spherical",
                    "defaultValue": "astropy.coordinates.funcs.cartesian_to_spherical",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nx97g0o5",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r41ejwjy",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "klwiyqeu",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3xx3qfpi",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.funcs",
                    "defaultValue": "astropy.coordinates.funcs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "alhinyem",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bxscozn2",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "_gp1yu38",
            "name": "funcs.concatenate",
            "description": "Combine multiple coordinate objects into a single\n    `~astropy.coordinates.SkyCoord`.\n    \n    \"Coordinate objects\" here mean frame objects with data,\n    `~astropy.coordinates.SkyCoord`, or representation objects.  Currently,\n    they must all be in the same frame, but in a future version this may be\n    relaxed to allow inhomogeneous sequences of objects.\n    \n    Parameters\n    ----------\n    coords : sequence of coordinate-like\n        The objects to concatenate\n    \n    Returns\n    -------\n    cskycoord : SkyCoord\n        A single sky coordinate with its data set to the concatenation of all\n        the elements in ``coords``",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f4e651d67081df3251bd7722ff88a6b9703a9e212fa733e8389516616277862f",
            "fields": [
                {
                    "id": "1p__xoqb",
                    "encoding": "",
                    "name": "coords",
                    "value": "",
                    "defaultValue": "",
                    "description": "The objects to concatenate",
                    "type": "sequence of coordinate-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j0cy7s3s",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.funcs.concatenate",
                    "defaultValue": "astropy.coordinates.funcs.concatenate",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qtx2s8ll",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eb0o4pls",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ch_m3irn",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "26fnlpoh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.funcs",
                    "defaultValue": "astropy.coordinates.funcs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gicpeoik",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kf3sx0_j",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fax5lj6x",
            "name": "funcs.concatenate_representations",
            "description": "Combine multiple representation objects into a single instance by\n    concatenating the data in each component.\n    \n    Currently, all of the input representations have to be the same type. This\n    properly handles differential or velocity data, but all input objects must\n    have the same differential object type as well.\n    \n    Parameters\n    ----------\n    reps : sequence of `~astropy.coordinates.BaseRepresentation`\n        The objects to concatenate\n    \n    Returns\n    -------\n    rep : `~astropy.coordinates.BaseRepresentation` subclass instance\n        A single representation object with its data set to the concatenation of\n        all the elements of the input sequence of representations.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e7f725b195cb8155d4a61bad59dab3a2f3d6233352b1edc94ea2f6c185078877",
            "fields": [
                {
                    "id": "oobbzbg7",
                    "encoding": "",
                    "name": "reps",
                    "value": "",
                    "defaultValue": "",
                    "description": "The objects to concatenate",
                    "type": "sequence of astropy.coordinates.BaseRepresentation",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ss4y4k57",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.funcs.concatenate_representations",
                    "defaultValue": "astropy.coordinates.funcs.concatenate_representations",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1rp9ne5k",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jcxlz3f9",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "44mws6op",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aiien0q4",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.funcs",
                    "defaultValue": "astropy.coordinates.funcs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8j3kkmqs",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "evgdr966",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ckmlav8e",
            "name": "funcs.get_constellation",
            "description": "Determines the constellation(s) a given coordinate object contains.\n    \n    Parameters\n    ----------\n    coord : coordinate-like\n        The object to determine the constellation of.\n    short_name : bool\n        If True, the returned names are the IAU-sanctioned abbreviated\n        names.  Otherwise, full names for the constellations are used.\n    constellation_list : str\n        The set of constellations to use.  Currently only ``'iau'`` is\n        supported, meaning the 88 \"modern\" constellations endorsed by the IAU.\n    \n    Returns\n    -------\n    constellation : str or string array\n        If ``coords`` contains a scalar coordinate, returns the name of the\n        constellation.  If it is an array coordinate object, it returns an array\n        of names.\n    \n    Notes\n    -----\n    To determine which constellation a point on the sky is in, this precesses\n    to B1875, and then uses the Delporte boundaries of the 88 modern\n    constellations, as tabulated by\n    `Roman 1987 <https://cdsarc.cds.unistra.fr/viz-bin/cat/VI/42>`_.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6c5e7606641ca7c812e2c093130170a79ea55970beda4ac8ffd0699b3d2b10f0",
            "fields": [
                {
                    "id": "law89a58",
                    "encoding": "",
                    "name": "coord",
                    "value": "",
                    "defaultValue": "",
                    "description": "The object to determine the constellation of.",
                    "type": "coordinate-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mceeivlg",
                    "encoding": "",
                    "name": "short_name",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the returned names are the IAU-sanctioned abbreviated\nnames.  Otherwise, full names for the constellations are used.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nelbxmoh",
                    "encoding": "",
                    "name": "constellation_list",
                    "value": "iau",
                    "defaultValue": "iau",
                    "description": "The set of constellations to use.  Currently only ``'iau'`` is\nsupported, meaning the 88 \"modern\" constellations endorsed by the IAU.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3djh9y7o",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.funcs.get_constellation",
                    "defaultValue": "astropy.coordinates.funcs.get_constellation",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u6wwvjxh",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zgbwbqdj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "o8ftyii1",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "agp8087u",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.funcs",
                    "defaultValue": "astropy.coordinates.funcs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u2iza9ty",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ekh1l42w",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "cd0rzdsa",
            "name": "funcs.get_sun",
            "description": "Determines the location of the sun at a given time (or times, if the input\n    is an array `~astropy.time.Time` object), in geocentric coordinates.\n    \n    Parameters\n    ----------\n    time : `~astropy.time.Time`\n        The time(s) at which to compute the location of the sun.\n    \n    Returns\n    -------\n    newsc : `~astropy.coordinates.SkyCoord`\n        The location of the sun as a `~astropy.coordinates.SkyCoord` in the\n        `~astropy.coordinates.GCRS` frame.\n    \n    Notes\n    -----\n    The algorithm for determining the sun/earth relative position is based\n    on the simplified version of VSOP2000 that is part of ERFA. Compared to\n    JPL's ephemeris, it should be good to about 4 km (in the Sun-Earth\n    vector) from 1900-2100 C.E., 8 km for the 1800-2200 span, and perhaps\n    250 km over the 1000-3000.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5a118f4041c598a3d5f93f839811bb22e9efeca28ce59b128418fa2098c56daa",
            "fields": [
                {
                    "id": "q554yu32",
                    "encoding": "",
                    "name": "time",
                    "value": "",
                    "defaultValue": "",
                    "description": "The time(s) at which to compute the location of the sun.",
                    "type": "astropy.time.Time",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9pmizi91",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.funcs.get_sun",
                    "defaultValue": "astropy.coordinates.funcs.get_sun",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fsmojcj_",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i96ffsu_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "pdes6ljb",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jam1arl_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.funcs",
                    "defaultValue": "astropy.coordinates.funcs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5sof9m26",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v82qwisk",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "j0en39jv",
            "name": "funcs.spherical_to_cartesian",
            "description": "Converts spherical polar coordinates to rectangular cartesian\n    coordinates.\n    \n    Note that the input angles should be in latitude/longitude or\n    elevation/azimuthal form.  I.e., the origin is along the equator\n    rather than at the north pole.\n    \n    .. note::\n        This is a low-level function used internally in\n        `astropy.coordinates`.  It is provided for users if they really\n        want to use it, but it is recommended that you use the\n        `astropy.coordinates` coordinate systems.\n    \n    Parameters\n    ----------\n    r : scalar, array-like, or `~astropy.units.Quantity`\n        The radial coordinate (in the same units as the inputs).\n    lat : scalar, array-like, or `~astropy.units.Quantity` ['angle']\n        The latitude (in radians if array or scalar)\n    lon : scalar, array-like, or `~astropy.units.Quantity` ['angle']\n        The longitude (in radians if array or scalar)\n    \n    Returns\n    -------\n    x : float or array\n        The first cartesian coordinate.\n    y : float or array\n        The second cartesian coordinate.\n    z : float or array\n        The third cartesian coordinate.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ede38bf005e5f2c93ba8e5ba93b0bacfe5458f988106b3cefe44a3ebaee403b1",
            "fields": [
                {
                    "id": "fvietodf",
                    "encoding": "",
                    "name": "r",
                    "value": "",
                    "defaultValue": "",
                    "description": "The radial coordinate (in the same units as the inputs).",
                    "type": "scalar, array-like, or astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rd67aoy6",
                    "encoding": "",
                    "name": "lat",
                    "value": "",
                    "defaultValue": "",
                    "description": "The latitude (in radians if array or scalar)",
                    "type": "scalar, array-like, or astropy.units.Quantity ['angle']",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u_c8lcx0",
                    "encoding": "",
                    "name": "lon",
                    "value": "",
                    "defaultValue": "",
                    "description": "The longitude (in radians if array or scalar)",
                    "type": "scalar, array-like, or astropy.units.Quantity ['angle']",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gd1vyxay",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.funcs.spherical_to_cartesian",
                    "defaultValue": "astropy.coordinates.funcs.spherical_to_cartesian",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yzd00mph",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gej0ubsj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5cgnsod5",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kvl00qbj",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.funcs",
                    "defaultValue": "astropy.coordinates.funcs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2zil4gir",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6cmg2d4f",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}