{
    "modelData": {
        "filePath": "astropy_coordinates_solar_system.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "This module contains convenience functions for retrieving solar system\nephemerides from jplephem.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.5.5",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "coordinates",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "8452edced7987586843eb98969cbfc5922575bd373c76ef6002b04888236feaf",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1752679350.422221,
        "numLGNodes": 8
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "3ui62f3j",
            "name": "solar_system.get_body",
            "description": "Get a `~astropy.coordinates.SkyCoord` for a solar system body as observed\n    from a location on Earth in the `~astropy.coordinates.GCRS` reference\n    system.\n    \n    Parameters\n    ----------\n    body : str or list of tuple\n        The solar system body for which to calculate positions.  Can also be a\n        kernel specifier (list of 2-tuples) if the ``ephemeris`` is a JPL\n        kernel.\n    time : `~astropy.time.Time`\n        Time of observation.\n    location : `~astropy.coordinates.EarthLocation`, optional\n        Location of observer on the Earth.  If not given, will be taken from\n        ``time`` (if not present, a geocentric observer will be assumed).\n    ephemeris : str, optional\n        Ephemeris to use.  If not given, use the one set with\n        ``astropy.coordinates.solar_system_ephemeris.set`` (which is\n        set to 'builtin' by default).\n    \n    Returns\n    -------\n    skycoord : `~astropy.coordinates.SkyCoord`\n        GCRS Coordinate for the body\n    \n    Notes\n    -----\n    The coordinate returned is the apparent position, which is the position of\n    the body at time *t* minus the light travel time from the *body* to the\n    observing *location*.\n    \n    You can either give an explicit ephemeris or use a default, which is normally\n    a built-in ephemeris that does not require ephemeris files.  To change\n    the default to be the JPL ephemeris::\n    \n        >>> from astropy.coordinates import solar_system_ephemeris\n        >>> solar_system_ephemeris.set('jpl')  # doctest: +SKIP\n    \n    Use of any JPL ephemeris requires the jplephem package\n    (https://pypi.org/project/jplephem/).\n    If needed, the ephemeris file will be downloaded (and cached).\n    \n    One can check which bodies are covered by a given ephemeris using::\n    \n        >>> solar_system_ephemeris.bodies\n        ('earth', 'sun', 'moon', 'mercury', 'venus', 'earth-moon-barycenter', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune')",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "842664c9eda2de00f3ab371470d8bcc731a324fdd6e734dab96725ca2c749288",
            "fields": [
                {
                    "id": "nrvt4kan",
                    "encoding": "",
                    "name": "body",
                    "value": "",
                    "defaultValue": "",
                    "description": "The solar system body for which to calculate positions.  Can also be a\nkernel specifier (list of 2-tuples) if the ``ephemeris`` is a JPL\nkernel.",
                    "type": "str or list of tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iph_eme6",
                    "encoding": "",
                    "name": "time",
                    "value": "",
                    "defaultValue": "",
                    "description": "Time of observation.",
                    "type": "astropy.time.Time",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x5oqp0ah",
                    "encoding": "",
                    "name": "location",
                    "value": "",
                    "defaultValue": "",
                    "description": "Location of observer on the Earth.  If not given, will be taken from\n``time`` (if not present, a geocentric observer will be assumed).",
                    "type": "astropy.coordinates.EarthLocation",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bv7uv2sv",
                    "encoding": "",
                    "name": "ephemeris",
                    "value": "",
                    "defaultValue": "",
                    "description": "Ephemeris to use.  If not given, use the one set with\n``astropy.coordinates.solar_system_ephemeris.set`` (which is\nset to 'builtin' by default).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1j1tag13",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.solar_system.get_body",
                    "defaultValue": "astropy.coordinates.solar_system.get_body",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k7ahy4ly",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x41zbudu",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "mqonbum_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zsxohn3s",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.solar_system",
                    "defaultValue": "astropy.coordinates.solar_system",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mlwryfbr",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "63xe9g0v",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fvu3h9w6",
            "name": "solar_system.get_body_barycentric",
            "description": "Calculate the barycentric position of a solar system body.\n    \n    Parameters\n    ----------\n    body : str or list of tuple\n        The solar system body for which to calculate positions.  Can also be a\n        kernel specifier (list of 2-tuples) if the ``ephemeris`` is a JPL\n        kernel.\n    time : `~astropy.time.Time`\n        Time of observation.\n    ephemeris : str, optional\n        Ephemeris to use.  By default, use the one set with\n        ``astropy.coordinates.solar_system_ephemeris.set``\n    \n    Returns\n    -------\n    position : `~astropy.coordinates.CartesianRepresentation`\n        Barycentric (ICRS) position of the body in cartesian coordinates\n    \n    See Also\n    --------\n    get_body_barycentric_posvel : to calculate both position and velocity.\n    \n    Notes\n    -----\n    You can either give an explicit ephemeris or use a default, which is normally\n    a built-in ephemeris that does not require ephemeris files.  To change\n    the default to be the JPL ephemeris::\n    \n        >>> from astropy.coordinates import solar_system_ephemeris\n        >>> solar_system_ephemeris.set('jpl')  # doctest: +SKIP\n    \n    Use of any JPL ephemeris requires the jplephem package\n    (https://pypi.org/project/jplephem/).\n    If needed, the ephemeris file will be downloaded (and cached).\n    \n    One can check which bodies are covered by a given ephemeris using::\n    \n        >>> solar_system_ephemeris.bodies\n        ('earth', 'sun', 'moon', 'mercury', 'venus', 'earth-moon-barycenter', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune')",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a9e3c155939446dc3dc1371492952ce5742ec0595a8beb0e8a16df01b0ff4c2b",
            "fields": [
                {
                    "id": "t7wxa756",
                    "encoding": "",
                    "name": "body",
                    "value": "",
                    "defaultValue": "",
                    "description": "The solar system body for which to calculate positions.  Can also be a\nkernel specifier (list of 2-tuples) if the ``ephemeris`` is a JPL\nkernel.",
                    "type": "str or list of tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "noi_hc92",
                    "encoding": "",
                    "name": "time",
                    "value": "",
                    "defaultValue": "",
                    "description": "Time of observation.",
                    "type": "astropy.time.Time",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "62mecw8f",
                    "encoding": "",
                    "name": "ephemeris",
                    "value": "",
                    "defaultValue": "",
                    "description": "Ephemeris to use.  By default, use the one set with\n``astropy.coordinates.solar_system_ephemeris.set``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xfl1ou55",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.solar_system.get_body_barycentric",
                    "defaultValue": "astropy.coordinates.solar_system.get_body_barycentric",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5cjcs3px",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nl3yhhyv",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "j93mebzk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dbghze0h",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.solar_system",
                    "defaultValue": "astropy.coordinates.solar_system",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7gq6v0kb",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uu5a_pal",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "glvi5gez",
            "name": "solar_system.get_body_barycentric_posvel",
            "description": "Calculate the barycentric position and velocity of a solar system body.\n    \n    Parameters\n    ----------\n    body : str or list of tuple\n        The solar system body for which to calculate positions.  Can also be a\n        kernel specifier (list of 2-tuples) if the ``ephemeris`` is a JPL\n        kernel.\n    time : `~astropy.time.Time`\n        Time of observation.\n    ephemeris : str, optional\n        Ephemeris to use.  By default, use the one set with\n        ``astropy.coordinates.solar_system_ephemeris.set``\n    \n    Returns\n    -------\n    position, velocity : tuple of `~astropy.coordinates.CartesianRepresentation`\n        Tuple of barycentric (ICRS) position and velocity.\n    \n    See Also\n    --------\n    get_body_barycentric : to calculate position only.\n        This is faster by about a factor two for JPL kernels, but has no\n        speed advantage for the built-in ephemeris.\n    \n    Notes\n    -----\n    You can either give an explicit ephemeris or use a default, which is normally\n    a built-in ephemeris that does not require ephemeris files.  To change\n    the default to be the JPL ephemeris::\n    \n        >>> from astropy.coordinates import solar_system_ephemeris\n        >>> solar_system_ephemeris.set('jpl')  # doctest: +SKIP\n    \n    Use of any JPL ephemeris requires the jplephem package\n    (https://pypi.org/project/jplephem/).\n    If needed, the ephemeris file will be downloaded (and cached).\n    \n    One can check which bodies are covered by a given ephemeris using::\n    \n        >>> solar_system_ephemeris.bodies\n        ('earth', 'sun', 'moon', 'mercury', 'venus', 'earth-moon-barycenter', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune')",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "17a18d7f3697a4af72e3040f9f50966936ad476af434b06ff4ca3497b2429fb4",
            "fields": [
                {
                    "id": "h2i1qxpo",
                    "encoding": "",
                    "name": "body",
                    "value": "",
                    "defaultValue": "",
                    "description": "The solar system body for which to calculate positions.  Can also be a\nkernel specifier (list of 2-tuples) if the ``ephemeris`` is a JPL\nkernel.",
                    "type": "str or list of tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nepow__j",
                    "encoding": "",
                    "name": "time",
                    "value": "",
                    "defaultValue": "",
                    "description": "Time of observation.",
                    "type": "astropy.time.Time",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "53dm98ic",
                    "encoding": "",
                    "name": "ephemeris",
                    "value": "",
                    "defaultValue": "",
                    "description": "Ephemeris to use.  By default, use the one set with\n``astropy.coordinates.solar_system_ephemeris.set``",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g4xufkw9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.solar_system.get_body_barycentric_posvel",
                    "defaultValue": "astropy.coordinates.solar_system.get_body_barycentric_posvel",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y0p41_9g",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2cx2tf46",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "e1wdhl50",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g60wi9cz",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.solar_system",
                    "defaultValue": "astropy.coordinates.solar_system",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kmbyyos4",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v9zzcjp2",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "l4emkbt0",
            "name": "solar_system.get_moon",
            "description": ".. deprecated:: 5.3\n        The get_moon function is deprecated and may be removed in a future version.\n            Use get_body(\"moon\") instead.\n    \n    Get a `~astropy.coordinates.SkyCoord` for the Earth's Moon as observed\n    from a location on Earth in the `~astropy.coordinates.GCRS` reference\n    system.\n    \n    Parameters\n    ----------\n    time : `~astropy.time.Time`\n        Time of observation\n    location : `~astropy.coordinates.EarthLocation`\n        Location of observer on the Earth. If none is supplied, taken from\n        ``time`` (if not present, a geocentric observer will be assumed).\n    ephemeris : str, optional\n        Ephemeris to use.  If not given, use the one set with\n        ``astropy.coordinates.solar_system_ephemeris.set`` (which is\n        set to 'builtin' by default).\n    \n    Returns\n    -------\n    skycoord : `~astropy.coordinates.SkyCoord`\n        GCRS Coordinate for the Moon\n    \n    Notes\n    -----\n    The coordinate returned is the apparent position, which is the position of\n    the moon at time *t* minus the light travel time from the moon to the\n    observing *location*.\n    \n    You can either give an explicit ephemeris or use a default, which is normally\n        a built-in ephemeris that does not require ephemeris files.  To change\n        the default to be the JPL ephemeris::\n    \n            >>> from astropy.coordinates import solar_system_ephemeris\n            >>> solar_system_ephemeris.set('jpl')  # doctest: +SKIP\n    \n        Use of any JPL ephemeris requires the jplephem package\n        (https://pypi.org/project/jplephem/).\n        If needed, the ephemeris file will be downloaded (and cached).\n    \n        One can check which bodies are covered by a given ephemeris using::\n    \n            >>> solar_system_ephemeris.bodies\n            ('earth', 'sun', 'moon', 'mercury', 'venus', 'earth-moon-barycenter', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune')",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "017530ac45858beba80e77887d7101e6eaf09ac9f1bf2a31421243e1ef0ef383",
            "fields": [
                {
                    "id": "_yks0eyf",
                    "encoding": "",
                    "name": "time",
                    "value": "",
                    "defaultValue": "",
                    "description": "Time of observation",
                    "type": "astropy.time.Time",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pi9ouo6_",
                    "encoding": "",
                    "name": "location",
                    "value": "",
                    "defaultValue": "",
                    "description": "Location of observer on the Earth. If none is supplied, taken from\n``time`` (if not present, a geocentric observer will be assumed).",
                    "type": "astropy.coordinates.EarthLocation",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rykc67i0",
                    "encoding": "",
                    "name": "ephemeris",
                    "value": "",
                    "defaultValue": "",
                    "description": "Ephemeris to use.  If not given, use the one set with\n``astropy.coordinates.solar_system_ephemeris.set`` (which is\nset to 'builtin' by default).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e9jy4fs3",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.solar_system.get_moon",
                    "defaultValue": "astropy.coordinates.solar_system.get_moon",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hznft0z0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nkhimo9d",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "lzqozks_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ox5kldta",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.solar_system",
                    "defaultValue": "astropy.coordinates.solar_system",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "co2flbzi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4mx40f19",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "t6k8akfs",
            "name": "solar_system_ephemeris.get",
            "description": "Get the current science state value.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e46ac94e0ff2be21e5285adae17d528a673d7e4efe7a7a3458d8ca4f6e680dbb",
            "fields": [
                {
                    "id": "yhjjr778",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.solar_system.solar_system_ephemeris.get",
                    "defaultValue": "astropy.coordinates.solar_system.solar_system_ephemeris.get",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zl1j_7ag",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1jg03eux",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "lav7xyao",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tet6f16n",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.solar_system.solar_system_ephemeris",
                    "defaultValue": "astropy.coordinates.solar_system.solar_system_ephemeris",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ed5tycx2",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3dzizrcv",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "f7g9vlal",
            "name": "solar_system_ephemeris.get_kernel",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "dce99c3cf9e35cc9584700fe73ec5da53d69f12e9b3ed9808c4f6e262ca42be9",
            "fields": [
                {
                    "id": "dp1cm4m4",
                    "encoding": "",
                    "name": "value",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ujxag9ye",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.solar_system.solar_system_ephemeris.get_kernel",
                    "defaultValue": "astropy.coordinates.solar_system.solar_system_ephemeris.get_kernel",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "abftraz5",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zrmrak2v",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "0kxe61nq",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_bnucw06",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.solar_system.solar_system_ephemeris",
                    "defaultValue": "astropy.coordinates.solar_system.solar_system_ephemeris",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fdqzkk5s",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pbovplbu",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fka2qx9y",
            "name": "solar_system_ephemeris.set",
            "description": "Set the current science state value.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "04ffe40feea28e6e3b612bd4c9f0b3c61e6bcc33c99979b5359d8856856be38d",
            "fields": [
                {
                    "id": "0xp5afzj",
                    "encoding": "",
                    "name": "value",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "73kzobhy",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.solar_system.solar_system_ephemeris.set",
                    "defaultValue": "astropy.coordinates.solar_system.solar_system_ephemeris.set",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s6bqebc0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0piw8cci",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6qi3wxat",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kecfqnt6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.solar_system.solar_system_ephemeris",
                    "defaultValue": "astropy.coordinates.solar_system.solar_system_ephemeris",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0wgiimce",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "smreg0rm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "vofv2ex1",
            "name": "solar_system_ephemeris.validate",
            "description": "Validate the value and convert it to its native type, if\n    necessary.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "960d8243b31ae8eb9b93e702776400dba736ab0c6b58c2a16dcd35a638b79026",
            "fields": [
                {
                    "id": "71edrvsb",
                    "encoding": "",
                    "name": "value",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1xhdpmjk",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.coordinates.solar_system.solar_system_ephemeris.validate",
                    "defaultValue": "astropy.coordinates.solar_system.solar_system_ephemeris.validate",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "smw98w0b",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "41pe87iz",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "rtqd_4ww",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vg0ruv_4",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.coordinates.solar_system.solar_system_ephemeris",
                    "defaultValue": "astropy.coordinates.solar_system.solar_system_ephemeris",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l_54uqom",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "soi98t7s",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}