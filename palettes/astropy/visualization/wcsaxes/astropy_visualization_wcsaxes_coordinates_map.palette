{
    "modelData": {
        "filePath": "astropy_visualization_wcsaxes_coordinates_map.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.5.5",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "wcsaxes",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "4980d19cecc5c92d44faffb59897c250ba2b681ce1b8f630d73ec190238e4d01",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1752679473.530879,
        "numLGNodes": 6
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "zi7fl3_b",
            "name": "CoordinatesMap.__init__",
            "description": "\nA container for coordinate helpers that represents a coordinate system.\n    \n    This object can be used to access coordinate helpers by index (like a list)\n    or by name (like a dictionary).\n    \n    Parameters\n    ----------\n    axes : :class:`~astropy.visualization.wcsaxes.WCSAxes`\n        The axes the coordinate map belongs to.\n    transform : `~matplotlib.transforms.Transform`, optional\n        The transform for the data.\n    coord_meta : dict, optional\n        A dictionary providing additional metadata. This should include the keys\n        ``type``, ``wrap``, and ``unit``. Each of these should be a list with as\n        many items as the dimension of the coordinate system. The ``type``\n        entries should be one of ``longitude``, ``latitude``, or ``scalar``, the\n        ``wrap`` entries should give, for the longitude, the angle at which the\n        coordinate wraps (and `None` otherwise), and the ``unit`` should give\n        the unit of the coordinates as :class:`~astropy.units.Unit` instances.\n        This can optionally also include a ``format_unit`` entry giving the\n        units to use for the tick labels (if not specified, this defaults to\n        ``unit``).\n    frame_class : type, optional\n        The class for the frame, which should be a subclass of\n        :class:`~astropy.visualization.wcsaxes.frame.BaseFrame`. The default is to use a\n        :class:`~astropy.visualization.wcsaxes.frame.RectangularFrame`\n    previous_frame_path : `~matplotlib.path.Path`, optional\n        When changing the WCS of the axes, the frame instance will change but\n        we might want to keep re-using the same underlying matplotlib\n        `~matplotlib.path.Path` - in that case, this can be passed to this\n        keyword argument.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "67f53553d68dc88d77a7f37f2cad7d9ee9727b17bb5b8c924daf53b4df276d5d",
            "fields": [
                {
                    "id": "rpw3cmfh",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to CoordinatesMap object",
                    "type": "Object:astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t1tsh3qj",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "The axes the coordinate map belongs to.",
                    "type": "class:astropy.visualization.wcsaxes.WCSAxes",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dw57wkvf",
                    "encoding": "",
                    "name": "transform",
                    "value": "",
                    "defaultValue": "",
                    "description": "The transform for the data.",
                    "type": "matplotlib.transforms.Transform",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "15jen9ua",
                    "encoding": "",
                    "name": "coord_meta",
                    "value": "",
                    "defaultValue": "",
                    "description": "A dictionary providing additional metadata. This should include the keys\n``type``, ``wrap``, and ``unit``. Each of these should be a list with as\nmany items as the dimension of the coordinate system. The ``type``\nentries should be one of ``longitude``, ``latitude``, or ``scalar``, the\n``wrap`` entries should give, for the longitude, the angle at which the\ncoordinate wraps (and `None` otherwise), and the ``unit`` should give\nthe unit of the coordinates as :class:`~astropy.units.Unit` instances.\nThis can optionally also include a ``format_unit`` entry giving the\nunits to use for the tick labels (if not specified, this defaults to\n``unit``).",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "36h6byyx",
                    "encoding": "",
                    "name": "frame_class",
                    "value": "abc.ABCMeta",
                    "defaultValue": "abc.ABCMeta",
                    "description": "The class for the frame, which should be a subclass of\n:class:`~astropy.visualization.wcsaxes.frame.BaseFrame`. The default is to use a\n:class:`~astropy.visualization.wcsaxes.frame.RectangularFrame`",
                    "type": "ABCMeta",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cyzsz7ql",
                    "encoding": "",
                    "name": "previous_frame_path",
                    "value": "",
                    "defaultValue": "",
                    "description": "When changing the WCS of the axes, the frame instance will change but\nwe might want to keep re-using the same underlying matplotlib\n`~matplotlib.path.Path` - in that case, this can be passed to this\nkeyword argument.",
                    "type": "matplotlib.path.Path",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jjl2wk4o",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.__init__",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ldh3rlk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ttibezdu",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "g77p1ip5",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hfukc8lo",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bdepl15l",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mjysmqex",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "je63yty9",
            "name": "CoordinatesMap.get_coord_range",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b2005496ca29da5bc6d5f59bdcc75abeebbbd0002ea42aad3c52478d73398193",
            "fields": [
                {
                    "id": "5igha8o0",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1ak9g43i",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.get_coord_range",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.get_coord_range",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dfztyw3v",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pl043mvk",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "puqpguff",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sid6rvqx",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "89nce1ee",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9zgsdr9x",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "s5c642k_",
            "name": "CoordinatesMap.grid",
            "description": "Plot gridlines for both coordinates.\n    \n    Standard matplotlib appearance options (color, alpha, etc.) can be\n    passed as keyword arguments.\n    \n    Parameters\n    ----------\n    draw_grid : bool\n        Whether to show the gridlines\n    grid_type : { 'lines' | 'contours' }\n        Whether to plot the contours by determining the grid lines in\n        world coordinates and then plotting them in world coordinates\n        (``'lines'``) or by determining the world coordinates at many\n        positions in the image and then drawing contours\n        (``'contours'``). The first is recommended for 2-d images, while\n        for 3-d (or higher dimensional) cubes, the ``'contours'`` option\n        is recommended. By default, 'lines' is used if the transform has\n        an inverse, otherwise 'contours' is used.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "be526a32707c55d4cc82bd1000958e35f6bb9ca782825c1a66afe1e3191d4b29",
            "fields": [
                {
                    "id": "8fki398e",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.grid object",
                    "type": "Object:astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v96ggzzm",
                    "encoding": "",
                    "name": "draw_grid",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether to show the gridlines",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gh6vtexm",
                    "encoding": "",
                    "name": "grid_type",
                    "value": "",
                    "defaultValue": "",
                    "description": "Whether to plot the contours by determining the grid lines in\nworld coordinates and then plotting them in world coordinates\n(``'lines'``) or by determining the world coordinates at many\npositions in the image and then drawing contours\n(``'contours'``). The first is recommended for 2-d images, while\nfor 3-d (or higher dimensional) cubes, the ``'contours'`` option\nis recommended. By default, 'lines' is used if the transform has\nan inverse, otherwise 'contours' is used.",
                    "type": "{ 'lines' | 'contours' }",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "79dj5idg",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mg32atu4",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.grid",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.grid",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "czfxm2q7",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "byfvgqo0",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "2nc9efdl",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ubay6pih",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_v2hj4z5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rivhpsm2",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "j8eo5eg1",
            "name": "CoordinatesMap.set_visible",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2f09064c003fd93d7c919c9e64fdaa7fa14b96716a12fa95c4ea756892bd5c36",
            "fields": [
                {
                    "id": "adhrkwhi",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "riob1ogn",
                    "encoding": "",
                    "name": "visibility",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0rlexq_w",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.set_visible",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap.set_visible",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "levmhn6i",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_dxgzemd",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5yrheapu",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "96ej8cn8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.CoordinatesMap",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a7kit5rh",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x7qezy_9",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "dqgmy6fp",
            "name": "coordinates_map.find_coordinate_range",
            "description": "Find the range of coordinates to use for ticks/grids.\n    \n    Parameters\n    ----------\n    transform : func\n        Function to transform pixel to world coordinates. Should take two\n        values (the pixel coordinates) and return two values (the world\n        coordinates).\n    extent : iterable\n        The range of the image viewport in pixel coordinates, given as [xmin,\n        xmax, ymin, ymax].\n    coord_types : list of str\n        Whether each coordinate is a ``'longitude'``, ``'latitude'``, or\n        ``'scalar'`` value.\n    coord_units : list of `astropy.units.Unit`\n        The units for each coordinate.\n    coord_wraps : list of `astropy.units.Quantity`\n        The wrap angles for longitudes.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "86a006d79f376fbe6a5c490c137240ff997fb142baa26624836acd5ffabf9c30",
            "fields": [
                {
                    "id": "1s05to4t",
                    "encoding": "",
                    "name": "transform",
                    "value": "",
                    "defaultValue": "",
                    "description": "Function to transform pixel to world coordinates. Should take two\nvalues (the pixel coordinates) and return two values (the world\ncoordinates).",
                    "type": "func",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vqzx75pn",
                    "encoding": "",
                    "name": "extent",
                    "value": "",
                    "defaultValue": "",
                    "description": "The range of the image viewport in pixel coordinates, given as [xmin,\nxmax, ymin, ymax].",
                    "type": "iterable",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_ywg56rq",
                    "encoding": "",
                    "name": "coord_types",
                    "value": "",
                    "defaultValue": "",
                    "description": "Whether each coordinate is a ``'longitude'``, ``'latitude'``, or\n``'scalar'`` value.",
                    "type": "list of str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3y7vunj5",
                    "encoding": "",
                    "name": "coord_units",
                    "value": "",
                    "defaultValue": "",
                    "description": "The units for each coordinate.",
                    "type": "list of astropy.units.Unit",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5hm48s2q",
                    "encoding": "",
                    "name": "coord_wraps",
                    "value": "",
                    "defaultValue": "",
                    "description": "The wrap angles for longitudes.",
                    "type": "list of astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fwpit7o6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.find_coordinate_range",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.find_coordinate_range",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_v_a4pqn",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b_3v4py_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "mzdmiuv7",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mhakgapa",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yv3a1qto",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nxsnjiqf",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "_lapj23p",
            "name": "coordinates_map.indent",
            "description": "Adds 'prefix' to the beginning of selected lines in 'text'.\n    \n    If 'predicate' is provided, 'prefix' will only be added to the lines\n    where 'predicate(line)' is True. If 'predicate' is not provided,\n    it will default to adding 'prefix' to all non-empty lines that do not\n    consist solely of whitespace characters.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8bb372dbb9829cada8b3893842b8676209f4a19bbe56259c2a75f1c178998ee3",
            "fields": [
                {
                    "id": "95d09vzf",
                    "encoding": "",
                    "name": "text",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4oo7opuo",
                    "encoding": "",
                    "name": "prefix",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2r7mttro",
                    "encoding": "",
                    "name": "predicate",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rk3nkk_n",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map.indent",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map.indent",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aidiy2ji",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qaaqnqik",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "unkuufze",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wnmg2hp4",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.visualization.wcsaxes.coordinates_map",
                    "defaultValue": "astropy.visualization.wcsaxes.coordinates_map",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4i2cfncb",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bcyofm8i",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}