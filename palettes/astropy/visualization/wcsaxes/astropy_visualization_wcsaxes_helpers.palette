{
    "modelData": {
        "filePath": "astropy_visualization_wcsaxes_helpers.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "Helpers functions for different kinds of WCSAxes instances.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.5.5",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "wcsaxes",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "9e5dc4960dd1a45f5e2b551d38315c05dffe75c381475ba869f462575c0ea89d",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1752679474.165856,
        "numLGNodes": 2
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "nzda3nkr",
            "name": "helpers.add_beam",
            "description": "Display the beam shape and size.\n    \n    Parameters\n    ----------\n    ax : :class:`~astropy.visualization.wcsaxes.WCSAxes`\n        WCSAxes instance in which the beam shape and size is displayed. The WCS\n        must be celestial.\n    header : :class:`~astropy.io.fits.Header`, optional\n        Header containing the beam parameters. If specified, the ``BMAJ``,\n        ``BMIN``, and ``BPA`` keywords will be searched in the FITS header\n        to set the major and minor axes and the position angle on the sky.\n    major : float or :class:`~astropy.units.Quantity`, optional\n        Major axis of the beam in degrees or an angular quantity.\n    minor : float, or :class:`~astropy.units.Quantity`, optional\n        Minor axis of the beam in degrees or an angular quantity.\n    angle : float or :class:`~astropy.units.Quantity`, optional\n        Position angle of the beam on the sky in degrees or an angular\n        quantity in the anticlockwise direction.\n    corner : str, optional\n        The beam location. Acceptable values are ``'left'``, ``'right'``,\n        ``'top'``, 'bottom', ``'top left'``, ``'top right'``, ``'bottom left'``\n        (default), and ``'bottom right'``.\n    frame : bool, optional\n        Whether to display a frame behind the beam (default is ``False``).\n    borderpad : float, optional\n        Border padding, in fraction of the font size. Default is 0.4.\n    pad : float, optional\n        Padding around the beam, in fraction of the font size. Default is 0.5.\n    kwargs\n        Additional arguments are passed to :class:`matplotlib.patches.Ellipse`.\n    \n    Notes\n    -----\n    This function may be inaccurate when:\n    \n    - The pixel scales at the reference pixel are different from the pixel scales\n      within the image extent (e.g., when the reference pixel is well outside of\n      the image extent and the projection is non-linear)\n    - The pixel scales in the two directions are very different from each other\n      (e.g., rectangular pixels)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "967ff88f5df64f7bc7e0a9b77f1fadf51b38e742296376d23f3501b5501de536",
            "fields": [
                {
                    "id": "jq141br1",
                    "encoding": "",
                    "name": "ax",
                    "value": "",
                    "defaultValue": "",
                    "description": "WCSAxes instance in which the beam shape and size is displayed. The WCS\nmust be celestial.",
                    "type": "class:astropy.visualization.wcsaxes.WCSAxes",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zo3qdzr9",
                    "encoding": "",
                    "name": "header",
                    "value": "",
                    "defaultValue": "",
                    "description": "Header containing the beam parameters. If specified, the ``BMAJ``,\n``BMIN``, and ``BPA`` keywords will be searched in the FITS header\nto set the major and minor axes and the position angle on the sky.",
                    "type": "class:astropy.io.fits.Header",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bemlmhx8",
                    "encoding": "",
                    "name": "major",
                    "value": "",
                    "defaultValue": "",
                    "description": "Major axis of the beam in degrees or an angular quantity.",
                    "type": "float or :class:astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4aai9e94",
                    "encoding": "",
                    "name": "minor",
                    "value": "",
                    "defaultValue": "",
                    "description": "Minor axis of the beam in degrees or an angular quantity.",
                    "type": "float, or :class:astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4sl0xdgh",
                    "encoding": "",
                    "name": "angle",
                    "value": "",
                    "defaultValue": "",
                    "description": "Position angle of the beam on the sky in degrees or an angular\nquantity in the anticlockwise direction.",
                    "type": "float or :class:astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r8lv5_83",
                    "encoding": "",
                    "name": "corner",
                    "value": "bottom left",
                    "defaultValue": "bottom left",
                    "description": "The beam location. Acceptable values are ``'left'``, ``'right'``,\n``'top'``, 'bottom', ``'top left'``, ``'top right'``, ``'bottom left'``\n(default), and ``'bottom right'``.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "td9y0hkd",
                    "encoding": "",
                    "name": "frame",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to display a frame behind the beam (default is ``False``).",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jcuiynep",
                    "encoding": "",
                    "name": "borderpad",
                    "value": 0.4,
                    "defaultValue": 0.4,
                    "description": "Border padding, in fraction of the font size. Default is 0.4.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lmuqkq7m",
                    "encoding": "",
                    "name": "pad",
                    "value": 0.5,
                    "defaultValue": 0.5,
                    "description": "Padding around the beam, in fraction of the font size. Default is 0.5.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "egy1qekj",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "Additional arguments are passed to :class:`matplotlib.patches.Ellipse`.",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1zudum0_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.visualization.wcsaxes.helpers.add_beam",
                    "defaultValue": "astropy.visualization.wcsaxes.helpers.add_beam",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k_yrz8uo",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xfw5yrgs",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ou0mp0ht",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_r1kln81",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.visualization.wcsaxes.helpers",
                    "defaultValue": "astropy.visualization.wcsaxes.helpers",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qldn43q1",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fv4vzi05",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "xc5bgyhj",
            "name": "helpers.add_scalebar",
            "description": "Add a scale bar.\n    \n    Parameters\n    ----------\n    ax : :class:`~astropy.visualization.wcsaxes.WCSAxes`\n        WCSAxes instance in which the scale bar is displayed. The WCS must be\n        celestial.\n    length : float or :class:`~astropy.units.Quantity`\n        The length of the scalebar in degrees or an angular quantity\n    label : str, optional\n        Label to place below the scale bar\n    corner : str, optional\n        Where to place the scale bar. Acceptable values are:, ``'left'``,\n        ``'right'``, ``'top'``, ``'bottom'``, ``'top left'``, ``'top right'``,\n        ``'bottom left'`` and ``'bottom right'`` (default)\n    frame : bool, optional\n        Whether to display a frame behind the scale bar (default is ``False``)\n    borderpad : float, optional\n        Border padding, in fraction of the font size. Default is 0.4.\n    pad : float, optional\n        Padding around the scale bar, in fraction of the font size. Default is 0.5.\n    kwargs\n        Additional arguments are passed to\n        :class:`mpl_toolkits.axes_grid1.anchored_artists.AnchoredSizeBar`.\n    \n    Notes\n    -----\n    This function may be inaccurate when:\n    \n    - The pixel scales at the reference pixel are different from the pixel scales\n      within the image extent (e.g., when the reference pixel is well outside of\n      the image extent and the projection is non-linear)\n    - The pixel scales in the two directions are very different from each other\n      (e.g., rectangular pixels)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2e5c828525ee48dcb832404bf1b038b71ff294facf4f1e340b7dfe0d6a8fce3d",
            "fields": [
                {
                    "id": "vezc4chv",
                    "encoding": "",
                    "name": "ax",
                    "value": "",
                    "defaultValue": "",
                    "description": "WCSAxes instance in which the scale bar is displayed. The WCS must be\ncelestial.",
                    "type": "class:astropy.visualization.wcsaxes.WCSAxes",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "642zdl_e",
                    "encoding": "",
                    "name": "length",
                    "value": "",
                    "defaultValue": "",
                    "description": "The length of the scalebar in degrees or an angular quantity",
                    "type": "float or :class:astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wjw8l545",
                    "encoding": "",
                    "name": "label",
                    "value": "",
                    "defaultValue": "",
                    "description": "Label to place below the scale bar",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q93flold",
                    "encoding": "",
                    "name": "corner",
                    "value": "bottom right",
                    "defaultValue": "bottom right",
                    "description": "Where to place the scale bar. Acceptable values are:, ``'left'``,\n``'right'``, ``'top'``, ``'bottom'``, ``'top left'``, ``'top right'``,\n``'bottom left'`` and ``'bottom right'`` (default)",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7yovriee",
                    "encoding": "",
                    "name": "frame",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to display a frame behind the scale bar (default is ``False``)",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vbo_a61x",
                    "encoding": "",
                    "name": "borderpad",
                    "value": 0.4,
                    "defaultValue": 0.4,
                    "description": "Border padding, in fraction of the font size. Default is 0.4.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i48cotjf",
                    "encoding": "",
                    "name": "pad",
                    "value": 0.5,
                    "defaultValue": 0.5,
                    "description": "Padding around the scale bar, in fraction of the font size. Default is 0.5.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sq3lumun",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "Additional arguments are passed to\n:class:`mpl_toolkits.axes_grid1.anchored_artists.AnchoredSizeBar`.",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3v_tcpcs",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.visualization.wcsaxes.helpers.add_scalebar",
                    "defaultValue": "astropy.visualization.wcsaxes.helpers.add_scalebar",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rnswblki",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e_wfqiyo",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "1f_ei3gl",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ahlmlqoo",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.visualization.wcsaxes.helpers",
                    "defaultValue": "astropy.visualization.wcsaxes.helpers",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "46yglqvc",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hsw5e06v",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}