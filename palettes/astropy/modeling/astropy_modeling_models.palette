{
    "modelData": {
        "filePath": "astropy_modeling_models.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "Creates a common namespace for all pre-defined models.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.5.5",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "modeling",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "0e3178f58b764b080f1f04f8dfe20ba06ebecbff7b145d278f2ab5a83dff1878",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1752679403.355719,
        "numLGNodes": 4
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "g0vtk0e9",
            "name": "models.custom_model",
            "description": "Create a model from a user defined function. The inputs and parameters of\n    the model will be inferred from the arguments of the function.\n    \n    This can be used either as a function or as a decorator.  See below for\n    examples of both usages.\n    \n    The model is separable only if there is a single input.\n    \n    .. note::\n    \n        All model parameters have to be defined as keyword arguments with\n        default values in the model function.  Use `None` as a default argument\n        value if you do not want to have a default value for that parameter.\n    \n        The standard settable model properties can be configured by default\n        using keyword arguments matching the name of the property; however,\n        these values are not set as model \"parameters\". Moreover, users\n        cannot use keyword arguments matching non-settable model properties,\n        with the exception of ``n_outputs`` which should be set to the number of\n        outputs of your function.\n    \n    Parameters\n    ----------\n    func : function\n        Function which defines the model.  It should take N positional\n        arguments where ``N`` is dimensions of the model (the number of\n        independent variable in the model), and any number of keyword arguments\n        (the parameters).  It must return the value of the model (typically as\n        an array, but can also be a scalar for scalar inputs).  This\n        corresponds to the `~astropy.modeling.Model.evaluate` method.\n    fit_deriv : function, optional\n        Function which defines the Jacobian derivative of the model. I.e., the\n        derivative with respect to the *parameters* of the model.  It should\n        have the same argument signature as ``func``, but should return a\n        sequence where each element of the sequence is the derivative\n        with respect to the corresponding argument. This corresponds to the\n        :meth:`~astropy.modeling.FittableModel.fit_deriv` method.\n    \n    Examples\n    --------\n    Define a sinusoidal model function as a custom 1D model::\n    \n        >>> from astropy.modeling.models import custom_model\n        >>> import numpy as np\n        >>> def sine_model(x, amplitude=1., frequency=1.):\n        ...     return amplitude * np.sin(2 * np.pi * frequency * x)\n        >>> def sine_deriv(x, amplitude=1., frequency=1.):\n        ...     return 2 * np.pi * amplitude * np.cos(2 * np.pi * frequency * x)\n        >>> SineModel = custom_model(sine_model, fit_deriv=sine_deriv)\n    \n    Create an instance of the custom model and evaluate it::\n    \n        >>> model = SineModel()\n        >>> model(0.25)  # doctest: +FLOAT_CMP\n        1.0\n    \n    This model instance can now be used like a usual astropy model.\n    \n    The next example demonstrates a 2D Moffat function model, and also\n    demonstrates the support for docstrings (this example could also include\n    a derivative, but it has been omitted for simplicity)::\n    \n        >>> @custom_model\n        ... def Moffat2D(x, y, amplitude=1.0, x_0=0.0, y_0=0.0, gamma=1.0,\n        ...            alpha=1.0):\n        ...     \"\"\"Two dimensional Moffat function.\"\"\"\n        ...     rr_gg = ((x - x_0) ** 2 + (y - y_0) ** 2) / gamma ** 2\n        ...     return amplitude * (1 + rr_gg) ** (-alpha)\n        ...\n        >>> print(Moffat2D.__doc__)\n        Two dimensional Moffat function.\n        >>> model = Moffat2D()\n        >>> model(1, 1)  # doctest: +FLOAT_CMP\n        0.3333333333333333",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "988d2351846c5a5bb5fa58376e974467fde82eec8cdec17591c27f7f45a4c379",
            "fields": [
                {
                    "id": "agdcgjfj",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_00y2u_p",
                    "encoding": "",
                    "name": "fit_deriv",
                    "value": "",
                    "defaultValue": "",
                    "description": "Function which defines the Jacobian derivative of the model. I.e., the\nderivative with respect to the *parameters* of the model.  It should\nhave the same argument signature as ``func``, but should return a\nsequence where each element of the sequence is the derivative\nwith respect to the corresponding argument. This corresponds to the\n:meth:`~astropy.modeling.FittableModel.fit_deriv` method.",
                    "type": "function",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d44jt4sh",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.modeling.models.custom_model",
                    "defaultValue": "astropy.modeling.models.custom_model",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6b4jkn4m",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yi7qis3m",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "egkd6afe",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_09q2tap",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.modeling.models",
                    "defaultValue": "astropy.modeling.models",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r5vnd_eg",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "un1g9_pn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "96n4pkk_",
            "name": "models.fix_inputs",
            "description": "This function creates a compound model with one or more of the input\n    values of the input model assigned fixed values (scalar or array).\n    \n    Parameters\n    ----------\n    modelinstance : `~astropy.modeling.Model` instance\n        This is the model that one or more of the\n        model input values will be fixed to some constant value.\n    values : dict\n        A dictionary where the key identifies which input to fix\n        and its value is the value to fix it at. The key may either be the\n        name of the input or a number reflecting its order in the inputs.\n    \n    Examples\n    --------\n    >>> from astropy.modeling.models import Gaussian2D\n    >>> g = Gaussian2D(1, 2, 3, 4, 5)\n    >>> gv = fix_inputs(g, {0: 2.5})\n    \n    Results in a 1D function equivalent to Gaussian2D(1, 2, 3, 4, 5)(x=2.5, y)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b52bedeeb0cb0c9309e84957fae0347f7433a0b27dcd3bb443f9ad5bee22122a",
            "fields": [
                {
                    "id": "jf29zcn6",
                    "encoding": "",
                    "name": "modelinstance",
                    "value": "",
                    "defaultValue": "",
                    "description": "This is the model that one or more of the\nmodel input values will be fixed to some constant value.",
                    "type": "astropy.modeling.Model instance",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l7sxp0qr",
                    "encoding": "",
                    "name": "values",
                    "value": "",
                    "defaultValue": "",
                    "description": "A dictionary where the key identifies which input to fix\nand its value is the value to fix it at. The key may either be the\nname of the input or a number reflecting its order in the inputs.",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hi8sozw1",
                    "encoding": "",
                    "name": "bounding_boxes",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t4ooqmld",
                    "encoding": "",
                    "name": "selector_args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qwe2_jts",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.modeling.models.fix_inputs",
                    "defaultValue": "astropy.modeling.models.fix_inputs",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qf1ivg81",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "juk_otft",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "oz2p3gb0",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "og3zpumz",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.modeling.models",
                    "defaultValue": "astropy.modeling.models",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t3uh_wfe",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tnrngp3e",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "80gru7c6",
            "name": "models.hide_inverse",
            "description": "This is a convenience function intended to disable automatic generation\n    of the inverse in compound models by disabling one of the constituent\n    model's inverse. This is to handle cases where user provided inverse\n    functions are not compatible within an expression.\n    \n    For example::\n    \n        compound_model.inverse = hide_inverse(m1) + m2 + m3\n    \n    This will insure that the defined inverse itself won't attempt to\n    build its own inverse, which would otherwise fail in this example\n    (e.g., m = m1 + m2 + m3 happens to raises an exception for this\n    reason.)\n    \n    Note that this permanently disables it. To prevent that either copy\n    the model or restore the inverse later.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "67d4ee4fda50851654ef73c86aed02940b34872582e3158dff687f2ca9cb429b",
            "fields": [
                {
                    "id": "ihc0rlvh",
                    "encoding": "",
                    "name": "model",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x4lqzf21",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.modeling.models.hide_inverse",
                    "defaultValue": "astropy.modeling.models.hide_inverse",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8amoj08r",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yd33_exj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "19p5wg3c",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a_g4s_u5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.modeling.models",
                    "defaultValue": "astropy.modeling.models",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ogo2mf1f",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l53zgn43",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "j9ax98i5",
            "name": "models.tabular_model",
            "description": "Make a ``Tabular`` model where ``n_inputs`` is\n    based on the dimension of the lookup_table.\n    \n    This model has to be further initialized and when evaluated\n    returns the interpolated values.\n    \n    Parameters\n    ----------\n    dim : int\n        Dimensions of the lookup table.\n    name : str\n        Name for the class.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from astropy.modeling.models import tabular_model\n    >>> tab = tabular_model(2, name='Tabular2D')\n    >>> print(tab)\n    <class 'astropy.modeling.tabular.Tabular2D'>\n    Name: Tabular2D\n    N_inputs: 2\n    N_outputs: 1\n    \n    Setting ``fill_value`` to `None` allows extrapolation.\n    \n    >>> points = ([1, 2, 3], [1, 2, 3])\n    >>> table = np.array([[3., 0., 0.],\n    ...                   [0., 2., 0.],\n    ...                   [0., 0., 0.]])\n    >>> model = tab(points, lookup_table=table, name='my_table',\n    ...             bounds_error=False, fill_value=None, method='nearest')\n    >>> xinterp = [0, 1, 1.5, 2.72, 3.14]\n    >>> model(xinterp, xinterp)  # doctest: +FLOAT_CMP\n    array([3., 3., 3., 0., 0.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "50d86cc0dfde7cdb026d5599f71a1fc2e840f0f31e3f6d8410aef015c83d4703",
            "fields": [
                {
                    "id": "acudxwj0",
                    "encoding": "",
                    "name": "dim",
                    "value": "",
                    "defaultValue": "",
                    "description": "Dimensions of the lookup table.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t9mkse2k",
                    "encoding": "",
                    "name": "name",
                    "value": "",
                    "defaultValue": "",
                    "description": "Name for the class.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p5k9g8al",
                    "encoding": "",
                    "name": "func_name",
                    "value": "astropy.modeling.models.tabular_model",
                    "defaultValue": "astropy.modeling.models.tabular_model",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3pgwrerg",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pllwu0_2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "i0d8ud4i",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "au67ram1",
                    "encoding": "",
                    "name": "base_name",
                    "value": "astropy.modeling.models",
                    "defaultValue": "astropy.modeling.models",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ukkgstfe",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uti27wyi",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}