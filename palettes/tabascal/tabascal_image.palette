{
    "modelData": {
        "filePath": "tabascal_image.palette",
        "fileType": "palette",
        "shortDescription": "",
        "detailedDescription": "",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE_test_repo",
        "eagleVersion": "",
        "eagleCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "tabascal",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "742d7bb2c7670c93fe0f672d177409e142a4a5f57d819d5643f9a6b6d738f477",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1733113205.488777,
        "numLGNodes": 25
    },
    "nodeDataArray": [
        {
            "category": "PythonApp",
            "id": "ax4uohdl",
            "name": "ENU_to_GEO",
            "description": "Convert a set of points in ENU co-ordinates to geographic coordinates i.e.\n    (latitude, longitude, elevation).\n    \n    Parameters\n    ----------\n    geo_ref: ndarray (3,)\n        The latitude, longitude and elevation, (lat,lon,elevation), of the\n        reference position i.e. ENU = (0,0,0).\n    enu: ndarray (n_ants, 3)\n        The ENU coordinates of each antenna. (East, North, Up).\n    \n    Returns\n    -------\n    geo_ants: ndarray (n_ant, 3)\n        The geographic coordinates, (lat,lon,elevation), of each antenna.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7addd622aec5939189f5350f685f0b0f4c25e35c5fdfaca9f51ab33b9c26c7ba",
            "fields": [
                {
                    "name": "geo_ref",
                    "value": null,
                    "defaultValue": null,
                    "description": "The latitude, longitude and elevation, (lat,lon,elevation), of the\nreference position i.e. ENU = (0,0,0).",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "ENU",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.ENU_to_GEO",
                    "defaultValue": "tabascal.dask.coordinates.ENU_to_GEO",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "ghoy67rt",
            "name": "ENU_to_ITRF",
            "description": "Calculate ITRF coordinates from ENU coordinates of antennas given the\n    latitude and longitude of the antenna array centre.\n    \n    Paramters\n    ---------\n    enu: Array (n_ant, 3)\n        The East, North, Up coordinates of each antenna.\n    lat: float\n        The latitude of the observer/telescope.\n    lon: float\n        The longitude of the observer/telescope.\n    el: float\n        The elevation of the observer/telescope.\n    \n    Returns\n    -------\n    itrf: Array (n_ant, 3)\n        The ITRF coordinates of the antennas.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e5b0e156470355a0515ada7545f9748813a3ec117690ca4d0eb26a17df3bb72f",
            "fields": [
                {
                    "name": "ENU",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "lat",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "lon",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "el",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.ENU_to_ITRF",
                    "defaultValue": "tabascal.dask.coordinates.ENU_to_ITRF",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "unoln9pk",
            "name": "GEO_to_XYZ",
            "description": "Convert geographic coordinates to an Earth Centred Inertial (ECI)\n    coordinate frame. This is different to ECEF as ECI remains fixed with the\n    celestial sphere whereas ECEF coordinates rotate w.r.t. the celestial\n    sphere. (0,0,0) is the Earth's centre of mass, +z points to the North Pole\n    and +x is in the plane of the Equator passing through the Meridian at t = 0\n    and +y is also in the plane of the Equator and passes through 90 degrees\n    East at t = 0. ECEF and ECI are aligned when t % T_s = 0.\n    \n    Parameters\n    ----------\n    geo: ndarray (n_time, 3)\n        The geographic coordinates, (lat,lon,elevation), at each point in time.\n    times: ndarray (n_time,)\n        The time of each position in seconds.\n    \n    Returns\n    -------\n    xyz: ndarray (n_time, 3)\n        The ECI coordinates at each time, (lat,lon,elevation), of each antenna.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "617460b0198e22e1e146c0cfa2ea45690f10ae9d9b1958036d644336992c5c48",
            "fields": [
                {
                    "name": "geo",
                    "value": null,
                    "defaultValue": null,
                    "description": "The geographic coordinates, (lat,lon,elevation), at each point in time.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "times",
                    "value": null,
                    "defaultValue": null,
                    "description": "The time of each position in seconds.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.GEO_to_XYZ",
                    "defaultValue": "tabascal.dask.coordinates.GEO_to_XYZ",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "sgdb_sk7",
            "name": "GEO_to_XYZ_vmap0",
            "description": "Convert geographic coordinates to an Earth Centred Inertial (ECI)\n    coordinate frame. This is different to ECEF as ECI remains fixed with the\n    celestial sphere whereas ECEF coordinates rotate w.r.t. the celestial\n    sphere. (0,0,0) is the Earth's centre of mass, +z points to the North Pole\n    and +x is in the plane of the Equator passing through the Meridian at t = 0\n    and +y is also in the plane of the Equator and passes through 90 degrees\n    East at t = 0. ECEF and ECI are aligned when t % T_s = 0.\n    \n    Parameters\n    ----------\n    geo: ndarray (n_src, n_time, 3)\n        The geographic coordinates, (lat,lon,elevation), at each point in time.\n    times: ndarray (n_time,)\n        The time of each position in seconds.\n    \n    Returns\n    -------\n    xyz: ndarray (n_src, n_time, 3)\n        The ECI coordinates at each time, (lat,lon,elevation), of each antenna.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2e11d5d959b3689ad495f15713688a386e16854ca8a69a076279626c79be0ed6",
            "fields": [
                {
                    "name": "geo",
                    "value": null,
                    "defaultValue": null,
                    "description": "The geographic coordinates, (lat,lon,elevation), at each point in time.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "times",
                    "value": null,
                    "defaultValue": null,
                    "description": "The time of each position in seconds.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.GEO_to_XYZ_vmap0",
                    "defaultValue": "tabascal.dask.coordinates.GEO_to_XYZ_vmap0",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "et8chobh",
            "name": "GEO_to_XYZ_vmap1",
            "description": "Convert geographic coordinates to an Earth Centred Inertial (ECI)\n    coordinate frame. This is different to ECEF as ECI remains fixed with the\n    celestial sphere whereas ECEF coordinates rotate w.r.t. the celestial\n    sphere. (0,0,0) is the Earth's centre of mass, +z points to the North Pole\n    and +x is in the plane of the Equator passing through the Meridian at t = 0\n    and +y is also in the plane of the Equator and passes through 90 degrees\n    East at t = 0. ECEF and ECI are aligned when t % T_s = 0.\n    \n    Parameters\n    ----------\n    geo: ndarray (n_time, n_ant, 3)\n        The geographic coordinates, (lat,lon,elevation), at each point in time.\n    times: ndarray (n_time,)\n        The time of each position in seconds.\n    \n    Returns\n    -------\n    xyz: ndarray (n_time, n_ant, 3)\n        The ECI coordinates at each time, (lat,lon,elevation), of each antenna.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a62781bcf89507287ae08982370e8ecc5a5187cf32e76086e6b1e60824621c1e",
            "fields": [
                {
                    "name": "geo",
                    "value": null,
                    "defaultValue": null,
                    "description": "The geographic coordinates, (lat,lon,elevation), at each point in time.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "times",
                    "value": null,
                    "defaultValue": null,
                    "description": "The time of each position in seconds.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.GEO_to_XYZ_vmap1",
                    "defaultValue": "tabascal.dask.coordinates.GEO_to_XYZ_vmap1",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "vy4e1r6i",
            "name": "ITRF_to_UVW",
            "description": "Calculate uvw coordinates from ITRF/ECEF coordinates,\n    source hour angle and declination. Use the Greenwich hour\n    angle when using true ITRF coordinates such as those produced\n    with 'enu_to_itrf' or provided in an MS file. Use local hour angle when using local 'xyz'\n    coordinates as defined in most radio interferometry textbooks\n    or those produced with 'enu_to_xyz_local'.\n    \n    Parameters\n    ----------\n    ITRF: Array (n_ant, 3)\n        Antenna positions in the ITRF frame in units of metres.\n    h0: Array (n_time,)\n        The hour angle of the target in decimal degrees.\n    dec: float\n        The declination of the target in decimal degrees.\n    \n    Returns\n    -------\n    uvw: Array (n_time, n_ant, 3)\n        The uvw coordinates of the antennas for a given observer\n        location, time and target (ra,dec).",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "444a8081bc4b127c643d04f6fa0499cf7f062ea24bebef3e5bca8eeaea628e4f",
            "fields": [
                {
                    "name": "itrf",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "h0",
                    "value": null,
                    "defaultValue": null,
                    "description": "The hour angle of the target in decimal degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dec",
                    "value": null,
                    "defaultValue": null,
                    "description": "The declination of the target in decimal degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.ITRF_to_UVW",
                    "defaultValue": "tabascal.dask.coordinates.ITRF_to_UVW",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "2k0icoba",
            "name": "ITRF_to_XYZ",
            "description": "Transform coordinates from the ITRF (ECEF) frame to an ECI frame that aligns with the celestial sphere.\n    \n    Parameters\n    ----------\n    itrf : Array (n_ant, 3)\n        ITRF coordinates in metres.\n    gsa : Array (n_time,)\n        Greenwich sidereal angle in degrees.\n    \n    Returns\n    -------\n    Array (n_time, n_ant, 3)\n        ECI coordinates in metres.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ee98d4311cda9b9275fd98a1543d732976cb9fd3a68e332afaf261a4c67270ef",
            "fields": [
                {
                    "name": "itrf",
                    "value": null,
                    "defaultValue": null,
                    "description": "ITRF coordinates in metres.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "gsa",
                    "value": null,
                    "defaultValue": null,
                    "description": "Greenwich sidereal angle in degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.ITRF_to_XYZ",
                    "defaultValue": "tabascal.dask.coordinates.ITRF_to_XYZ",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "jsfuata0",
            "name": "angular_separation",
            "description": "Calculate the angular separation between the pointing direction of each\n    antenna and the satellite source.\n    \n    Parameters\n    ----------\n    rfi_xyz: ndarray (n_src, n_time, 3)\n        Position of the RFI sources in ECEF reference frame over time. This\n        is the same frame as `ants_xyz`.\n    ants_xyz: ndarray (n_time, n_ant, 3)\n        Position of the antennas in ECEF reference frame over time.\n    ra: float\n        Right ascension of the pointing in decimal degrees.\n    dec: float\n        Declination of the pointing in decimal degrees.\n    \n    Returns\n    -------\n    angles: ndarray (n_src, n_time, n_ant)\n        Angular separation (in degrees) between the pointing direction and RFI source for each antenna.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2b93281f41dad42b799a9a8e4057b233933b33233081063237c64967a3b566f2",
            "fields": [
                {
                    "name": "rfi_xyz",
                    "value": null,
                    "defaultValue": null,
                    "description": "Position of the RFI sources in ECEF reference frame over time. This\nis the same frame as `ants_xyz`.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "ants_xyz",
                    "value": null,
                    "defaultValue": null,
                    "description": "Position of the antennas in ECEF reference frame over time.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "ra",
                    "value": null,
                    "defaultValue": null,
                    "description": "Right ascension of the pointing in decimal degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dec",
                    "value": null,
                    "defaultValue": null,
                    "description": "Declination of the pointing in decimal degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.angular_separation",
                    "defaultValue": "tabascal.dask.coordinates.angular_separation",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "ml19np3z",
            "name": "delayed",
            "description": "Wraps a function or object to produce a ``Delayed``.\n    \n    ``Delayed`` objects act as proxies for the object they wrap, but all\n    operations on them are done lazily by building up a dask graph internally.\n    \n    Parameters\n    ----------\n    obj : object\n        The function or object to wrap\n    name : Dask key, optional\n        The key to use in the underlying graph for the wrapped object. Defaults\n        to hashing content. Note that this only affects the name of the object\n        wrapped by this call to delayed, and *not* the output of delayed\n        function calls - for that use ``dask_key_name=`` as described below.\n    \n        .. note::\n    \n           Because this ``name`` is used as the key in task graphs, you should\n           ensure that it uniquely identifies ``obj``. If you'd like to provide\n           a descriptive name that is still unique, combine the descriptive name\n           with :func:`dask.base.tokenize` of the ``array_like``. See\n           :ref:`graphs` for more.\n    \n    pure : bool, optional\n        Indicates whether calling the resulting ``Delayed`` object is a pure\n        operation. If True, arguments to the call are hashed to produce\n        deterministic keys. If not provided, the default is to check the global\n        ``delayed_pure`` setting, and fallback to ``False`` if unset.\n    nout : int, optional\n        The number of outputs returned from calling the resulting ``Delayed``\n        object. If provided, the ``Delayed`` output of the call can be iterated\n        into ``nout`` objects, allowing for unpacking of results. By default\n        iteration over ``Delayed`` objects will error. Note, that ``nout=1``\n        expects ``obj`` to return a tuple of length 1, and consequently for\n        ``nout=0``, ``obj`` should return an empty tuple.\n    traverse : bool, optional\n        By default dask traverses builtin python collections looking for dask\n        objects passed to ``delayed``. For large collections this can be\n        expensive. If ``obj`` doesn't contain any dask objects, set\n        ``traverse=False`` to avoid doing this traversal.\n    \n    Examples\n    --------\n    Apply to functions to delay execution:\n    \n    >>> from dask import delayed\n    >>> def inc(x):\n    ...     return x + 1\n    \n    >>> inc(10)\n    11\n    \n    >>> x = delayed(inc, pure=True)(10)\n    >>> type(x) == Delayed\n    True\n    >>> x.compute()\n    11\n    \n    Can be used as a decorator:\n    \n    >>> @delayed(pure=True)\n    ... def add(a, b):\n    ...     return a + b\n    >>> add(1, 2).compute()\n    3\n    \n    ``delayed`` also accepts an optional keyword ``pure``. If False, then\n    subsequent calls will always produce a different ``Delayed``. This is\n    useful for non-pure functions (such as ``time`` or ``random``).\n    \n    >>> from random import random\n    >>> out1 = delayed(random, pure=False)()\n    >>> out2 = delayed(random, pure=False)()\n    >>> out1.key == out2.key\n    False\n    \n    If you know a function is pure (output only depends on the input, with no\n    global state), then you can set ``pure=True``. This will attempt to apply a\n    consistent name to the output, but will fallback on the same behavior of\n    ``pure=False`` if this fails.\n    \n    >>> @delayed(pure=True)\n    ... def add(a, b):\n    ...     return a + b\n    >>> out1 = add(1, 2)\n    >>> out2 = add(1, 2)\n    >>> out1.key == out2.key\n    True\n    \n    Instead of setting ``pure`` as a property of the callable, you can also set\n    it contextually using the ``delayed_pure`` setting. Note that this\n    influences the *call* and not the *creation* of the callable:\n    \n    >>> @delayed\n    ... def mul(a, b):\n    ...     return a * b\n    >>> import dask\n    >>> with dask.config.set(delayed_pure=True):\n    ...     print(mul(1, 2).key == mul(1, 2).key)\n    True\n    >>> with dask.config.set(delayed_pure=False):\n    ...     print(mul(1, 2).key == mul(1, 2).key)\n    False\n    \n    The key name of the result of calling a delayed object is determined by\n    hashing the arguments by default. To explicitly set the name, you can use\n    the ``dask_key_name`` keyword when calling the function:\n    \n    >>> add(1, 2)   # doctest: +SKIP\n    Delayed('add-3dce7c56edd1ac2614add714086e950f')\n    >>> add(1, 2, dask_key_name='three')\n    Delayed('three')\n    \n    Note that objects with the same key name are assumed to have the same\n    result. If you set the names explicitly you should make sure your key names\n    are different for different results.\n    \n    >>> add(1, 2, dask_key_name='three')\n    Delayed('three')\n    >>> add(2, 1, dask_key_name='three')\n    Delayed('three')\n    >>> add(2, 2, dask_key_name='four')\n    Delayed('four')\n    \n    ``delayed`` can also be applied to objects to make operations on them lazy:\n    \n    >>> a = delayed([1, 2, 3])\n    >>> isinstance(a, Delayed)\n    True\n    >>> a.compute()\n    [1, 2, 3]\n    \n    The key name of a delayed object is hashed by default if ``pure=True`` or\n    is generated randomly if ``pure=False`` (default).  To explicitly set the\n    name, you can use the ``name`` keyword. To ensure that the key is unique\n    you should include the tokenized value as well, or otherwise ensure that\n    it's unique:\n    \n    >>> from dask.base import tokenize\n    >>> data = [1, 2, 3]\n    >>> a = delayed(data, name='mylist-' + tokenize(data))\n    >>> a  # doctest: +SKIP\n    Delayed('mylist-55af65871cb378a4fa6de1660c3e8fb7')\n    \n    Delayed results act as a proxy to the underlying object. Many operators\n    are supported:\n    \n    >>> (a + [1, 2]).compute()\n    [1, 2, 3, 1, 2]\n    >>> a[1].compute()\n    2\n    \n    Method and attribute access also works:\n    \n    >>> a.count(2).compute()\n    1\n    \n    Note that if a method doesn't exist, no error will be thrown until runtime:\n    \n    >>> res = a.not_a_real_method() # doctest: +SKIP\n    >>> res.compute()  # doctest: +SKIP\n    AttributeError(\"'list' object has no attribute 'not_a_real_method'\")\n    \n    \"Magic\" methods (e.g. operators and attribute access) are assumed to be\n    pure, meaning that subsequent calls must return the same results. This\n    behavior is not overridable through the ``delayed`` call, but can be\n    modified using other ways as described below.\n    \n    To invoke an impure attribute or operator, you'd need to use it in a\n    delayed function with ``pure=False``:\n    \n    >>> class Incrementer:\n    ...     def __init__(self):\n    ...         self._n = 0\n    ...     @property\n    ...     def n(self):\n    ...         self._n += 1\n    ...         return self._n\n    ...\n    >>> x = delayed(Incrementer())\n    >>> x.n.key == x.n.key\n    True\n    >>> get_n = delayed(lambda x: x.n, pure=False)\n    >>> get_n(x).key == get_n(x).key\n    False\n    \n    In contrast, methods are assumed to be impure by default, meaning that\n    subsequent calls may return different results. To assume purity, set\n    ``pure=True``. This allows sharing of any intermediate values.\n    \n    >>> a.count(2, pure=True).key == a.count(2, pure=True).key\n    True\n    \n    As with function calls, method calls also respect the global\n    ``delayed_pure`` setting and support the ``dask_key_name`` keyword:\n    \n    >>> a.count(2, dask_key_name=\"count_2\")\n    Delayed('count_2')\n    >>> import dask\n    >>> with dask.config.set(delayed_pure=True):\n    ...     print(a.count(2).key == a.count(2).key)\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7731d58b4e733ae2992c8a871b1c61e1fb0b66c4de2ee94087dca0f667295f00",
            "fields": [
                {
                    "name": "obj",
                    "value": "__no__default__",
                    "defaultValue": "__no__default__",
                    "description": "The function or object to wrap",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "name",
                    "value": null,
                    "defaultValue": null,
                    "description": "The key to use in the underlying graph for the wrapped object. Defaults\nto hashing content. Note that this only affects the name of the object\nwrapped by this call to delayed, and *not* the output of delayed\nfunction calls - for that use ``dask_key_name=`` as described below.\n\n.. note::\n\n   Because this ``name`` is used as the key in task graphs, you should\n   ensure that it uniquely identifies ``obj``. If you'd like to provide\n   a descriptive name that is still unique, combine the descriptive name\n   with :func:`dask.base.tokenize` of the ``array_like``. See\n   :ref:`graphs` for more.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "pure",
                    "value": null,
                    "defaultValue": null,
                    "description": "Indicates whether calling the resulting ``Delayed`` object is a pure\noperation. If True, arguments to the call are hashed to produce\ndeterministic keys. If not provided, the default is to check the global\n``delayed_pure`` setting, and fallback to ``False`` if unset.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "nout",
                    "value": null,
                    "defaultValue": null,
                    "description": "The number of outputs returned from calling the resulting ``Delayed``\nobject. If provided, the ``Delayed`` output of the call can be iterated\ninto ``nout`` objects, allowing for unpacking of results. By default\niteration over ``Delayed`` objects will error. Note, that ``nout=1``\nexpects ``obj`` to return a tuple of length 1, and consequently for\n``nout=0``, ``obj`` should return an empty tuple.",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "traverse",
                    "value": true,
                    "defaultValue": true,
                    "description": "By default dask traverses builtin python collections looking for dask\nobjects passed to ``delayed``. For large collections this can be\nexpensive. If ``obj`` doesn't contain any dask objects, set\n``traverse=False`` to avoid doing this traversal.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "dask.delayed",
                    "defaultValue": "dask.delayed",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "dask.delayed.delayed",
                    "defaultValue": "dask.delayed.delayed",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "jwk2tv0g",
            "name": "orbit_vmap",
            "description": "Calculate orbital path of a satellite in perfect circular orbit.\n    \n    Parameters\n    ----------\n    times: ndarray (n_time,)\n        Times at which to evaluate the positions.\n    elevation: nd_array (n_orbits,)\n        Elevation/Altitude of the orbit in metres.\n    inclination: nd_array (n_orbits,)\n        Inclination angle of the orbit relative to the equatorial plane.\n    lon_asc_node: nd_array (n_orbits,)\n        Longitude of the ascending node of the orbit. This is the longitude of\n        when the orbit crosses the equator from the south to the north.\n    periapsis: nd_array (n_orbits,)\n        Perisapsis of the orbit. This is the angular starting point of the\n        orbit at t = 0.\n    \n    Returns\n    -------\n    positions: ndarray (n_orbits, n_time, 3)\n         The position vectors of the orbiting objects at each specified time.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0fd10211836b45edafb510aa02eea54fc3d6efdc52247751079eaf5045d5ec4e",
            "fields": [
                {
                    "name": "times",
                    "value": null,
                    "defaultValue": null,
                    "description": "Times at which to evaluate the positions.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "elevation",
                    "value": null,
                    "defaultValue": null,
                    "description": "Elevation/Altitude of the orbit in metres.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "inclination",
                    "value": null,
                    "defaultValue": null,
                    "description": "Inclination angle of the orbit relative to the equatorial plane.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "lon_asc_node",
                    "value": null,
                    "defaultValue": null,
                    "description": "Longitude of the ascending node of the orbit. This is the longitude of\nwhen the orbit crosses the equator from the south to the north.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "periapsis",
                    "value": null,
                    "defaultValue": null,
                    "description": "Perisapsis of the orbit. This is the angular starting point of the\norbit at t = 0.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.orbit_vmap",
                    "defaultValue": "tabascal.dask.coordinates.orbit_vmap",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "vuvezcji",
            "name": "radec_to_XYZ",
            "description": "Convert Right ascension and Declination to unit vector in ECI coordinates.\n    \n    Parameters\n    ----------\n    ra : ndarray (n_src,)\n        Right-ascension in degrees.\n    dec : ndarray (n_src,)\n        Declination in degrees.\n    \n    Returns\n    -------\n    xyz: ndarray (n_src, 3) or (3,)\n        The ECI coordinate unit vector of each source.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "acb49924119d187c90c9b1e37c4ff0f43210fb7d9a5d22668367f99a7974b49c",
            "fields": [
                {
                    "name": "ra",
                    "value": null,
                    "defaultValue": null,
                    "description": "Right-ascension in degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dec",
                    "value": null,
                    "defaultValue": null,
                    "description": "Declination in degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.radec_to_XYZ",
                    "defaultValue": "tabascal.dask.coordinates.radec_to_XYZ",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "5ks4qm0_",
            "name": "radec_to_lmn",
            "description": "Convert right-ascension and declination positions of a set of sources to\n    direction cosines.\n    \n    Parameters\n    ----------\n    ra : ndarray (n_src,)\n        Right-ascension in degrees.\n    dec : ndarray (n_src,)\n        Declination in degrees.\n    phase_centre : ndarray (2,)\n        The ra and dec coordinates of the phase centre in degrees.\n    \n    Returns\n    -------\n    lmn : ndarray (n_src, 3)\n        The direction cosines, (l,m,n), coordinates of each source.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "1d64068e8d7c56ccb3cc3cdcb6dfeff3cc22e8dd8aba9126cd197ee46a5f612b",
            "fields": [
                {
                    "name": "ra",
                    "value": null,
                    "defaultValue": null,
                    "description": "Right-ascension in degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dec",
                    "value": null,
                    "defaultValue": null,
                    "description": "Declination in degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "phase_centre",
                    "value": null,
                    "defaultValue": null,
                    "description": "The ra and dec coordinates of the phase centre in degrees.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.coordinates",
                    "defaultValue": "tabascal.dask.coordinates",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.coordinates.radec_to_lmn",
                    "defaultValue": "tabascal.dask.coordinates.radec_to_lmn",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "nvi74e0_",
            "name": "Pv_to_Sv",
            "description": "Convert emission power to received intensity in Jy. Assumes constant\n    power across the bandwidth.\n    \n    Parameters\n    ----------\n    Pv: ndarray (n_src, n_time, n_freq)\n        Specific emission power in W/Hz.\n    d: ndarray (n_src, n_time, n_ant)\n        Distances from source to receiving antennas in m.\n    \n    Returns\n    -------\n    Sv: ndarray (n_src, n_time, n_ant, n_freq)\n        Spectral flux density at the receiving antennas in Jy.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "057ef5ed50b35c4475c1092adf206b1efc683ac27149e83e8fc3438361e67c2d",
            "fields": [
                {
                    "name": "Pv",
                    "value": null,
                    "defaultValue": null,
                    "description": "Specific emission power in W/Hz.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "d",
                    "value": null,
                    "defaultValue": null,
                    "description": "Distances from source to receiving antennas in m.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.Pv_to_Sv",
                    "defaultValue": "tabascal.dask.interferometry.Pv_to_Sv",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "84bpramg",
            "name": "SEFD_to_noise_std",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5d159b71243209c16af93e27f5f2d302571ed7835459bdae5949f17dd2bf0b52",
            "fields": [
                {
                    "name": "SEFD",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "chan_width",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "t_int",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.SEFD_to_noise_std",
                    "defaultValue": "tabascal.dask.interferometry.SEFD_to_noise_std",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "yhymp6yb",
            "name": "add_noise",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "98445e78205cdd348abca6847854b1dd2000f76bea1177bdb1dff85381d7df69",
            "fields": [
                {
                    "name": "vis",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "noise_std",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "key",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.add_noise",
                    "defaultValue": "tabascal.dask.interferometry.add_noise",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "mwbq27sq",
            "name": "airy_beam",
            "description": "Calculate the primary beam voltage at a given angular distance from the\n    pointing direction. The beam intensity model is the Airy disk as\n    defined by the dish diameter. This is the same a the CASA default.\n    \n    Parameters\n    ----------\n    theta: (n_src, n_time, n_ant)\n        The angular separation (in degrees) between the pointing direction and the\n        source.\n    freqs: (n_freq,)\n        The frequencies at which to calculate the beam in Hz.\n    dish_d: float\n        The diameter of the dish in meters.\n    \n    Returns\n    -------\n    E: ndarray (n_src, n_time, n_ant, n_freq)\n        The beam voltage at each frequency.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "51cbc1fef16ce14e444ca3457c629b3d0a8d61fdd1dbb8c83db2bd5fcfca5746",
            "fields": [
                {
                    "name": "theta",
                    "value": null,
                    "defaultValue": null,
                    "description": "The angular separation (in degrees) between the pointing direction and the\nsource.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "freqs",
                    "value": null,
                    "defaultValue": null,
                    "description": "The frequencies at which to calculate the beam in Hz.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dish_d",
                    "value": null,
                    "defaultValue": null,
                    "description": "The diameter of the dish in meters.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.airy_beam",
                    "defaultValue": "tabascal.dask.interferometry.airy_beam",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "0nesrn8m",
            "name": "ants_to_bl",
            "description": "Calculate the complex gains for each baseline given the per antenna gains.\n    \n    Parameters\n    ----------\n    G: array_like (n_time, n_ant, n_freq)\n        Complex gains at each antenna over time.\n    a1: array_like (n_bl,)\n        Antenna 1 indexes, between 0 and n_ant-1.\n    a2: array_like (n_bl,)\n        Antenna 2 indexes, between 0 and n_ant-1.\n    \n    Returns\n    -------\n    G_bl: array_like (n_time, n_bl, n_freq)\n        Complex gains on each baseline over time.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cd5e5a03818d4fe37e88b0d281f0a765e378923ddd950ec157314a8f6680560b",
            "fields": [
                {
                    "name": "G",
                    "value": null,
                    "defaultValue": null,
                    "description": "Complex gains at each antenna over time.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "a1",
                    "value": null,
                    "defaultValue": null,
                    "description": "Antenna 1 indexes, between 0 and n_ant-1.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "a2",
                    "value": null,
                    "defaultValue": null,
                    "description": "Antenna 2 indexes, between 0 and n_ant-1.",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.ants_to_bl",
                    "defaultValue": "tabascal.dask.interferometry.ants_to_bl",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "byhfrqu0",
            "name": "apply_gains",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "379c25a9fc933072472fec5e86d2c704c3902d9b61443551663b7cde922d5559",
            "fields": [
                {
                    "name": "vis_ast",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "vis_rfi",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "gains",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "a1",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "a2",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.apply_gains",
                    "defaultValue": "tabascal.dask.interferometry.apply_gains",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "_05h5coh",
            "name": "astro_vis",
            "description": "Calculate visibilities from sources, uvw, lmn, and freqs.\n    \n    Parameters:\n    -----------\n    sources: da.Array (n_src, n_time, n_freq)\n        Array of point source intensities in Jy.\n    uvw: da.Array (ntime, n_bl, 3)\n        (u,v,w) coordinates of each baseline.\n    lmn: da.Array (n_src, 3)\n        (l,m,n) coordinate of each source.\n    freqs: da.Array (n_freq,)\n        Frequencies in Hz.\n    \n    Returns:\n    --------\n    vis: da.Array (n_time, n_bl, n_freq)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ce8f1c3fe7d504e7f2bf92ed222b1a0020009b902216f913619e9fb687a8c24b",
            "fields": [
                {
                    "name": "sources",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "uvw",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "lmn",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "freqs",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.astro_vis",
                    "defaultValue": "tabascal.dask.interferometry.astro_vis",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "h7hfygb0",
            "name": "astro_vis_exp",
            "description": "Calculate visibilities from sources, uvw, lmn, and freqs.\n    \n    Parameters:\n    -----------\n    sources: da.Array (n_src, n_time, n_freq)\n        Array of point source intensities in Jy.\n    shapes: array_like (n_src,)\n        Array of shape parameters for the exp sources. These are\n        assumed to be circular.\n    uvw: da.Array (ntime, n_bl, 3)\n        (u,v,w) coordinates of each baseline.\n    lmn: da.Array (n_src, 3)\n        (l,m,n) coordinate of each source.\n    freqs: da.Array (n_freq,)\n        Frequencies in Hz.\n    \n    Returns:\n    --------\n    vis: da.Array (n_time, n_bl, n_freq)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ffbf89b6b8835d02d67dd99ed74d5e2e3e7123bae7083ac4fa1a584942f12cf9",
            "fields": [
                {
                    "name": "sources",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "shapes",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "uvw",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "lmn",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "freqs",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.astro_vis_exp",
                    "defaultValue": "tabascal.dask.interferometry.astro_vis_exp",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "yoyxivr7",
            "name": "astro_vis_gauss",
            "description": "Calculate visibilities from sources, uvw, lmn, and freqs.\n    \n    Parameters:\n    -----------\n    sources: da.Array (n_src, n_time, n_freq)\n        Array of point source intensities in Jy.\n    shapes: array_like (n_src,)\n        Array of standard deviations of the gaussian shape sources. These are\n        assumed to be circular gaussians for now.\n    uvw: da.Array (ntime, n_bl, 3)\n        (u,v,w) coordinates of each baseline.\n    lmn: da.Array (n_src, 3)\n        (l,m,n) coordinate of each source.\n    freqs: da.Array (n_freq,)\n        Frequencies in Hz.\n    \n    Returns:\n    --------\n    vis: da.Array (n_time, n_bl, n_freq)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e3f008e9cbb2a37d7f5ef873b5a5ec7348d56cb936f3d6b7da5757c74b685c83",
            "fields": [
                {
                    "name": "sources",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "major",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "minor",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "pos_angle",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "uvw",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "lmn",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "freqs",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.astro_vis_gauss",
                    "defaultValue": "tabascal.dask.interferometry.astro_vis_gauss",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "3__l9x14",
            "name": "generate_gains",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "acb577db2f5242035e2d4766cb2a15e91134eda05cd19d021eb5a86651c04dbb",
            "fields": [
                {
                    "name": "G0_mean",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "G0_std",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "Gt_std_amp",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "Gt_std_phase",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "times",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "n_ant",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "n_freq",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "random_seed",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.generate_gains",
                    "defaultValue": "tabascal.dask.interferometry.generate_gains",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "l_0yr65e",
            "name": "int_sample_times",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5d39a57a4385c9c756448a518985b51096df5c50700df1889f49e523860fb083",
            "fields": [
                {
                    "name": "times",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "n_int_samples",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "int_time",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.int_sample_times",
                    "defaultValue": "tabascal.dask.interferometry.int_sample_times",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "y1mmsvqm",
            "name": "rfi_vis",
            "description": "Calculate visibilities from sources, uvw, lmn, and freqs.\n    \n    Parameters:\n    -----------\n    app_amplitude: da.Array (n_src, n_time, n_int, n_ant, n_freq)\n        Apparent amplitude of the sources at each antenna.\n    c_distances: da.Array (n_src, n_time, n_int, n_ant)\n        The phase corrected distances between the rfi sources and the antennas in metres.\n    freqs: da.Array (n_freq,)\n        Frequencies in Hz.\n    a1: da.Array (n_bl,)\n        Antenna 1 indexes, between 0 and n_ant-1.\n    a2: da.Array (n_bl,)\n        Antenna 2 indexes, between 0 and n_ant-1.\n    \n    Returns:\n    --------\n    vis: da.Array (n_time, n_bl, n_freq)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "1faadd08c8734fb4379ef0881c15f87dbe60ed46a68d88956d0db8990787e472",
            "fields": [
                {
                    "name": "app_amplitude",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "c_distances",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "freqs",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "a1",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "a2",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dask.array.core.Array",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.rfi_vis",
                    "defaultValue": "tabascal.dask.interferometry.rfi_vis",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "46ojnhy_",
            "name": "time_avg",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "acd1ff877cf873194b6e5d56d5c626344860745ec5495cc692b15ca639dccac8",
            "fields": [
                {
                    "name": "vis",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "n_int_samples",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "tabascal.dask.interferometry",
                    "defaultValue": "tabascal.dask.interferometry",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "tabascal.dask.interferometry.time_avg",
                    "defaultValue": "tabascal.dask.interferometry.time_avg",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}