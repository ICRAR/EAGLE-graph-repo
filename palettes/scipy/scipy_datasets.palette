{
    "modelData": {
        "filePath": "scipy_datasets.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "================================\nDatasets (:mod:`scipy.datasets`)\n================================\n\n.. currentmodule:: scipy.datasets\n\nDataset Methods\n===============\n\n.. autosummary::\n   :toctree: generated/\n\n   ascent\n   face\n   electrocardiogram\n\nUtility Methods\n===============\n\n.. autosummary::\n   :toctree: generated/\n\n   download_all    -- Download all the dataset files to specified path.\n   clear_cache     -- Clear cached dataset directory.\n\n\nUsage of Datasets\n=================\n\nSciPy dataset methods can be simply called as follows: ``'<dataset-name>()'``\nThis downloads the dataset files over the network once, and saves the cache,\nbefore returning a `numpy.ndarray` object representing the dataset.\n\nNote that the return data structure and data type might be different for\ndifferent dataset methods. For a more detailed example on usage, please look\ninto the particular dataset method documentation above.\n\n\nHow dataset retrieval and storage works\n=======================================\n\nSciPy dataset files are stored within individual GitHub repositories under the\nSciPy GitHub organization, following a naming convention as\n``'dataset-<name>'``, for example `scipy.datasets.face` files live at\nhttps://github.com/scipy/dataset-face.  The `scipy.datasets` submodule utilizes\nand depends on `Pooch <https://www.fatiando.org/pooch/latest/>`_, a Python\npackage built to simplify fetching data files. Pooch uses these repos to\nretrieve the respective dataset files when calling the dataset function.\n\nA registry of all the datasets, essentially a mapping of filenames with their\nSHA256 hash and repo urls are maintained, which Pooch uses to handle and verify\nthe downloads on function call. After downloading the dataset once, the files\nare saved in the system cache directory under ``'scipy-data'``.\n\nDataset cache locations may vary on different platforms.\n\nFor macOS::\n\n    '~/Library/Caches/scipy-data'\n\nFor Linux and other Unix-like platforms::\n\n    '~/.cache/scipy-data'  # or the value of the XDG_CACHE_HOME env var, if defined\n\nFor Windows::\n\n    'C:\\Users\\<user>\\AppData\\Local\\<AppAuthor>\\scipy-data\\Cache'\n\n\nIn environments with constrained network connectivity for various security\nreasons or on systems without continuous internet connections, one may manually\nload the cache of the datasets by placing the contents of the dataset repo in\nthe above mentioned cache directory to avoid fetching dataset errors without\nthe internet connectivity.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.3",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "scipy",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "e496e77652c40b88395d1fbe76ee7bd79ff9839e24496000baf1b16791df86de",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755100436.015054,
        "numLGNodes": 5
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "glm_csrc",
            "name": "datasets.ascent",
            "description": "Get an 8-bit grayscale bit-depth, 512 x 512 derived image for easy\n    use in demos.\n    \n    The image is derived from\n    https://pixnio.com/people/accent-to-the-top\n    \n    Parameters\n    ----------\n    None\n    \n    Returns\n    -------\n    ascent : ndarray\n       convenient image to use for testing and demonstration\n    \n    Examples\n    --------\n    >>> import scipy.datasets\n    >>> ascent = scipy.datasets.ascent()\n    >>> ascent.shape\n    (512, 512)\n    >>> ascent.max()\n    np.uint8(255)\n    \n    >>> import matplotlib.pyplot as plt\n    >>> plt.gray()\n    >>> plt.imshow(ascent)\n    >>> plt.show()",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ee1d03c49b1ec66db346624c62b584543d11fc6a57e65dd4d986ca1a42db956c",
            "fields": [
                {
                    "id": "j8935m0p",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.datasets.ascent",
                    "defaultValue": "scipy.datasets.ascent",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b91rc1yo",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eymv7fdl",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ytdbig94",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "019fbe0v",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.datasets",
                    "defaultValue": "scipy.datasets",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "agkgqeu9",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2eni34xa",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "1dp9zf4t",
            "name": "datasets.clear_cache",
            "description": "Cleans the scipy datasets cache directory.\n    \n    If a scipy.datasets method or a list/tuple of the same is\n    provided, then clear_cache removes all the data files\n    associated to the passed dataset method callable(s).\n    \n    By default, it removes all the cached data files.\n    \n    Parameters\n    ----------\n    datasets : callable or list/tuple of callable or None\n    \n    Examples\n    --------\n    >>> from scipy import datasets\n    >>> ascent_array = datasets.ascent()\n    >>> ascent_array.shape\n    (512, 512)\n    >>> datasets.clear_cache([datasets.ascent])\n    Cleaning the file ascent.dat for dataset ascent",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "bb26aacc9f311ee5eaea5ed460c9d77ca8ca26ca25de5c4729d0077b3c6cad42",
            "fields": [
                {
                    "id": "s2iclh45",
                    "encoding": "",
                    "name": "datasets",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "callable or list/tuple of callable or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ppc3adh",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.datasets.clear_cache",
                    "defaultValue": "scipy.datasets.clear_cache",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "srsoodby",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d56pqsx8",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "zh0fhpvt",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r_23kg6m",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.datasets",
                    "defaultValue": "scipy.datasets",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wtn0s0aj",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ahqt7gos",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "a37y9d02",
            "name": "datasets.download_all",
            "description": "Utility method to download all the dataset files\n    for `scipy.datasets` module.\n    \n    Parameters\n    ----------\n    path : str, optional\n        Directory path to download all the dataset files.\n        If None, default to the system cache_dir detected by pooch.\n    \n    Examples\n    --------\n    Download the datasets to the default cache location:\n    \n    >>> from scipy import datasets\n    >>> datasets.download_all()\n    \n    Download the datasets to the current directory:\n    \n    >>> datasets.download_all(\".\")",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2cf0c93b00fa68dbe496ae42952031ed2c2470e16ccb3a10146fb133e0d1dba1",
            "fields": [
                {
                    "id": "gzgfnh9g",
                    "encoding": "",
                    "name": "path",
                    "value": "",
                    "defaultValue": "",
                    "description": "Directory path to download all the dataset files.\nIf None, default to the system cache_dir detected by pooch.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s15k4ub_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.datasets.download_all",
                    "defaultValue": "scipy.datasets.download_all",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iw4c5pnt",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "undkkyvb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "xqegvbfh",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2bjnqm6h",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.datasets",
                    "defaultValue": "scipy.datasets",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d93_rcql",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1m_k8uw4",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "neu573ny",
            "name": "datasets.electrocardiogram",
            "description": "Load an electrocardiogram as an example for a 1-D signal.\n    \n    The returned signal is a 5 minute long electrocardiogram (ECG), a medical\n    recording of the heart's electrical activity, sampled at 360 Hz.\n    \n    Returns\n    -------\n    ecg : ndarray\n        The electrocardiogram in millivolt (mV) sampled at 360 Hz.\n    \n    Notes\n    -----\n    The provided signal is an excerpt (19:35 to 24:35) from the `record 208`_\n    (lead MLII) provided by the MIT-BIH Arrhythmia Database [1]_ on\n    PhysioNet [2]_. The excerpt includes noise induced artifacts, typical\n    heartbeats as well as pathological changes.\n    \n    .. _record 208: https://physionet.org/physiobank/database/html/mitdbdir/records.htm#208\n    \n    .. versionadded:: 1.1.0\n    \n    References\n    ----------\n    .. [1] Moody GB, Mark RG. The impact of the MIT-BIH Arrhythmia Database.\n           IEEE Eng in Med and Biol 20(3):45-50 (May-June 2001).\n           (PMID: 11446209); :doi:`10.13026/C2F305`\n    .. [2] Goldberger AL, Amaral LAN, Glass L, Hausdorff JM, Ivanov PCh,\n           Mark RG, Mietus JE, Moody GB, Peng C-K, Stanley HE. PhysioBank,\n           PhysioToolkit, and PhysioNet: Components of a New Research Resource\n           for Complex Physiologic Signals. Circulation 101(23):e215-e220;\n           :doi:`10.1161/01.CIR.101.23.e215`\n    \n    Examples\n    --------\n    >>> from scipy.datasets import electrocardiogram\n    >>> ecg = electrocardiogram()\n    >>> ecg\n    array([-0.245, -0.215, -0.185, ..., -0.405, -0.395, -0.385], shape=(108000,))\n    >>> ecg.shape, ecg.mean(), ecg.std()\n    ((108000,), -0.16510875, 0.5992473991177294)\n    \n    As stated the signal features several areas with a different morphology.\n    E.g., the first few seconds show the electrical activity of a heart in\n    normal sinus rhythm as seen below.\n    \n    >>> import numpy as np\n    >>> import matplotlib.pyplot as plt\n    >>> fs = 360\n    >>> time = np.arange(ecg.size) / fs\n    >>> plt.plot(time, ecg)\n    >>> plt.xlabel(\"time in s\")\n    >>> plt.ylabel(\"ECG in mV\")\n    >>> plt.xlim(9, 10.2)\n    >>> plt.ylim(-1, 1.5)\n    >>> plt.show()\n    \n    After second 16, however, the first premature ventricular contractions,\n    also called extrasystoles, appear. These have a different morphology\n    compared to typical heartbeats. The difference can easily be observed\n    in the following plot.\n    \n    >>> plt.plot(time, ecg)\n    >>> plt.xlabel(\"time in s\")\n    >>> plt.ylabel(\"ECG in mV\")\n    >>> plt.xlim(46.5, 50)\n    >>> plt.ylim(-2, 1.5)\n    >>> plt.show()\n    \n    At several points large artifacts disturb the recording, e.g.:\n    \n    >>> plt.plot(time, ecg)\n    >>> plt.xlabel(\"time in s\")\n    >>> plt.ylabel(\"ECG in mV\")\n    >>> plt.xlim(207, 215)\n    >>> plt.ylim(-2, 3.5)\n    >>> plt.show()\n    \n    Finally, examining the power spectrum reveals that most of the biosignal is\n    made up of lower frequencies. At 60 Hz the noise induced by the mains\n    electricity can be clearly observed.\n    \n    >>> from scipy.signal import welch\n    >>> f, Pxx = welch(ecg, fs=fs, nperseg=2048, scaling=\"spectrum\")\n    >>> plt.semilogy(f, Pxx)\n    >>> plt.xlabel(\"Frequency in Hz\")\n    >>> plt.ylabel(\"Power spectrum of the ECG in mV**2\")\n    >>> plt.xlim(f[[0, -1]])\n    >>> plt.show()",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "70dbf18f4f65f625feb28d751be7d25b7f33c3cc726f2f77d6664ad77cb3f415",
            "fields": [
                {
                    "id": "snfkbw3q",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.datasets.electrocardiogram",
                    "defaultValue": "scipy.datasets.electrocardiogram",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ofeoer1n",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fd9i258h",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "pvofcnmv",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1zo2zp8c",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.datasets",
                    "defaultValue": "scipy.datasets",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c73gy8yc",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hyc6pxkj",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fun4hn9q",
            "name": "datasets.face",
            "description": "Get a 1024 x 768, color image of a raccoon face.\n    \n    The image is derived from\n    https://pixnio.com/fauna-animals/raccoons/raccoon-procyon-lotor\n    \n    Parameters\n    ----------\n    gray : bool, optional\n        If True return 8-bit grey-scale image, otherwise return a color image\n    \n    Returns\n    -------\n    face : ndarray\n        image of a raccoon face\n    \n    Examples\n    --------\n    >>> import scipy.datasets\n    >>> face = scipy.datasets.face()\n    >>> face.shape\n    (768, 1024, 3)\n    >>> face.max()\n    np.uint8(255)\n    \n    >>> import matplotlib.pyplot as plt\n    >>> plt.gray()\n    >>> plt.imshow(face)\n    >>> plt.show()",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9ff8243809ea5876874af236df8170b36e4e0cb3d62b87c69dba34afbca7de2d",
            "fields": [
                {
                    "id": "zeyh7ju9",
                    "encoding": "",
                    "name": "gray",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True return 8-bit grey-scale image, otherwise return a color image",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "quubm9jn",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.datasets.face",
                    "defaultValue": "scipy.datasets.face",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "urzvf9nw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6z2_hk1m",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "d00d0f0a",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a7syzrpp",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.datasets",
                    "defaultValue": "scipy.datasets",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ltyq7a_y",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zwttmw3q",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}