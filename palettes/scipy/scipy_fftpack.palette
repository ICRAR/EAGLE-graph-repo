{
    "modelData": {
        "filePath": "scipy_fftpack.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "=========================================================\nLegacy discrete Fourier transforms (:mod:`scipy.fftpack`)\n=========================================================\n\n.. legacy::\n\n   New code should use :mod:`scipy.fft`.\n\nFast Fourier Transforms (FFTs)\n==============================\n\n.. autosummary::\n   :toctree: generated/\n\n   fft - Fast (discrete) Fourier Transform (FFT)\n   ifft - Inverse FFT\n   fft2 - 2-D FFT\n   ifft2 - 2-D inverse FFT\n   fftn - N-D FFT\n   ifftn - N-D inverse FFT\n   rfft - FFT of strictly real-valued sequence\n   irfft - Inverse of rfft\n   dct - Discrete cosine transform\n   idct - Inverse discrete cosine transform\n   dctn - N-D Discrete cosine transform\n   idctn - N-D Inverse discrete cosine transform\n   dst - Discrete sine transform\n   idst - Inverse discrete sine transform\n   dstn - N-D Discrete sine transform\n   idstn - N-D Inverse discrete sine transform\n\nDifferential and pseudo-differential operators\n==============================================\n\n.. autosummary::\n   :toctree: generated/\n\n   diff - Differentiation and integration of periodic sequences\n   tilbert - Tilbert transform:         cs_diff(x,h,h)\n   itilbert - Inverse Tilbert transform: sc_diff(x,h,h)\n   hilbert - Hilbert transform:         cs_diff(x,inf,inf)\n   ihilbert - Inverse Hilbert transform: sc_diff(x,inf,inf)\n   cs_diff - cosh/sinh pseudo-derivative of periodic sequences\n   sc_diff - sinh/cosh pseudo-derivative of periodic sequences\n   ss_diff - sinh/sinh pseudo-derivative of periodic sequences\n   cc_diff - cosh/cosh pseudo-derivative of periodic sequences\n   shift - Shift periodic sequences\n\nHelper functions\n================\n\n.. autosummary::\n   :toctree: generated/\n\n   fftshift - Shift the zero-frequency component to the center of the spectrum\n   ifftshift - The inverse of `fftshift`\n   fftfreq - Return the Discrete Fourier Transform sample frequencies\n   rfftfreq - DFT sample frequencies (for usage with rfft, irfft)\n   next_fast_len - Find the optimal length to zero-pad an FFT for speed\n\nNote that ``fftshift``, ``ifftshift`` and ``fftfreq`` are numpy functions\nexposed by ``fftpack``; importing them from ``numpy`` should be preferred.\n\nConvolutions (:mod:`scipy.fftpack.convolve`)\n============================================\n\n.. module:: scipy.fftpack.convolve\n\n.. autosummary::\n   :toctree: generated/\n\n   convolve\n   convolve_z\n   init_convolution_kernel\n   destroy_convolve_cache",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.3",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "scipy",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "e375e6add65a38d1354043d6beeee76a991c68b99b897ba60da96fb75d4b2c7d",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755100436.190507,
        "numLGNodes": 66
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "1fqg6y55",
            "name": "fftpack.cc_diff",
            "description": "Return (a,b)-cosh/cosh pseudo-derivative of a periodic sequence.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = cosh(j*a*2*pi/period)/cosh(j*b*2*pi/period) * x_j\n    \n    Parameters\n    ----------\n    x : array_like\n        The array to take the pseudo-derivative from.\n    a,b : float\n        Defines the parameters of the sinh/sinh pseudo-differential\n        operator.\n    period : float, optional\n        The period of the sequence x. Default is ``2*pi``.\n    \n    Returns\n    -------\n    cc_diff : ndarray\n        Pseudo-derivative of periodic sequence `x`.\n    \n    Notes\n    -----\n    ``cc_diff(cc_diff(x,a,b),b,a) == x``",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "308d0da1ae7d018715b504439d16a5a2d5447cafc46772721c7421264a31e7d1",
            "fields": [
                {
                    "id": "q3ha_8v1",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to take the pseudo-derivative from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_5w457d8",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kna70utv",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e08fz03t",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequence x. Default is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6s3m6ctv",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ak25i1ob",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.cc_diff",
                    "defaultValue": "scipy.fftpack.cc_diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mt5a2fac",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_a1cdrck",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "61cahbqy",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "shuhgehp",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l76ula8u",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c1vevsom",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "b2kmai7x",
            "name": "fftpack.cs_diff",
            "description": "Return (a,b)-cosh/sinh pseudo-derivative of a periodic sequence.\n    \n    If ``x_j`` and ``y_j`` are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = -sqrt(-1)*cosh(j*a*2*pi/period)/sinh(j*b*2*pi/period) * x_j\n      y_0 = 0\n    \n    Parameters\n    ----------\n    x : array_like\n        The array to take the pseudo-derivative from.\n    a, b : float\n        Defines the parameters of the cosh/sinh pseudo-differential\n        operator.\n    period : float, optional\n        The period of the sequence. Default period is ``2*pi``.\n    \n    Returns\n    -------\n    cs_diff : ndarray\n        Pseudo-derivative of periodic sequence `x`.\n    \n    Notes\n    -----\n    For even len(`x`), the Nyquist mode of `x` is taken as zero.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "75ded1718ae233bcc68d87d18990e7d167ee69c6302d0f80d5e9f31fd14057a0",
            "fields": [
                {
                    "id": "rymws4bh",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to take the pseudo-derivative from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_jslcksn",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8wccsos8",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pcye0g89",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequence. Default period is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e4jfud2h",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q5pd4tqh",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.cs_diff",
                    "defaultValue": "scipy.fftpack.cs_diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xi07ooym",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9ez2d5du",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vwee9i6a",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yi9fl8t2",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dxecalu3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tdvc7fow",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "wrwxh5ix",
            "name": "fftpack.dct",
            "description": "Return the Discrete Cosine Transform of arbitrary type sequence x.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DCT (see Notes). Default type is 2.\n    n : int, optional\n        Length of the transform.  If ``n < x.shape[axis]``, `x` is\n        truncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the dct is computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    idct : Inverse DCT\n    \n    Notes\n    -----\n    For a single dimension array ``x``, ``dct(x, norm='ortho')`` is equal to\n    MATLAB ``dct(x)``.\n    \n    There are, theoretically, 8 types of the DCT, only the first 4 types are\n    implemented in scipy. 'The' DCT generally refers to DCT type 2, and 'the'\n    Inverse DCT generally refers to DCT type 3.\n    \n    **Type I**\n    \n    There are several definitions of the DCT-I; we use the following\n    (for ``norm=None``)\n    \n    .. math::\n    \n       y_k = x_0 + (-1)^k x_{N-1} + 2 \\sum_{n=1}^{N-2} x_n \\cos\\left(\n       \\frac{\\pi k n}{N-1} \\right)\n    \n    If ``norm='ortho'``, ``x[0]`` and ``x[N-1]`` are multiplied by a scaling\n    factor of :math:`\\sqrt{2}`, and ``y[k]`` is multiplied by a scaling factor\n    ``f``\n    \n    .. math::\n    \n        f = \\begin{cases}\n         \\frac{1}{2}\\sqrt{\\frac{1}{N-1}} & \\text{if }k=0\\text{ or }N-1, \\\\\n         \\frac{1}{2}\\sqrt{\\frac{2}{N-1}} & \\text{otherwise} \\end{cases}\n    \n    .. versionadded:: 1.2.0\n       Orthonormalization in DCT-I.\n    \n    .. note::\n       The DCT-I is only supported for input size > 1.\n    \n    **Type II**\n    \n    There are several definitions of the DCT-II; we use the following\n    (for ``norm=None``)\n    \n    .. math::\n    \n       y_k = 2 \\sum_{n=0}^{N-1} x_n \\cos\\left(\\frac{\\pi k(2n+1)}{2N} \\right)\n    \n    If ``norm='ortho'``, ``y[k]`` is multiplied by a scaling factor ``f``\n    \n    .. math::\n       f = \\begin{cases}\n       \\sqrt{\\frac{1}{4N}} & \\text{if }k=0, \\\\\n       \\sqrt{\\frac{1}{2N}} & \\text{otherwise} \\end{cases}\n    \n    which makes the corresponding matrix of coefficients orthonormal\n    (``O @ O.T = np.eye(N)``).\n    \n    **Type III**\n    \n    There are several definitions, we use the following (for ``norm=None``)\n    \n    .. math::\n    \n       y_k = x_0 + 2 \\sum_{n=1}^{N-1} x_n \\cos\\left(\\frac{\\pi(2k+1)n}{2N}\\right)\n    \n    or, for ``norm='ortho'``\n    \n    .. math::\n    \n       y_k = \\frac{x_0}{\\sqrt{N}} + \\sqrt{\\frac{2}{N}} \\sum_{n=1}^{N-1} x_n\n       \\cos\\left(\\frac{\\pi(2k+1)n}{2N}\\right)\n    \n    The (unnormalized) DCT-III is the inverse of the (unnormalized) DCT-II, up\n    to a factor ``2N``. The orthonormalized DCT-III is exactly the inverse of\n    the orthonormalized DCT-II.\n    \n    **Type IV**\n    \n    There are several definitions of the DCT-IV; we use the following\n    (for ``norm=None``)\n    \n    .. math::\n    \n       y_k = 2 \\sum_{n=0}^{N-1} x_n \\cos\\left(\\frac{\\pi(2k+1)(2n+1)}{4N} \\right)\n    \n    If ``norm='ortho'``, ``y[k]`` is multiplied by a scaling factor ``f``\n    \n    .. math::\n    \n        f = \\frac{1}{\\sqrt{2N}}\n    \n    .. versionadded:: 1.2.0\n       Support for DCT-IV.\n    \n    References\n    ----------\n    .. [1] 'A Fast Cosine Transform in One and Two Dimensions', by J.\n           Makhoul, `IEEE Transactions on acoustics, speech and signal\n           processing` vol. 28(1), pp. 27-34,\n           :doi:`10.1109/TASSP.1980.1163351` (1980).\n    .. [2] Wikipedia, \"Discrete cosine transform\",\n           https://en.wikipedia.org/wiki/Discrete_cosine_transform\n    \n    Examples\n    --------\n    The Type 1 DCT is equivalent to the FFT (though faster) for real,\n    even-symmetrical inputs. The output is also real and even-symmetrical.\n    Half of the FFT input is used to generate half of the FFT output:\n    \n    >>> from scipy.fftpack import fft, dct\n    >>> import numpy as np\n    >>> fft(np.array([4., 3., 5., 10., 5., 3.])).real\n    array([ 30.,  -8.,   6.,  -2.,   6.,  -8.])\n    >>> dct(np.array([4., 3., 5., 10.]), 1)\n    array([ 30.,  -8.,   6.,  -2.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d28dc940db926a1669f411f47aec4ae4cf900b5ff7fc663cef5845d9aaf50d1b",
            "fields": [
                {
                    "id": "v0r3o83o",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ek45rjbg",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DCT (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yo8lm45o",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the transform.  If ``n < x.shape[axis]``, `x` is\ntruncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uh919ya4",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the dct is computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "txv7h1kw",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cl9lhh5x",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5x6194gz",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.dct",
                    "defaultValue": "scipy.fftpack.dct",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hhj7vu4j",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2q8x95f0",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "rd64i522",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z1rw4pob",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m7eca255",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v3v8dzfq",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "izy6r2m1",
            "name": "fftpack.dctn",
            "description": "Return multidimensional Discrete Cosine Transform along the specified axes.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DCT (see Notes). Default type is 2.\n    shape : int or array_like of ints or None, optional\n        The shape of the result. If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        Axes along which the DCT is computed.\n        The default is over all axes.\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    idctn : Inverse multidimensional DCT\n    \n    Notes\n    -----\n    For full details of the DCT types and normalization modes, as well as\n    references, see `dct`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import dctn, idctn\n    >>> rng = np.random.default_rng()\n    >>> y = rng.standard_normal((16, 16))\n    >>> np.allclose(y, idctn(dctn(y, norm='ortho'), norm='ortho'))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "63e2efa805040d8064125654221ed8f1b730fc25e57847900828f40c0530d246",
            "fields": [
                {
                    "id": "58ocljax",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sogewbaz",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DCT (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o9ehkw53",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result. If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ibvtop1g",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes along which the DCT is computed.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5gbxmk75",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tvac3ybs",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v3g884dr",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.dctn",
                    "defaultValue": "scipy.fftpack.dctn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wug2qkk3",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xhahypye",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "dgc2wlxb",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hr22tztp",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w85_fh5s",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0rdyxt2e",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "b8xpiqp5",
            "name": "fftpack.diff",
            "description": "Return kth derivative (or integral) of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = pow(sqrt(-1)*j*2*pi/period, order) * x_j\n      y_0 = 0 if order is not 0.\n    \n    Parameters\n    ----------\n    x : array_like\n        Input array.\n    order : int, optional\n        The order of differentiation. Default order is 1. If order is\n        negative, then integration is carried out under the assumption\n        that ``x_0 == 0``.\n    period : float, optional\n        The assumed period of the sequence. Default is ``2*pi``.\n    \n    Notes\n    -----\n    If ``sum(x, axis=0) = 0`` then ``diff(diff(x, k), -k) == x`` (within\n    numerical accuracy).\n    \n    For odd order and even ``len(x)``, the Nyquist mode is taken zero.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b20bcfbef0f82c869cfb5d3c8f602582ecd71b1702363792cd9b73ef867b4b2f",
            "fields": [
                {
                    "id": "mrheb77o",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_cm0176n",
                    "encoding": "",
                    "name": "order",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "The order of differentiation. Default order is 1. If order is\nnegative, then integration is carried out under the assumption\nthat ``x_0 == 0``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "41b1kmgm",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The assumed period of the sequence. Default is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gpsplrl8",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gvjo1n52",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.diff",
                    "defaultValue": "scipy.fftpack.diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dvythkah",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "72aduyxd",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "umozqjmx",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "er1qxxff",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m6pv_a4s",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ucokjvkc",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "h5i3oxbp",
            "name": "fftpack.dst",
            "description": "Return the Discrete Sine Transform of arbitrary type sequence x.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DST (see Notes). Default type is 2.\n    n : int, optional\n        Length of the transform.  If ``n < x.shape[axis]``, `x` is\n        truncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the dst is computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    dst : ndarray of reals\n        The transformed input array.\n    \n    See Also\n    --------\n    idst : Inverse DST\n    \n    Notes\n    -----\n    For a single dimension array ``x``.\n    \n    There are, theoretically, 8 types of the DST for different combinations of\n    even/odd boundary conditions and boundary off sets [1]_, only the first\n    4 types are implemented in scipy.\n    \n    **Type I**\n    \n    There are several definitions of the DST-I; we use the following\n    for ``norm=None``. DST-I assumes the input is odd around `n=-1` and `n=N`.\n    \n    .. math::\n    \n        y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(k+1)(n+1)}{N+1}\\right)\n    \n    Note that the DST-I is only supported for input size > 1.\n    The (unnormalized) DST-I is its own inverse, up to a factor ``2(N+1)``.\n    The orthonormalized DST-I is exactly its own inverse.\n    \n    **Type II**\n    \n    There are several definitions of the DST-II; we use the following for\n    ``norm=None``. DST-II assumes the input is odd around `n=-1/2` and\n    `n=N-1/2`; the output is odd around :math:`k=-1` and even around `k=N-1`\n    \n    .. math::\n    \n        y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(k+1)(2n+1)}{2N}\\right)\n    \n    if ``norm='ortho'``, ``y[k]`` is multiplied by a scaling factor ``f``\n    \n    .. math::\n    \n        f = \\begin{cases}\n        \\sqrt{\\frac{1}{4N}} & \\text{if }k = 0, \\\\\n        \\sqrt{\\frac{1}{2N}} & \\text{otherwise} \\end{cases}\n    \n    **Type III**\n    \n    There are several definitions of the DST-III, we use the following (for\n    ``norm=None``). DST-III assumes the input is odd around `n=-1` and even\n    around `n=N-1`\n    \n    .. math::\n    \n        y_k = (-1)^k x_{N-1} + 2 \\sum_{n=0}^{N-2} x_n \\sin\\left(\n        \\frac{\\pi(2k+1)(n+1)}{2N}\\right)\n    \n    The (unnormalized) DST-III is the inverse of the (unnormalized) DST-II, up\n    to a factor ``2N``. The orthonormalized DST-III is exactly the inverse of the\n    orthonormalized DST-II.\n    \n    .. versionadded:: 0.11.0\n    \n    **Type IV**\n    \n    There are several definitions of the DST-IV, we use the following (for\n    ``norm=None``). DST-IV assumes the input is odd around `n=-0.5` and even\n    around `n=N-0.5`\n    \n    .. math::\n    \n        y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(2k+1)(2n+1)}{4N}\\right)\n    \n    The (unnormalized) DST-IV is its own inverse, up to a factor ``2N``. The\n    orthonormalized DST-IV is exactly its own inverse.\n    \n    .. versionadded:: 1.2.0\n       Support for DST-IV.\n    \n    References\n    ----------\n    .. [1] Wikipedia, \"Discrete sine transform\",\n           https://en.wikipedia.org/wiki/Discrete_sine_transform",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "acee9a072d3c7aa348498ca1496c18ab9780b2dc35406fcfcdea41ae9cd6e4c7",
            "fields": [
                {
                    "id": "hg6sov_r",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "unl6cd0g",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DST (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h_ntrdzs",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the transform.  If ``n < x.shape[axis]``, `x` is\ntruncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oordqrvh",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the dst is computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mijlxpev",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xbte2e6j",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cfz42bj6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.dst",
                    "defaultValue": "scipy.fftpack.dst",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "39kyekwa",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bzz938kg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "7krc_prv",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c4goog8r",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "580ayhuy",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3eti6582",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "jh43woxm",
            "name": "fftpack.dstn",
            "description": "Return multidimensional Discrete Sine Transform along the specified axes.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DST (see Notes). Default type is 2.\n    shape : int or array_like of ints or None, optional\n        The shape of the result.  If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        Axes along which the DCT is computed.\n        The default is over all axes.\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    idstn : Inverse multidimensional DST\n    \n    Notes\n    -----\n    For full details of the DST types and normalization modes, as well as\n    references, see `dst`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import dstn, idstn\n    >>> rng = np.random.default_rng()\n    >>> y = rng.standard_normal((16, 16))\n    >>> np.allclose(y, idstn(dstn(y, norm='ortho'), norm='ortho'))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f7786c79ccc52b31cd367291717296dfa725031d57607b2ba7b1e435ef7462e2",
            "fields": [
                {
                    "id": "eyr3vp66",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k_r8t33c",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DST (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8bpn4oaw",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result.  If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e3gbtpz_",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes along which the DCT is computed.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qtrl9oqp",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vtw7jk6f",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jnn7wkvq",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.dstn",
                    "defaultValue": "scipy.fftpack.dstn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v_4__6jt",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8_p1r5t9",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "38ac5p4n",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rl19wkjw",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tdwo1n1i",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aheo10hv",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "25fr7joz",
            "name": "fftpack.fft",
            "description": "Return discrete Fourier transform of real or complex sequence.\n    \n    The returned complex array contains ``y(0), y(1),..., y(n-1)``, where\n    \n    ``y(j) = (x * exp(-2*pi*sqrt(-1)*j*np.arange(n)/n)).sum()``.\n    \n    Parameters\n    ----------\n    x : array_like\n        Array to Fourier transform.\n    n : int, optional\n        Length of the Fourier transform. If ``n < x.shape[axis]``, `x` is\n        truncated. If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the fft's are computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    z : complex ndarray\n        with the elements::\n    \n            [y(0),y(1),..,y(n/2),y(1-n/2),...,y(-1)]        if n is even\n            [y(0),y(1),..,y((n-1)/2),y(-(n-1)/2),...,y(-1)]  if n is odd\n    \n        where::\n    \n            y(j) = sum[k=0..n-1] x[k] * exp(-sqrt(-1)*j*k* 2*pi/n), j = 0..n-1\n    \n    See Also\n    --------\n    ifft : Inverse FFT\n    rfft : FFT of a real sequence\n    \n    Notes\n    -----\n    The packing of the result is \"standard\": If ``A = fft(a, n)``, then\n    ``A[0]`` contains the zero-frequency term, ``A[1:n/2]`` contains the\n    positive-frequency terms, and ``A[n/2:]`` contains the negative-frequency\n    terms, in order of decreasingly negative frequency. So ,for an 8-point\n    transform, the frequencies of the result are [0, 1, 2, 3, -4, -3, -2, -1].\n    To rearrange the fft output so that the zero-frequency component is\n    centered, like [-4, -3, -2, -1,  0,  1,  2,  3], use `fftshift`.\n    \n    Both single and double precision routines are implemented. Half precision\n    inputs will be converted to single precision. Non-floating-point inputs\n    will be converted to double precision. Long-double precision inputs are\n    not supported.\n    \n    This function is most efficient when `n` is a power of two, and least\n    efficient when `n` is prime.\n    \n    Note that if ``x`` is real-valued, then ``A[j] == A[n-j].conjugate()``.\n    If ``x`` is real-valued and ``n`` is even, then ``A[n/2]`` is real.\n    \n    If the data type of `x` is real, a \"real FFT\" algorithm is automatically\n    used, which roughly halves the computation time. To increase efficiency\n    a little further, use `rfft`, which does the same calculation, but only\n    outputs half of the symmetrical spectrum. If the data is both real and\n    symmetrical, the `dct` can again double the efficiency by generating\n    half of the spectrum from half of the signal.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import fft, ifft\n    >>> x = np.arange(5)\n    >>> np.allclose(fft(ifft(x)), x, atol=1e-15)  # within numerical accuracy.\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9f5cff7c409ba5f391fd99cdcb48118d761749613dbfc13cf545e0b504bfaa96",
            "fields": [
                {
                    "id": "l9wws36k",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Array to Fourier transform.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3do4qpwn",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the Fourier transform. If ``n < x.shape[axis]``, `x` is\ntruncated. If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wlr464so",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the fft's are computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ue9wkvvu",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sgdi54p3",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.fft",
                    "defaultValue": "scipy.fftpack.fft",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h7nmtfrc",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pibg02qf",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "cmbcz0o3",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ame86u6i",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "66uppiuj",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hwq78tyx",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ctmv0v0n",
            "name": "fftpack.fft2",
            "description": "2-D discrete Fourier transform.\n    \n    Return the 2-D discrete Fourier transform of the 2-D argument\n    `x`.\n    \n    See Also\n    --------\n    fftn : for detailed information.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import fft2, ifft2\n    >>> y = np.mgrid[:5, :5][0]\n    >>> y\n    array([[0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1],\n           [2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4]])\n    >>> np.allclose(y, ifft2(fft2(y)))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "bd858cbc13cc9fade74693c905bb83be7ed2dcdcaeace9389363f0697fa7ced0",
            "fields": [
                {
                    "id": "xaum7cov",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iie29zri",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0741bpts",
                    "encoding": "",
                    "name": "axes",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "puf8y27_",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6177mo1a",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.fft2",
                    "defaultValue": "scipy.fftpack.fft2",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i9pv9o91",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "epyxnaer",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "bqgofgs9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ahcg4tx5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c74ck2l3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "abjax52_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ofqjqb3a",
            "name": "fftpack.fftfreq",
            "description": "Return the Discrete Fourier Transform sample frequencies.\n    \n    The returned float array `f` contains the frequency bin centers in cycles\n    per unit of the sample spacing (with zero at the start).  For instance, if\n    the sample spacing is in seconds, then the frequency unit is cycles/second.\n    \n    Given a window length `n` and a sample spacing `d`::\n    \n      f = [0, 1, ...,   n/2-1,     -n/2, ..., -1] / (d*n)   if n is even\n      f = [0, 1, ..., (n-1)/2, -(n-1)/2, ..., -1] / (d*n)   if n is odd\n    \n    Parameters\n    ----------\n    n : int\n        Window length.\n    d : scalar, optional\n        Sample spacing (inverse of the sampling rate). Defaults to 1.\n    device : str, optional\n        The device on which to place the created array. Default: ``None``.\n        For Array-API interoperability only, so must be ``\"cpu\"`` if passed.\n    \n        .. versionadded:: 2.0.0\n    \n    Returns\n    -------\n    f : ndarray\n        Array of length `n` containing the sample frequencies.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> signal = np.array([-2, 8, 6, 4, 1, 0, 3, 5], dtype=float)\n    >>> fourier = np.fft.fft(signal)\n    >>> n = signal.size\n    >>> timestep = 0.1\n    >>> freq = np.fft.fftfreq(n, d=timestep)\n    >>> freq\n    array([ 0.  ,  1.25,  2.5 , ..., -3.75, -2.5 , -1.25])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8ccf84e8038f49d35353fc24d907fc139ef6409ee3760052bb305d04d619df71",
            "fields": [
                {
                    "id": "gbwj3ij8",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Window length.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xs2reniw",
                    "encoding": "",
                    "name": "d",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "Sample spacing (inverse of the sampling rate). Defaults to 1.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ycgy26ag",
                    "encoding": "",
                    "name": "device",
                    "value": "",
                    "defaultValue": "",
                    "description": "The device on which to place the created array. Default: ``None``.\nFor Array-API interoperability only, so must be ``\"cpu\"`` if passed.\n\n.. versionadded:: 2.0.0",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_9_1havs",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.fftfreq",
                    "defaultValue": "scipy.fftpack.fftfreq",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3__6xdfl",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qhbe8hez",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "aw1w1u4h",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d0arm9ek",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k_1fitgf",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fuabqloe",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "k6k6cjfl",
            "name": "fftpack.fftn",
            "description": "Return multidimensional discrete Fourier transform.\n    \n    The returned array contains::\n    \n      y[j_1,..,j_d] = sum[k_1=0..n_1-1, ..., k_d=0..n_d-1]\n         x[k_1,..,k_d] * prod[i=1..d] exp(-sqrt(-1)*2*pi/n_i * j_i * k_i)\n    \n    where d = len(x.shape) and n = x.shape.\n    \n    Parameters\n    ----------\n    x : array_like\n        The (N-D) array to transform.\n    shape : int or array_like of ints or None, optional\n        The shape of the result. If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        The axes of `x` (`y` if `shape` is not None) along which the\n        transform is applied.\n        The default is over all axes.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed. Default is False.\n    \n    Returns\n    -------\n    y : complex-valued N-D NumPy array\n        The (N-D) DFT of the input array.\n    \n    See Also\n    --------\n    ifftn\n    \n    Notes\n    -----\n    If ``x`` is real-valued, then\n    ``y[..., j_i, ...] == y[..., n_i-j_i, ...].conjugate()``.\n    \n    Both single and double precision routines are implemented. Half precision\n    inputs will be converted to single precision. Non-floating-point inputs\n    will be converted to double precision. Long-double precision inputs are\n    not supported.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import fftn, ifftn\n    >>> y = (-np.arange(16), 8 - np.arange(16), np.arange(16))\n    >>> np.allclose(y, fftn(ifftn(y)))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d5d816d870188f365a78382a7ad618edb1185d5e3b24085e3fd99a11a346cd41",
            "fields": [
                {
                    "id": "yihsdvh7",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The (N-D) array to transform.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1p3v5xkx",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result. If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rmcx9a99",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "The axes of `x` (`y` if `shape` is not None) along which the\ntransform is applied.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sd7nqsh2",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed. Default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "it7__06u",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.fftn",
                    "defaultValue": "scipy.fftpack.fftn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bhxkpckk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gqvgakm_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "sg6pxxtk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ahngmsww",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bpwue6cc",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vi8qithe",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "cu8hvyse",
            "name": "fftpack.fftshift",
            "description": "Shift the zero-frequency component to the center of the spectrum.\n    \n    This function swaps half-spaces for all axes listed (defaults to all).\n    Note that ``y[0]`` is the Nyquist component only if ``len(x)`` is even.\n    \n    Parameters\n    ----------\n    x : array_like\n        Input array.\n    axes : int or shape tuple, optional\n        Axes over which to shift.  Default is None, which shifts all axes.\n    \n    Returns\n    -------\n    y : ndarray\n        The shifted array.\n    \n    See Also\n    --------\n    ifftshift : The inverse of `fftshift`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> freqs = np.fft.fftfreq(10, 0.1)\n    >>> freqs\n    array([ 0.,  1.,  2., ..., -3., -2., -1.])\n    >>> np.fft.fftshift(freqs)\n    array([-5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.])\n    \n    Shift the zero-frequency component only along the second axis:\n    \n    >>> freqs = np.fft.fftfreq(9, d=1./9).reshape(3, 3)\n    >>> freqs\n    array([[ 0.,  1.,  2.],\n           [ 3.,  4., -4.],\n           [-3., -2., -1.]])\n    >>> np.fft.fftshift(freqs, axes=(1,))\n    array([[ 2.,  0.,  1.],\n           [-4.,  3.,  4.],\n           [-1., -3., -2.]])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4167c6cc4c63ba70888bd1882dc75dc629f549bb8c1f77c3bf6334c6d6dd438b",
            "fields": [
                {
                    "id": "vr6fk6p7",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o0vuxtbx",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes over which to shift.  Default is None, which shifts all axes.",
                    "type": "int or shape tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b14k8dvd",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.fftshift",
                    "defaultValue": "scipy.fftpack.fftshift",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "734zlp2x",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "93menfy4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "x2g53ag0",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5j8eeh67",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "blsbmhi8",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9kszei34",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "vmq6bw5b",
            "name": "fftpack.hilbert",
            "description": "Return Hilbert transform of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = sqrt(-1)*sign(j) * x_j\n      y_0 = 0\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array, should be periodic.\n    _cache : dict, optional\n        Dictionary that contains the kernel used to do a convolution with.\n    \n    Returns\n    -------\n    y : ndarray\n        The transformed input.\n    \n    See Also\n    --------\n    scipy.signal.hilbert : Compute the analytic signal, using the Hilbert\n                           transform.\n    \n    Notes\n    -----\n    If ``sum(x, axis=0) == 0`` then ``hilbert(ihilbert(x)) == x``.\n    \n    For even len(x), the Nyquist mode of x is taken zero.\n    \n    The sign of the returned transform does not have a factor -1 that is more\n    often than not found in the definition of the Hilbert transform. Note also\n    that `scipy.signal.hilbert` does have an extra -1 factor compared to this\n    function.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6afd0b01965281f8458e0a07f7f4c542f6fc85c5d53e0bf0b7714e87dcdbec0d",
            "fields": [
                {
                    "id": "bqg6rkul",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array, should be periodic.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2t9bhj7d",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "Dictionary that contains the kernel used to do a convolution with.",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "94y8dwyz",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.hilbert",
                    "defaultValue": "scipy.fftpack.hilbert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "og3ouch_",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ix2gc3ww",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "bh15m33w",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y0qrwm3s",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "malrl0qc",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h8sojqcy",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "_ag58jf2",
            "name": "fftpack.idct",
            "description": "Return the Inverse Discrete Cosine Transform of an arbitrary type sequence.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DCT (see Notes). Default type is 2.\n    n : int, optional\n        Length of the transform.  If ``n < x.shape[axis]``, `x` is\n        truncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the idct is computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    idct : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    dct : Forward DCT\n    \n    Notes\n    -----\n    For a single dimension array `x`, ``idct(x, norm='ortho')`` is equal to\n    MATLAB ``idct(x)``.\n    \n    'The' IDCT is the IDCT of type 2, which is the same as DCT of type 3.\n    \n    IDCT of type 1 is the DCT of type 1, IDCT of type 2 is the DCT of type\n    3, and IDCT of type 3 is the DCT of type 2. IDCT of type 4 is the DCT\n    of type 4. For the definition of these types, see `dct`.\n    \n    Examples\n    --------\n    The Type 1 DCT is equivalent to the DFT for real, even-symmetrical\n    inputs. The output is also real and even-symmetrical. Half of the IFFT\n    input is used to generate half of the IFFT output:\n    \n    >>> from scipy.fftpack import ifft, idct\n    >>> import numpy as np\n    >>> ifft(np.array([ 30.,  -8.,   6.,  -2.,   6.,  -8.])).real\n    array([  4.,   3.,   5.,  10.,   5.,   3.])\n    >>> idct(np.array([ 30.,  -8.,   6.,  -2.]), 1) / 6\n    array([  4.,   3.,   5.,  10.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "09227c45a190b3e8ae1182e605c722137d81c602ba604fbf21ae25f759411914",
            "fields": [
                {
                    "id": "6ggy0rsn",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6b_qh721",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DCT (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yo3qwhqi",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the transform.  If ``n < x.shape[axis]``, `x` is\ntruncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "trjrezaz",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the idct is computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vmr4tqen",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "we4_s501",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "spz4jtsw",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.idct",
                    "defaultValue": "scipy.fftpack.idct",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h22j9hh4",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yteijqpp",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "8hcn2_o8",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hrk5hua7",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i9mmiwm2",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "okg4ijn0",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "x29pycml",
            "name": "fftpack.idctn",
            "description": "Return multidimensional Discrete Cosine Transform along the specified axes.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DCT (see Notes). Default type is 2.\n    shape : int or array_like of ints or None, optional\n        The shape of the result.  If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        Axes along which the IDCT is computed.\n        The default is over all axes.\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    dctn : multidimensional DCT\n    \n    Notes\n    -----\n    For full details of the IDCT types and normalization modes, as well as\n    references, see `idct`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import dctn, idctn\n    >>> rng = np.random.default_rng()\n    >>> y = rng.standard_normal((16, 16))\n    >>> np.allclose(y, idctn(dctn(y, norm='ortho'), norm='ortho'))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2da33d7e7b25f979175819dea7ade87c9813395326745c9466b5a19d864028cf",
            "fields": [
                {
                    "id": "_rrsgpol",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "buiuobpv",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DCT (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uwa4xnox",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result.  If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0325peas",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes along which the IDCT is computed.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r9deo4vp",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lp0tdr_x",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "57xj9q11",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.idctn",
                    "defaultValue": "scipy.fftpack.idctn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hjcf7gnx",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4tb8dl90",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "hwtd0sl9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2b9fu7py",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zmlub3vr",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ifklnk9d",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "32t2p94c",
            "name": "fftpack.idst",
            "description": "Return the Inverse Discrete Sine Transform of an arbitrary type sequence.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DST (see Notes). Default type is 2.\n    n : int, optional\n        Length of the transform.  If ``n < x.shape[axis]``, `x` is\n        truncated. If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the idst is computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    idst : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    dst : Forward DST\n    \n    Notes\n    -----\n    'The' IDST is the IDST of type 2, which is the same as DST of type 3.\n    \n    IDST of type 1 is the DST of type 1, IDST of type 2 is the DST of type\n    3, and IDST of type 3 is the DST of type 2. For the definition of these\n    types, see `dst`.\n    \n    .. versionadded:: 0.11.0",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "dab40181a9c12f96e6e84c9262171d5c5b771a67bc9cdeb5f9371443ca5c2d84",
            "fields": [
                {
                    "id": "frl5lmoz",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "payw1ttr",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DST (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ykptymsw",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the transform.  If ``n < x.shape[axis]``, `x` is\ntruncated. If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o3j50afz",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the idst is computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nfttaom0",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "91ao0p5l",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6hbiajvw",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.idst",
                    "defaultValue": "scipy.fftpack.idst",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ymbmkn75",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "giuaqbll",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "tt0gz24y",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_v5s8v9d",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1jed96iz",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s7oc7gnk",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "vkgv5hlv",
            "name": "fftpack.idstn",
            "description": "Return multidimensional Discrete Sine Transform along the specified axes.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DST (see Notes). Default type is 2.\n    shape : int or array_like of ints or None, optional\n        The shape of the result.  If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        Axes along which the IDST is computed.\n        The default is over all axes.\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    dstn : multidimensional DST\n    \n    Notes\n    -----\n    For full details of the IDST types and normalization modes, as well as\n    references, see `idst`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import dstn, idstn\n    >>> rng = np.random.default_rng()\n    >>> y = rng.standard_normal((16, 16))\n    >>> np.allclose(y, idstn(dstn(y, norm='ortho'), norm='ortho'))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "95988c5cab7df6bd01906461912e47505bb7da2c725041bec77d5b0c3449fd40",
            "fields": [
                {
                    "id": "jfx4nd94",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vlnkgs0z",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DST (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p87vmfth",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result.  If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5d4n2pix",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes along which the IDST is computed.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kb6ysep_",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2ol8ohne",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aou6_0pg",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.idstn",
                    "defaultValue": "scipy.fftpack.idstn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b6gtcpap",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vjjs3cp2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "fg1g8kfa",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3bplqldw",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tad640be",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2tpyqo4m",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "w33n5rz5",
            "name": "fftpack.ifft",
            "description": "Return discrete inverse Fourier transform of real or complex sequence.\n    \n    The returned complex array contains ``y(0), y(1),..., y(n-1)``, where\n    \n    ``y(j) = (x * exp(2*pi*sqrt(-1)*j*np.arange(n)/n)).mean()``.\n    \n    Parameters\n    ----------\n    x : array_like\n        Transformed data to invert.\n    n : int, optional\n        Length of the inverse Fourier transform.  If ``n < x.shape[axis]``,\n        `x` is truncated. If ``n > x.shape[axis]``, `x` is zero-padded.\n        The default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the ifft's are computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    ifft : ndarray of floats\n        The inverse discrete Fourier transform.\n    \n    See Also\n    --------\n    fft : Forward FFT\n    \n    Notes\n    -----\n    Both single and double precision routines are implemented. Half precision\n    inputs will be converted to single precision. Non-floating-point inputs\n    will be converted to double precision. Long-double precision inputs are\n    not supported.\n    \n    This function is most efficient when `n` is a power of two, and least\n    efficient when `n` is prime.\n    \n    If the data type of `x` is real, a \"real IFFT\" algorithm is automatically\n    used, which roughly halves the computation time.\n    \n    Examples\n    --------\n    >>> from scipy.fftpack import fft, ifft\n    >>> import numpy as np\n    >>> x = np.arange(5)\n    >>> np.allclose(ifft(fft(x)), x, atol=1e-15)  # within numerical accuracy.\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "1ee607966f01e5ddc3f27f6e239378860363385309cf56c932f623736d3e1ecc",
            "fields": [
                {
                    "id": "kdx3q77d",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Transformed data to invert.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cmznih2y",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the inverse Fourier transform.  If ``n < x.shape[axis]``,\n`x` is truncated. If ``n > x.shape[axis]``, `x` is zero-padded.\nThe default results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_awcmj0x",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the ifft's are computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7if1o3fk",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yy0ebw3s",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.ifft",
                    "defaultValue": "scipy.fftpack.ifft",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4kfnbr5c",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bnci0fxg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "k8ps6g1p",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f34j1nmy",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cuezwqjf",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_egvn2mr",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "hxgwnr2r",
            "name": "fftpack.ifft2",
            "description": "2-D discrete inverse Fourier transform of real or complex sequence.\n    \n    Return inverse 2-D discrete Fourier transform of\n    arbitrary type sequence x.\n    \n    See `ifft` for more information.\n    \n    See Also\n    --------\n    fft2, ifft\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import fft2, ifft2\n    >>> y = np.mgrid[:5, :5][0]\n    >>> y\n    array([[0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1],\n           [2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4]])\n    >>> np.allclose(y, fft2(ifft2(y)))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0b6444a0fe55ee372d319293104e95d03def72e5fc881bcf451cf0592c1f472a",
            "fields": [
                {
                    "id": "k38d44c_",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "77lu4gy6",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1yzqf1zu",
                    "encoding": "",
                    "name": "axes",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3v08t1v2",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hbddh5as",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.ifft2",
                    "defaultValue": "scipy.fftpack.ifft2",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qvhmtah7",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s68_da1w",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "9osuj4w9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hfjwe1o1",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q3vn5qxi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "41cbz724",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "gfuwr6_j",
            "name": "fftpack.ifftn",
            "description": "Return inverse multidimensional discrete Fourier transform.\n    \n    The sequence can be of an arbitrary type.\n    \n    The returned array contains::\n    \n      y[j_1,..,j_d] = 1/p * sum[k_1=0..n_1-1, ..., k_d=0..n_d-1]\n         x[k_1,..,k_d] * prod[i=1..d] exp(sqrt(-1)*2*pi/n_i * j_i * k_i)\n    \n    where ``d = len(x.shape)``, ``n = x.shape``, and ``p = prod[i=1..d] n_i``.\n    \n    For description of parameters see `fftn`.\n    \n    See Also\n    --------\n    fftn : for detailed information.\n    \n    Examples\n    --------\n    >>> from scipy.fftpack import fftn, ifftn\n    >>> import numpy as np\n    >>> y = (-np.arange(16), 8 - np.arange(16), np.arange(16))\n    >>> np.allclose(y, ifftn(fftn(y)))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b3340757748b726f2e64537e7f170355007c5d75a4dee8e39a2b6c9db8da0a17",
            "fields": [
                {
                    "id": "xaazx9n6",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "58vuxnqm",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "79am9hpc",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k2yqe8sw",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9eif4cg3",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.ifftn",
                    "defaultValue": "scipy.fftpack.ifftn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mbzri8pa",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ivd96wvk",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5jbemms8",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dty14evv",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d9ehng63",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nhoss0gk",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "c63tix9z",
            "name": "fftpack.ifftshift",
            "description": "The inverse of `fftshift`. Although identical for even-length `x`, the\n    functions differ by one sample for odd-length `x`.\n    \n    Parameters\n    ----------\n    x : array_like\n        Input array.\n    axes : int or shape tuple, optional\n        Axes over which to calculate.  Defaults to None, which shifts all axes.\n    \n    Returns\n    -------\n    y : ndarray\n        The shifted array.\n    \n    See Also\n    --------\n    fftshift : Shift zero-frequency component to the center of the spectrum.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> freqs = np.fft.fftfreq(9, d=1./9).reshape(3, 3)\n    >>> freqs\n    array([[ 0.,  1.,  2.],\n           [ 3.,  4., -4.],\n           [-3., -2., -1.]])\n    >>> np.fft.ifftshift(np.fft.fftshift(freqs))\n    array([[ 0.,  1.,  2.],\n           [ 3.,  4., -4.],\n           [-3., -2., -1.]])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5b37b3177a5078c42f6ae94f84ed45a1daf9fb45775b45438d06b0ac9911644c",
            "fields": [
                {
                    "id": "ifgvyfed",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s2mrk9xp",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes over which to calculate.  Defaults to None, which shifts all axes.",
                    "type": "int or shape tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hulzj88i",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.ifftshift",
                    "defaultValue": "scipy.fftpack.ifftshift",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c5ua9bkf",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ijruxjod",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "q1z8m1hr",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g2mw20x7",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "50y8aqzi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1xv_2t7q",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "pjd_a6io",
            "name": "fftpack.ihilbert",
            "description": "Return inverse Hilbert transform of a periodic sequence x.\n    \n    If ``x_j`` and ``y_j`` are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = -sqrt(-1)*sign(j) * x_j\n      y_0 = 0",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7e830553b84478f0ada88cfa4cba59d8b1e11fa3d0f5ffc7896fdecc2fbbb873",
            "fields": [
                {
                    "id": "vx6tazuw",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7px09_42",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qz5q6ntz",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.ihilbert",
                    "defaultValue": "scipy.fftpack.ihilbert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0me_virw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5u69ossk",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "n627fiqy",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "asbo41yy",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "urqo3wbh",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "czk2qemt",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "50v2pzhk",
            "name": "fftpack.irfft",
            "description": "Return inverse discrete Fourier transform of real sequence x.\n    \n    The contents of `x` are interpreted as the output of the `rfft`\n    function.\n    \n    Parameters\n    ----------\n    x : array_like\n        Transformed data to invert.\n    n : int, optional\n        Length of the inverse Fourier transform.\n        If n < x.shape[axis], x is truncated.\n        If n > x.shape[axis], x is zero-padded.\n        The default results in n = x.shape[axis].\n    axis : int, optional\n        Axis along which the ifft's are computed; the default is over\n        the last axis (i.e., axis=-1).\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    irfft : ndarray of floats\n        The inverse discrete Fourier transform.\n    \n    See Also\n    --------\n    rfft, ifft, scipy.fft.irfft\n    \n    Notes\n    -----\n    The returned real array contains::\n    \n        [y(0),y(1),...,y(n-1)]\n    \n    where for n is even::\n    \n        y(j) = 1/n (sum[k=1..n/2-1] (x[2*k-1]+sqrt(-1)*x[2*k])\n                                     * exp(sqrt(-1)*j*k* 2*pi/n)\n                    + c.c. + x[0] + (-1)**(j) x[n-1])\n    \n    and for n is odd::\n    \n        y(j) = 1/n (sum[k=1..(n-1)/2] (x[2*k-1]+sqrt(-1)*x[2*k])\n                                     * exp(sqrt(-1)*j*k* 2*pi/n)\n                    + c.c. + x[0])\n    \n    c.c. denotes complex conjugate of preceding expression.\n    \n    For details on input parameters, see `rfft`.\n    \n    To process (conjugate-symmetric) frequency-domain data with a complex\n    datatype, consider using the newer function `scipy.fft.irfft`.\n    \n    Examples\n    --------\n    >>> from scipy.fftpack import rfft, irfft\n    >>> a = [1.0, 2.0, 3.0, 4.0, 5.0]\n    >>> irfft(a)\n    array([ 2.6       , -3.16405192,  1.24398433, -1.14955713,  1.46962473])\n    >>> irfft(rfft(a))\n    array([1., 2., 3., 4., 5.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9389a1c05503703a2d42424f6c0ba07c2b03b2a53f17b63b865b76351994f557",
            "fields": [
                {
                    "id": "k69rz1ks",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Transformed data to invert.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zyc096x8",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the inverse Fourier transform.\nIf n < x.shape[axis], x is truncated.\nIf n > x.shape[axis], x is zero-padded.\nThe default results in n = x.shape[axis].",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sjfhblso",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the ifft's are computed; the default is over\nthe last axis (i.e., axis=-1).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z31a66v5",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x2197ogt",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.irfft",
                    "defaultValue": "scipy.fftpack.irfft",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "43y50itw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7q7c0zxk",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "nxvejtxb",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "guvi8x6d",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "drmox6cy",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vv99tb0u",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ipzexuuq",
            "name": "fftpack.itilbert",
            "description": "Return inverse h-Tilbert transform of a periodic sequence x.\n    \n    If ``x_j`` and ``y_j`` are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = -sqrt(-1)*tanh(j*h*2*pi/period) * x_j\n      y_0 = 0\n    \n    For more details, see `tilbert`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d05ca5ea3cd6ca8fe45861a2f2c67383d68312641f791a4cd87363e257f77a0e",
            "fields": [
                {
                    "id": "p4qa791t",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "42x8vkta",
                    "encoding": "",
                    "name": "h",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0qtnt0r3",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cuxutjh0",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fwlm9c0p",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.itilbert",
                    "defaultValue": "scipy.fftpack.itilbert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tduyvq90",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yc85cory",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "v09dgycw",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n6h3wggg",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "avdgwhm1",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y72avpdw",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ycobfukz",
            "name": "fftpack.next_fast_len",
            "description": "Find the next fast size of input data to `fft`, for zero-padding, etc.\n    \n    SciPy's FFTPACK has efficient functions for radix {2, 3, 4, 5}, so this\n    returns the next composite of the prime factors 2, 3, and 5 which is\n    greater than or equal to `target`. (These are also known as 5-smooth\n    numbers, regular numbers, or Hamming numbers.)\n    \n    Parameters\n    ----------\n    target : int\n        Length to start searching from. Must be a positive integer.\n    \n    Returns\n    -------\n    out : int\n        The first 5-smooth number greater than or equal to `target`.\n    \n    Notes\n    -----\n    .. versionadded:: 0.18.0\n    \n    Examples\n    --------\n    On a particular machine, an FFT of prime length takes 133 ms:\n    \n    >>> from scipy import fftpack\n    >>> import numpy as np\n    >>> rng = np.random.default_rng()\n    >>> min_len = 10007  # prime length is worst case for speed\n    >>> a = rng.standard_normal(min_len)\n    >>> b = fftpack.fft(a)\n    \n    Zero-padding to the next 5-smooth length reduces computation time to\n    211 us, a speedup of 630 times:\n    \n    >>> fftpack.next_fast_len(min_len)\n    10125\n    >>> b = fftpack.fft(a, 10125)\n    \n    Rounding up to the next power of 2 is not optimal, taking 367 us to\n    compute, 1.7 times as long as the 5-smooth size:\n    \n    >>> b = fftpack.fft(a, 16384)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "10028eff61e19ed24129a8970919f3c6a453fb094cb120e690ecdef30d54c979",
            "fields": [
                {
                    "id": "_vti5gxe",
                    "encoding": "",
                    "name": "target",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length to start searching from. Must be a positive integer.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bzwjltd6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.next_fast_len",
                    "defaultValue": "scipy.fftpack.next_fast_len",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zq83a7t7",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uckt_yo6",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "t1be16d8",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lr034iyn",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w5llqqi0",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "80o1jewg",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "eqlls4fy",
            "name": "fftpack.rfft",
            "description": "Discrete Fourier transform of a real sequence.\n    \n    Parameters\n    ----------\n    x : array_like, real-valued\n        The data to transform.\n    n : int, optional\n        Defines the length of the Fourier transform. If `n` is not specified\n        (the default) then ``n = x.shape[axis]``. If ``n < x.shape[axis]``,\n        `x` is truncated, if ``n > x.shape[axis]``, `x` is zero-padded.\n    axis : int, optional\n        The axis along which the transform is applied. The default is the\n        last axis.\n    overwrite_x : bool, optional\n        If set to true, the contents of `x` can be overwritten. Default is\n        False.\n    \n    Returns\n    -------\n    z : real ndarray\n        The returned real array contains::\n    \n          [y(0),Re(y(1)),Im(y(1)),...,Re(y(n/2))]              if n is even\n          [y(0),Re(y(1)),Im(y(1)),...,Re(y(n/2)),Im(y(n/2))]   if n is odd\n    \n        where::\n    \n          y(j) = sum[k=0..n-1] x[k] * exp(-sqrt(-1)*j*k*2*pi/n)\n          j = 0..n-1\n    \n    See Also\n    --------\n    fft, irfft, scipy.fft.rfft\n    \n    Notes\n    -----\n    Within numerical accuracy, ``y == rfft(irfft(y))``.\n    \n    Both single and double precision routines are implemented. Half precision\n    inputs will be converted to single precision. Non-floating-point inputs\n    will be converted to double precision. Long-double precision inputs are\n    not supported.\n    \n    To get an output with a complex datatype, consider using the newer\n    function `scipy.fft.rfft`.\n    \n    Examples\n    --------\n    >>> from scipy.fftpack import fft, rfft\n    >>> a = [9, -9, 1, 3]\n    >>> fft(a)\n    array([  4. +0.j,   8.+12.j,  16. +0.j,   8.-12.j])\n    >>> rfft(a)\n    array([  4.,   8.,  12.,  16.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5fc45a00dcb495c4b7aa722f2b9c0686b967b1422ba9df2bf48e776cd7f1a25c",
            "fields": [
                {
                    "id": "s8k2_6ds",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The data to transform.",
                    "type": "arraylike, real-valued",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2a5dvkpe",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Defines the length of the Fourier transform. If `n` is not specified\n(the default) then ``n = x.shape[axis]``. If ``n < x.shape[axis]``,\n`x` is truncated, if ``n > x.shape[axis]``, `x` is zero-padded.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rv64ktfp",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "The axis along which the transform is applied. The default is the\nlast axis.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sk9_id9e",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If set to true, the contents of `x` can be overwritten. Default is\nFalse.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "evn3_kze",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.rfft",
                    "defaultValue": "scipy.fftpack.rfft",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1m0b7yyy",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mmgq8utf",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "h6xdv1sb",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3af1odih",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h1l24j58",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o3kp_2l8",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "gcqoalhz",
            "name": "fftpack.rfftfreq",
            "description": "DFT sample frequencies (for usage with rfft, irfft).\n    \n    The returned float array contains the frequency bins in\n    cycles/unit (with zero at the start) given a window length `n` and a\n    sample spacing `d`::\n    \n      f = [0,1,1,2,2,...,n/2-1,n/2-1,n/2]/(d*n)   if n is even\n      f = [0,1,1,2,2,...,n/2-1,n/2-1,n/2,n/2]/(d*n)   if n is odd\n    \n    Parameters\n    ----------\n    n : int\n        Window length.\n    d : scalar, optional\n        Sample spacing. Default is 1.\n    \n    Returns\n    -------\n    out : ndarray\n        The array of length `n`, containing the sample frequencies.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy import fftpack\n    >>> sig = np.array([-2, 8, 6, 4, 1, 0, 3, 5], dtype=float)\n    >>> sig_fft = fftpack.rfft(sig)\n    >>> n = sig_fft.size\n    >>> timestep = 0.1\n    >>> freq = fftpack.rfftfreq(n, d=timestep)\n    >>> freq\n    array([ 0.  ,  1.25,  1.25,  2.5 ,  2.5 ,  3.75,  3.75,  5.  ])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "815e3cbbe1866dc33b2c442683cb4d25df9824fdbfc1ff44612274299c546e14",
            "fields": [
                {
                    "id": "jtl7tmrs",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Window length.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gd9n30ph",
                    "encoding": "",
                    "name": "d",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "Sample spacing. Default is 1.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_oiej7z6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.rfftfreq",
                    "defaultValue": "scipy.fftpack.rfftfreq",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ammjdh88",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3zu_g7c6",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "axyno5s7",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g4_ha_6f",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r9jy146e",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "av0axsam",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "4nr1jo8d",
            "name": "fftpack.sc_diff",
            "description": "Return (a,b)-sinh/cosh pseudo-derivative of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = sqrt(-1)*sinh(j*a*2*pi/period)/cosh(j*b*2*pi/period) * x_j\n      y_0 = 0\n    \n    Parameters\n    ----------\n    x : array_like\n        Input array.\n    a,b : float\n        Defines the parameters of the sinh/cosh pseudo-differential\n        operator.\n    period : float, optional\n        The period of the sequence x. Default is 2*pi.\n    \n    Notes\n    -----\n    ``sc_diff(cs_diff(x,a,b),b,a) == x``\n    For even ``len(x)``, the Nyquist mode of x is taken as zero.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ce414390dc193ccc71277b9286a2743cc6096332eeebc3769e7214407d6206a2",
            "fields": [
                {
                    "id": "tuudctjo",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ta37wpte",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rx165acc",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lccp_haf",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequence x. Default is 2*pi.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "octa86je",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lj1cpbf9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.sc_diff",
                    "defaultValue": "scipy.fftpack.sc_diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cb4sr2lb",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hjj9w5sg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "0dr4ovz_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "edn2digv",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d94i229r",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w7uj1qym",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "yr53td7u",
            "name": "fftpack.shift",
            "description": "Shift periodic sequence x by a: y(u) = x(u+a).\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n          y_j = exp(j*a*2*pi/period*sqrt(-1)) * x_f\n    \n    Parameters\n    ----------\n    x : array_like\n        The array to take the pseudo-derivative from.\n    a : float\n        Defines the parameters of the sinh/sinh pseudo-differential\n    period : float, optional\n        The period of the sequences x and y. Default period is ``2*pi``.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "491f0144a1d99f1c14da100aa831a7973543793cd0476bbc2cc66e31d9a876e5",
            "fields": [
                {
                    "id": "8w8vr24k",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to take the pseudo-derivative from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ojp3ok2h",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "Defines the parameters of the sinh/sinh pseudo-differential",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5jvmy8h5",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequences x and y. Default period is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mrdb1uuu",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "54vtaavi",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.shift",
                    "defaultValue": "scipy.fftpack.shift",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "33u7qqo1",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z8pbbp8j",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "7tw7izgg",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "evjyzuw6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q4s105tw",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2btd3w1w",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "mtoh4yzb",
            "name": "fftpack.ss_diff",
            "description": "Return (a,b)-sinh/sinh pseudo-derivative of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = sinh(j*a*2*pi/period)/sinh(j*b*2*pi/period) * x_j\n      y_0 = a/b * x_0\n    \n    Parameters\n    ----------\n    x : array_like\n        The array to take the pseudo-derivative from.\n    a,b\n        Defines the parameters of the sinh/sinh pseudo-differential\n        operator.\n    period : float, optional\n        The period of the sequence x. Default is ``2*pi``.\n    \n    Notes\n    -----\n    ``ss_diff(ss_diff(x,a,b),b,a) == x``",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5a13e5832b8f6aa337d08679290af774b22b765772260387a450388236ca4c3c",
            "fields": [
                {
                    "id": "kbmwylp6",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to take the pseudo-derivative from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ddnacpq7",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g3fa6bb_",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oc86scri",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequence x. Default is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tsdkgg_s",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "98sgijre",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.ss_diff",
                    "defaultValue": "scipy.fftpack.ss_diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0lpvc1n0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_fo6u9gi",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "e7t0qlad",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "34q6ypju",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4dvci7_2",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z0i8yj65",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "a8zdhg9i",
            "name": "fftpack.tilbert",
            "description": "Return h-Tilbert transform of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n        y_j = sqrt(-1)*coth(j*h*2*pi/period) * x_j\n        y_0 = 0\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array to transform.\n    h : float\n        Defines the parameter of the Tilbert transform.\n    period : float, optional\n        The assumed period of the sequence. Default period is ``2*pi``.\n    \n    Returns\n    -------\n    tilbert : ndarray\n        The result of the transform.\n    \n    Notes\n    -----\n    If ``sum(x, axis=0) == 0`` and ``n = len(x)`` is odd, then\n    ``tilbert(itilbert(x)) == x``.\n    \n    If ``2 * pi * h / period`` is approximately 10 or larger, then\n    numerically ``tilbert == hilbert``\n    (theoretically oo-Tilbert == Hilbert).\n    \n    For even ``len(x)``, the Nyquist mode of ``x`` is taken zero.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7acc8f3f106e830c22434d1286e663f77a7e50a6e0052dceae80220d87b13ada",
            "fields": [
                {
                    "id": "ra98h_ta",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array to transform.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7rl44yqn",
                    "encoding": "",
                    "name": "h",
                    "value": "",
                    "defaultValue": "",
                    "description": "Defines the parameter of the Tilbert transform.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g59cq2mh",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The assumed period of the sequence. Default period is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mhhm_71m",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zf5t6h39",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.tilbert",
                    "defaultValue": "scipy.fftpack.tilbert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "higeda32",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6932gsxj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "1027kidx",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "noi2ptxo",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack",
                    "defaultValue": "scipy.fftpack",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qzrd_41b",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "883jbvx6",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "zi1j7w58",
            "name": "basic.fft",
            "description": "Return discrete Fourier transform of real or complex sequence.\n    \n    The returned complex array contains ``y(0), y(1),..., y(n-1)``, where\n    \n    ``y(j) = (x * exp(-2*pi*sqrt(-1)*j*np.arange(n)/n)).sum()``.\n    \n    Parameters\n    ----------\n    x : array_like\n        Array to Fourier transform.\n    n : int, optional\n        Length of the Fourier transform. If ``n < x.shape[axis]``, `x` is\n        truncated. If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the fft's are computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    z : complex ndarray\n        with the elements::\n    \n            [y(0),y(1),..,y(n/2),y(1-n/2),...,y(-1)]        if n is even\n            [y(0),y(1),..,y((n-1)/2),y(-(n-1)/2),...,y(-1)]  if n is odd\n    \n        where::\n    \n            y(j) = sum[k=0..n-1] x[k] * exp(-sqrt(-1)*j*k* 2*pi/n), j = 0..n-1\n    \n    See Also\n    --------\n    ifft : Inverse FFT\n    rfft : FFT of a real sequence\n    \n    Notes\n    -----\n    The packing of the result is \"standard\": If ``A = fft(a, n)``, then\n    ``A[0]`` contains the zero-frequency term, ``A[1:n/2]`` contains the\n    positive-frequency terms, and ``A[n/2:]`` contains the negative-frequency\n    terms, in order of decreasingly negative frequency. So ,for an 8-point\n    transform, the frequencies of the result are [0, 1, 2, 3, -4, -3, -2, -1].\n    To rearrange the fft output so that the zero-frequency component is\n    centered, like [-4, -3, -2, -1,  0,  1,  2,  3], use `fftshift`.\n    \n    Both single and double precision routines are implemented. Half precision\n    inputs will be converted to single precision. Non-floating-point inputs\n    will be converted to double precision. Long-double precision inputs are\n    not supported.\n    \n    This function is most efficient when `n` is a power of two, and least\n    efficient when `n` is prime.\n    \n    Note that if ``x`` is real-valued, then ``A[j] == A[n-j].conjugate()``.\n    If ``x`` is real-valued and ``n`` is even, then ``A[n/2]`` is real.\n    \n    If the data type of `x` is real, a \"real FFT\" algorithm is automatically\n    used, which roughly halves the computation time. To increase efficiency\n    a little further, use `rfft`, which does the same calculation, but only\n    outputs half of the symmetrical spectrum. If the data is both real and\n    symmetrical, the `dct` can again double the efficiency by generating\n    half of the spectrum from half of the signal.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import fft, ifft\n    >>> x = np.arange(5)\n    >>> np.allclose(fft(ifft(x)), x, atol=1e-15)  # within numerical accuracy.\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9c4b8501e8072d1565a114950a374fd6374a36981c70d253ecec13858e6cf628",
            "fields": [
                {
                    "id": "nkqhvw8i",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Array to Fourier transform.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fmxqo2r6",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the Fourier transform. If ``n < x.shape[axis]``, `x` is\ntruncated. If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d2hvrkfr",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the fft's are computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mqkikvzl",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oe7mgfb9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.basic.fft",
                    "defaultValue": "scipy.fftpack.basic.fft",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4kz9cfm2",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jgazpdey",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "sfk67vtr",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ai947y3",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.basic",
                    "defaultValue": "scipy.fftpack.basic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ltw3qeoj",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vg_coi9r",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "pom_rhl6",
            "name": "basic.fft2",
            "description": "2-D discrete Fourier transform.\n    \n    Return the 2-D discrete Fourier transform of the 2-D argument\n    `x`.\n    \n    See Also\n    --------\n    fftn : for detailed information.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import fft2, ifft2\n    >>> y = np.mgrid[:5, :5][0]\n    >>> y\n    array([[0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1],\n           [2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4]])\n    >>> np.allclose(y, ifft2(fft2(y)))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "53098631a240b876dc237f047b9455a4d1a229494bf145e9c80d0c06ddc8c8f6",
            "fields": [
                {
                    "id": "zvsj2slt",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "872ls8h6",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ccp46y5h",
                    "encoding": "",
                    "name": "axes",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yldx2z_l",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "613jp3vz",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.basic.fft2",
                    "defaultValue": "scipy.fftpack.basic.fft2",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xt8uzswk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zch7qi93",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vfwvbxpq",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kr3eha8k",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.basic",
                    "defaultValue": "scipy.fftpack.basic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3dmpapa4",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u7j_urok",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "nlcayfl8",
            "name": "basic.fftn",
            "description": "Return multidimensional discrete Fourier transform.\n    \n    The returned array contains::\n    \n      y[j_1,..,j_d] = sum[k_1=0..n_1-1, ..., k_d=0..n_d-1]\n         x[k_1,..,k_d] * prod[i=1..d] exp(-sqrt(-1)*2*pi/n_i * j_i * k_i)\n    \n    where d = len(x.shape) and n = x.shape.\n    \n    Parameters\n    ----------\n    x : array_like\n        The (N-D) array to transform.\n    shape : int or array_like of ints or None, optional\n        The shape of the result. If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        The axes of `x` (`y` if `shape` is not None) along which the\n        transform is applied.\n        The default is over all axes.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed. Default is False.\n    \n    Returns\n    -------\n    y : complex-valued N-D NumPy array\n        The (N-D) DFT of the input array.\n    \n    See Also\n    --------\n    ifftn\n    \n    Notes\n    -----\n    If ``x`` is real-valued, then\n    ``y[..., j_i, ...] == y[..., n_i-j_i, ...].conjugate()``.\n    \n    Both single and double precision routines are implemented. Half precision\n    inputs will be converted to single precision. Non-floating-point inputs\n    will be converted to double precision. Long-double precision inputs are\n    not supported.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import fftn, ifftn\n    >>> y = (-np.arange(16), 8 - np.arange(16), np.arange(16))\n    >>> np.allclose(y, fftn(ifftn(y)))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b97a76359c62695da8abbc4db56749452cbd6ea756e588141b89161fdf493329",
            "fields": [
                {
                    "id": "nbevdu5m",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The (N-D) array to transform.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tmfcni2a",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result. If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ngx065p7",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "The axes of `x` (`y` if `shape` is not None) along which the\ntransform is applied.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xk5ni702",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed. Default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ex_u38q_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.basic.fftn",
                    "defaultValue": "scipy.fftpack.basic.fftn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2zp09aa7",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6u0xf75e",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "xzrj6uya",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bh1cbx0n",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.basic",
                    "defaultValue": "scipy.fftpack.basic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yi97kpdx",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zeim9ub7",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "2ka53gyz",
            "name": "basic.ifft",
            "description": "Return discrete inverse Fourier transform of real or complex sequence.\n    \n    The returned complex array contains ``y(0), y(1),..., y(n-1)``, where\n    \n    ``y(j) = (x * exp(2*pi*sqrt(-1)*j*np.arange(n)/n)).mean()``.\n    \n    Parameters\n    ----------\n    x : array_like\n        Transformed data to invert.\n    n : int, optional\n        Length of the inverse Fourier transform.  If ``n < x.shape[axis]``,\n        `x` is truncated. If ``n > x.shape[axis]``, `x` is zero-padded.\n        The default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the ifft's are computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    ifft : ndarray of floats\n        The inverse discrete Fourier transform.\n    \n    See Also\n    --------\n    fft : Forward FFT\n    \n    Notes\n    -----\n    Both single and double precision routines are implemented. Half precision\n    inputs will be converted to single precision. Non-floating-point inputs\n    will be converted to double precision. Long-double precision inputs are\n    not supported.\n    \n    This function is most efficient when `n` is a power of two, and least\n    efficient when `n` is prime.\n    \n    If the data type of `x` is real, a \"real IFFT\" algorithm is automatically\n    used, which roughly halves the computation time.\n    \n    Examples\n    --------\n    >>> from scipy.fftpack import fft, ifft\n    >>> import numpy as np\n    >>> x = np.arange(5)\n    >>> np.allclose(ifft(fft(x)), x, atol=1e-15)  # within numerical accuracy.\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "62632d7bc2f3100ce09a25c68cd31590bcd97ef492360f75af8d5918886b7e3f",
            "fields": [
                {
                    "id": "0qglnt1u",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Transformed data to invert.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "egl_6592",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the inverse Fourier transform.  If ``n < x.shape[axis]``,\n`x` is truncated. If ``n > x.shape[axis]``, `x` is zero-padded.\nThe default results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ceebfj9s",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the ifft's are computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zzr718um",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hkvbk_jj",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.basic.ifft",
                    "defaultValue": "scipy.fftpack.basic.ifft",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1hpz0slx",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t0dra0mq",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ie3m51_q",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "prieu_j8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.basic",
                    "defaultValue": "scipy.fftpack.basic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6twb_qp2",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "24lziv3c",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "hizk81_d",
            "name": "basic.ifft2",
            "description": "2-D discrete inverse Fourier transform of real or complex sequence.\n    \n    Return inverse 2-D discrete Fourier transform of\n    arbitrary type sequence x.\n    \n    See `ifft` for more information.\n    \n    See Also\n    --------\n    fft2, ifft\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import fft2, ifft2\n    >>> y = np.mgrid[:5, :5][0]\n    >>> y\n    array([[0, 0, 0, 0, 0],\n           [1, 1, 1, 1, 1],\n           [2, 2, 2, 2, 2],\n           [3, 3, 3, 3, 3],\n           [4, 4, 4, 4, 4]])\n    >>> np.allclose(y, fft2(ifft2(y)))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e5732add09152e2df43e76abb4d836b4ea517bd659604ffc428e11b400d2204f",
            "fields": [
                {
                    "id": "lbi5_lgn",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_vwpvrer",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2nuy14k1",
                    "encoding": "",
                    "name": "axes",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cuqr1ql7",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "help2nd6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.basic.ifft2",
                    "defaultValue": "scipy.fftpack.basic.ifft2",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gz1rvqja",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e97gwrdx",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "77uft0zk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vr5tu1sh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.basic",
                    "defaultValue": "scipy.fftpack.basic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jk8rg5pi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3oxfrlnt",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ipq12gxl",
            "name": "basic.ifftn",
            "description": "Return inverse multidimensional discrete Fourier transform.\n    \n    The sequence can be of an arbitrary type.\n    \n    The returned array contains::\n    \n      y[j_1,..,j_d] = 1/p * sum[k_1=0..n_1-1, ..., k_d=0..n_d-1]\n         x[k_1,..,k_d] * prod[i=1..d] exp(sqrt(-1)*2*pi/n_i * j_i * k_i)\n    \n    where ``d = len(x.shape)``, ``n = x.shape``, and ``p = prod[i=1..d] n_i``.\n    \n    For description of parameters see `fftn`.\n    \n    See Also\n    --------\n    fftn : for detailed information.\n    \n    Examples\n    --------\n    >>> from scipy.fftpack import fftn, ifftn\n    >>> import numpy as np\n    >>> y = (-np.arange(16), 8 - np.arange(16), np.arange(16))\n    >>> np.allclose(y, ifftn(fftn(y)))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2ffb7c9b50f9bfef4c6772ba7d4282c7efa4147e6e100e0ad7b3494b3a598e53",
            "fields": [
                {
                    "id": "av8hms54",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4d0_vf1v",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wmmqhezd",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "60araozb",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bvd0wbu7",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.basic.ifftn",
                    "defaultValue": "scipy.fftpack.basic.ifftn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ndxma2b8",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ssqk8sp_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "n9ufmeni",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q8ez96vj",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.basic",
                    "defaultValue": "scipy.fftpack.basic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v46nagd_",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1db6pfsk",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "tuetti3l",
            "name": "basic.irfft",
            "description": "Return inverse discrete Fourier transform of real sequence x.\n    \n    The contents of `x` are interpreted as the output of the `rfft`\n    function.\n    \n    Parameters\n    ----------\n    x : array_like\n        Transformed data to invert.\n    n : int, optional\n        Length of the inverse Fourier transform.\n        If n < x.shape[axis], x is truncated.\n        If n > x.shape[axis], x is zero-padded.\n        The default results in n = x.shape[axis].\n    axis : int, optional\n        Axis along which the ifft's are computed; the default is over\n        the last axis (i.e., axis=-1).\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    irfft : ndarray of floats\n        The inverse discrete Fourier transform.\n    \n    See Also\n    --------\n    rfft, ifft, scipy.fft.irfft\n    \n    Notes\n    -----\n    The returned real array contains::\n    \n        [y(0),y(1),...,y(n-1)]\n    \n    where for n is even::\n    \n        y(j) = 1/n (sum[k=1..n/2-1] (x[2*k-1]+sqrt(-1)*x[2*k])\n                                     * exp(sqrt(-1)*j*k* 2*pi/n)\n                    + c.c. + x[0] + (-1)**(j) x[n-1])\n    \n    and for n is odd::\n    \n        y(j) = 1/n (sum[k=1..(n-1)/2] (x[2*k-1]+sqrt(-1)*x[2*k])\n                                     * exp(sqrt(-1)*j*k* 2*pi/n)\n                    + c.c. + x[0])\n    \n    c.c. denotes complex conjugate of preceding expression.\n    \n    For details on input parameters, see `rfft`.\n    \n    To process (conjugate-symmetric) frequency-domain data with a complex\n    datatype, consider using the newer function `scipy.fft.irfft`.\n    \n    Examples\n    --------\n    >>> from scipy.fftpack import rfft, irfft\n    >>> a = [1.0, 2.0, 3.0, 4.0, 5.0]\n    >>> irfft(a)\n    array([ 2.6       , -3.16405192,  1.24398433, -1.14955713,  1.46962473])\n    >>> irfft(rfft(a))\n    array([1., 2., 3., 4., 5.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "de3a891f4eca253ac6e832ad9ce90e0a70375b79fe2f8cfb81891869bb48d706",
            "fields": [
                {
                    "id": "1g23slcf",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Transformed data to invert.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kkiosiwd",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the inverse Fourier transform.\nIf n < x.shape[axis], x is truncated.\nIf n > x.shape[axis], x is zero-padded.\nThe default results in n = x.shape[axis].",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1sznk6ky",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the ifft's are computed; the default is over\nthe last axis (i.e., axis=-1).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k6dxb288",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4vb7_vne",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.basic.irfft",
                    "defaultValue": "scipy.fftpack.basic.irfft",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "68hxu_i6",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mif85mq1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kdh2sa74",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x3repkdm",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.basic",
                    "defaultValue": "scipy.fftpack.basic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3qf1zfln",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "htxf__4r",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "aw0pmlhf",
            "name": "basic.rfft",
            "description": "Discrete Fourier transform of a real sequence.\n    \n    Parameters\n    ----------\n    x : array_like, real-valued\n        The data to transform.\n    n : int, optional\n        Defines the length of the Fourier transform. If `n` is not specified\n        (the default) then ``n = x.shape[axis]``. If ``n < x.shape[axis]``,\n        `x` is truncated, if ``n > x.shape[axis]``, `x` is zero-padded.\n    axis : int, optional\n        The axis along which the transform is applied. The default is the\n        last axis.\n    overwrite_x : bool, optional\n        If set to true, the contents of `x` can be overwritten. Default is\n        False.\n    \n    Returns\n    -------\n    z : real ndarray\n        The returned real array contains::\n    \n          [y(0),Re(y(1)),Im(y(1)),...,Re(y(n/2))]              if n is even\n          [y(0),Re(y(1)),Im(y(1)),...,Re(y(n/2)),Im(y(n/2))]   if n is odd\n    \n        where::\n    \n          y(j) = sum[k=0..n-1] x[k] * exp(-sqrt(-1)*j*k*2*pi/n)\n          j = 0..n-1\n    \n    See Also\n    --------\n    fft, irfft, scipy.fft.rfft\n    \n    Notes\n    -----\n    Within numerical accuracy, ``y == rfft(irfft(y))``.\n    \n    Both single and double precision routines are implemented. Half precision\n    inputs will be converted to single precision. Non-floating-point inputs\n    will be converted to double precision. Long-double precision inputs are\n    not supported.\n    \n    To get an output with a complex datatype, consider using the newer\n    function `scipy.fft.rfft`.\n    \n    Examples\n    --------\n    >>> from scipy.fftpack import fft, rfft\n    >>> a = [9, -9, 1, 3]\n    >>> fft(a)\n    array([  4. +0.j,   8.+12.j,  16. +0.j,   8.-12.j])\n    >>> rfft(a)\n    array([  4.,   8.,  12.,  16.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6628f87791270a8a3da65e402a265e1b33f8792ec56924f4ec6d904b8d171555",
            "fields": [
                {
                    "id": "g2t1qk1c",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The data to transform.",
                    "type": "arraylike, real-valued",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v4ypepa5",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Defines the length of the Fourier transform. If `n` is not specified\n(the default) then ``n = x.shape[axis]``. If ``n < x.shape[axis]``,\n`x` is truncated, if ``n > x.shape[axis]``, `x` is zero-padded.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0416avwv",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "The axis along which the transform is applied. The default is the\nlast axis.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1nsmvydd",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If set to true, the contents of `x` can be overwritten. Default is\nFalse.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "px99uq5v",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.basic.rfft",
                    "defaultValue": "scipy.fftpack.basic.rfft",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xbwfcd90",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3d7wh3sd",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "9lhkbqcy",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1fbsnzv3",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.basic",
                    "defaultValue": "scipy.fftpack.basic",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vq881ml3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vcxn2cth",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "x2hgu8nj",
            "name": "convolve.convolve",
            "description": "y = convolve(x,omega,[swap_real_imag,overwrite_x])\n    \n    Wrapper for ``convolve``.\n    \n    Parameters\n    ----------\n    x : input rank-1 array('d') with bounds (n)\n    omega : input rank-1 array('d') with bounds (n)\n    \n    Other Parameters\n    ----------------\n    overwrite_x : input int, optional\n        Default: 0\n    swap_real_imag : input int, optional\n         Default: 0\n    \n    Returns\n    -------\n    y : rank-1 array('d') with bounds (n) and x storage",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "307edb7abba7fbf7bcb1e4f7e82689afab6627e89faef07c9c96ca314b7f52b5",
            "fields": [
                {
                    "id": "vq7ltzao",
                    "encoding": "",
                    "name": "inout",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4mqajzp6",
                    "encoding": "",
                    "name": "omega",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "input rank-1 array('d') with bounds (n)",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pp_ukmdn",
                    "encoding": "",
                    "name": "swap_real_imag",
                    "value": false,
                    "defaultValue": false,
                    "description": "Default: 0",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0e76cz8d",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "Default: 0",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_gcr0gq3",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.convolve.convolve",
                    "defaultValue": "scipy.fftpack.convolve.convolve",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a_f5sbkw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "agox6xxr",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "gyquru2d",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "shrqux0l",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.convolve",
                    "defaultValue": "scipy.fftpack.convolve",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tpg9s_ml",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "el_g_mya",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "4npojlxf",
            "name": "convolve.convolve_z",
            "description": "y = convolve_z(x,omega_real,omega_imag,[overwrite_x])\n    \n    Wrapper for ``convolve_z``.\n    \n    Parameters\n    ----------\n    x : input rank-1 array('d') with bounds (n)\n    omega_real : input rank-1 array('d') with bounds (n)\n    omega_imag : input rank-1 array('d') with bounds (n)\n    \n    Other Parameters\n    ----------------\n    overwrite_x : input int, optional\n        Default: 0\n    \n    Returns\n    -------\n    y : rank-1 array('d') with bounds (n) and x storage",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d655dc0b05ef687faab934f4eef8c77497cc92d62c8b9406a10d084e83827184",
            "fields": [
                {
                    "id": "rj8ub43j",
                    "encoding": "",
                    "name": "inout",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "59geom2f",
                    "encoding": "",
                    "name": "omega_real",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "input rank-1 array('d') with bounds (n)",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2jbdjxme",
                    "encoding": "",
                    "name": "omega_imag",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "input rank-1 array('d') with bounds (n)",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ykz337mm",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "Default: 0",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "swhstxbv",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.convolve.convolve_z",
                    "defaultValue": "scipy.fftpack.convolve.convolve_z",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wvwrbi_d",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m3eba3pz",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "_34xhoco",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4p3_1hax",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.convolve",
                    "defaultValue": "scipy.fftpack.convolve",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "drewly7f",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2hrbuivh",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "tahgqia3",
            "name": "convolve.destroy_convolve_cache",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9f4fc6bad8e8f4a1070e5f33b669c68661302fdf5e8574674da108a903ce4d1d",
            "fields": [
                {
                    "id": "kjlcru47",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.convolve.destroy_convolve_cache",
                    "defaultValue": "scipy.fftpack.convolve.destroy_convolve_cache",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y1ko3i7i",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fbik2dft",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "e3hf4ryz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4nq73vn8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.convolve",
                    "defaultValue": "scipy.fftpack.convolve",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bqveuk_g",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xknfgnaj",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "v27yr15f",
            "name": "convolve.init_convolution_kernel",
            "description": "omega = init_convolution_kernel(n,kernel_func,[d,zero_nyquist,kernel_func_extra_args])\n    \n    Wrapper for ``init_convolution_kernel``.\n    \n    Parameters\n    ----------\n    n : input int\n    kernel_func : call-back function\n    \n    Other Parameters\n    ----------------\n    d : input int, optional\n        Default: 0\n    kernel_func_extra_args : input tuple, optional\n        Default: ()\n    zero_nyquist : input int, optional\n        Default: d%2\n    \n    Returns\n    -------\n    omega : rank-1 array('d') with bounds (n)\n    \n    Notes\n    -----\n    Call-back functions::\n    \n      def kernel_func(k): return kernel_func\n      Required arguments:\n        k : input int\n      Return objects:\n        kernel_func : float",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "bc8347d0469d1d8e5bccb857a6f85910bf2751c93a1722e7c14bf8e469181612",
            "fields": [
                {
                    "id": "a2hno2ap",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "input int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i_wtz_2l",
                    "encoding": "",
                    "name": "kernel_func",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "call-back function",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ajlhbo43",
                    "encoding": "",
                    "name": "d",
                    "value": 0,
                    "defaultValue": 0,
                    "description": "Default: 0",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bj3guojo",
                    "encoding": "",
                    "name": "zero_nyquist",
                    "value": "",
                    "defaultValue": "",
                    "description": "Default: d%2",
                    "type": "input int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o0k3ktud",
                    "encoding": "",
                    "name": "kernel_func_extra_args",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "Default: ()",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ehx1dxwc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.convolve.init_convolution_kernel",
                    "defaultValue": "scipy.fftpack.convolve.init_convolution_kernel",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0d0ypi62",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "33xt0ow_",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6og19145",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0hxjbxiw",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.convolve",
                    "defaultValue": "scipy.fftpack.convolve",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cmsuigdj",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6h5j0flr",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "utknv660",
            "name": "helper.fftfreq",
            "description": "Return the Discrete Fourier Transform sample frequencies.\n    \n    The returned float array `f` contains the frequency bin centers in cycles\n    per unit of the sample spacing (with zero at the start).  For instance, if\n    the sample spacing is in seconds, then the frequency unit is cycles/second.\n    \n    Given a window length `n` and a sample spacing `d`::\n    \n      f = [0, 1, ...,   n/2-1,     -n/2, ..., -1] / (d*n)   if n is even\n      f = [0, 1, ..., (n-1)/2, -(n-1)/2, ..., -1] / (d*n)   if n is odd\n    \n    Parameters\n    ----------\n    n : int\n        Window length.\n    d : scalar, optional\n        Sample spacing (inverse of the sampling rate). Defaults to 1.\n    device : str, optional\n        The device on which to place the created array. Default: ``None``.\n        For Array-API interoperability only, so must be ``\"cpu\"`` if passed.\n    \n        .. versionadded:: 2.0.0\n    \n    Returns\n    -------\n    f : ndarray\n        Array of length `n` containing the sample frequencies.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> signal = np.array([-2, 8, 6, 4, 1, 0, 3, 5], dtype=float)\n    >>> fourier = np.fft.fft(signal)\n    >>> n = signal.size\n    >>> timestep = 0.1\n    >>> freq = np.fft.fftfreq(n, d=timestep)\n    >>> freq\n    array([ 0.  ,  1.25,  2.5 , ..., -3.75, -2.5 , -1.25])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a88f2324984f8e45babdc23b7b1cbdb2dbe68ee0f70662840d9da9130e0c4c5f",
            "fields": [
                {
                    "id": "bil2te23",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Window length.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0b9qk4b8",
                    "encoding": "",
                    "name": "d",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "Sample spacing (inverse of the sampling rate). Defaults to 1.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9nnhcve5",
                    "encoding": "",
                    "name": "device",
                    "value": "",
                    "defaultValue": "",
                    "description": "The device on which to place the created array. Default: ``None``.\nFor Array-API interoperability only, so must be ``\"cpu\"`` if passed.\n\n.. versionadded:: 2.0.0",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "876wgzi6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.helper.fftfreq",
                    "defaultValue": "scipy.fftpack.helper.fftfreq",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xvrwkb74",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e43kaohk",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vwfljd36",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0dsibbsv",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.helper",
                    "defaultValue": "scipy.fftpack.helper",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fb0v0213",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "txmrayxq",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "bttsucse",
            "name": "helper.fftshift",
            "description": "Shift the zero-frequency component to the center of the spectrum.\n    \n    This function swaps half-spaces for all axes listed (defaults to all).\n    Note that ``y[0]`` is the Nyquist component only if ``len(x)`` is even.\n    \n    Parameters\n    ----------\n    x : array_like\n        Input array.\n    axes : int or shape tuple, optional\n        Axes over which to shift.  Default is None, which shifts all axes.\n    \n    Returns\n    -------\n    y : ndarray\n        The shifted array.\n    \n    See Also\n    --------\n    ifftshift : The inverse of `fftshift`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> freqs = np.fft.fftfreq(10, 0.1)\n    >>> freqs\n    array([ 0.,  1.,  2., ..., -3., -2., -1.])\n    >>> np.fft.fftshift(freqs)\n    array([-5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.])\n    \n    Shift the zero-frequency component only along the second axis:\n    \n    >>> freqs = np.fft.fftfreq(9, d=1./9).reshape(3, 3)\n    >>> freqs\n    array([[ 0.,  1.,  2.],\n           [ 3.,  4., -4.],\n           [-3., -2., -1.]])\n    >>> np.fft.fftshift(freqs, axes=(1,))\n    array([[ 2.,  0.,  1.],\n           [-4.,  3.,  4.],\n           [-1., -3., -2.]])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "42f300b4e705502c44788b446b9c3a34ca6ac0c48ea0cb300dfbb4520d64e67a",
            "fields": [
                {
                    "id": "ayp5lp1e",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "16tc6_5o",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes over which to shift.  Default is None, which shifts all axes.",
                    "type": "int or shape tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lbu2t2ci",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.helper.fftshift",
                    "defaultValue": "scipy.fftpack.helper.fftshift",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m9ooe6d4",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uqdsy214",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wr6y86av",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hzml7lxr",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.helper",
                    "defaultValue": "scipy.fftpack.helper",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "olf02j_m",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ildqf82k",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "93qs76r6",
            "name": "helper.ifftshift",
            "description": "The inverse of `fftshift`. Although identical for even-length `x`, the\n    functions differ by one sample for odd-length `x`.\n    \n    Parameters\n    ----------\n    x : array_like\n        Input array.\n    axes : int or shape tuple, optional\n        Axes over which to calculate.  Defaults to None, which shifts all axes.\n    \n    Returns\n    -------\n    y : ndarray\n        The shifted array.\n    \n    See Also\n    --------\n    fftshift : Shift zero-frequency component to the center of the spectrum.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> freqs = np.fft.fftfreq(9, d=1./9).reshape(3, 3)\n    >>> freqs\n    array([[ 0.,  1.,  2.],\n           [ 3.,  4., -4.],\n           [-3., -2., -1.]])\n    >>> np.fft.ifftshift(np.fft.fftshift(freqs))\n    array([[ 0.,  1.,  2.],\n           [ 3.,  4., -4.],\n           [-3., -2., -1.]])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "93bd3ada515485f68e2de30e721f8bda331a48ca704333e61bd431766e7f8a54",
            "fields": [
                {
                    "id": "30gurpmi",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "le614j4j",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes over which to calculate.  Defaults to None, which shifts all axes.",
                    "type": "int or shape tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hq49wv1g",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.helper.ifftshift",
                    "defaultValue": "scipy.fftpack.helper.ifftshift",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7ij94r86",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s0ir33ts",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "e4px81m9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5umjcszx",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.helper",
                    "defaultValue": "scipy.fftpack.helper",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xegif5yd",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iab4h9z8",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "83i70t0y",
            "name": "helper.next_fast_len",
            "description": "Find the next fast size of input data to `fft`, for zero-padding, etc.\n    \n    SciPy's FFTPACK has efficient functions for radix {2, 3, 4, 5}, so this\n    returns the next composite of the prime factors 2, 3, and 5 which is\n    greater than or equal to `target`. (These are also known as 5-smooth\n    numbers, regular numbers, or Hamming numbers.)\n    \n    Parameters\n    ----------\n    target : int\n        Length to start searching from. Must be a positive integer.\n    \n    Returns\n    -------\n    out : int\n        The first 5-smooth number greater than or equal to `target`.\n    \n    Notes\n    -----\n    .. versionadded:: 0.18.0\n    \n    Examples\n    --------\n    On a particular machine, an FFT of prime length takes 133 ms:\n    \n    >>> from scipy import fftpack\n    >>> import numpy as np\n    >>> rng = np.random.default_rng()\n    >>> min_len = 10007  # prime length is worst case for speed\n    >>> a = rng.standard_normal(min_len)\n    >>> b = fftpack.fft(a)\n    \n    Zero-padding to the next 5-smooth length reduces computation time to\n    211 us, a speedup of 630 times:\n    \n    >>> fftpack.next_fast_len(min_len)\n    10125\n    >>> b = fftpack.fft(a, 10125)\n    \n    Rounding up to the next power of 2 is not optimal, taking 367 us to\n    compute, 1.7 times as long as the 5-smooth size:\n    \n    >>> b = fftpack.fft(a, 16384)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e8ca7e9891903d51ac9cbcad3a6e1ad6b20862ed47c58180fca6daa8689933c1",
            "fields": [
                {
                    "id": "wo4mu0ts",
                    "encoding": "",
                    "name": "target",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length to start searching from. Must be a positive integer.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "33fvrqds",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.helper.next_fast_len",
                    "defaultValue": "scipy.fftpack.helper.next_fast_len",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9d42tavf",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xtvg2i3p",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "16ylpgmw",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nzegeao6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.helper",
                    "defaultValue": "scipy.fftpack.helper",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "trehfeqc",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "devikoxu",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "duppyejk",
            "name": "helper.rfftfreq",
            "description": "DFT sample frequencies (for usage with rfft, irfft).\n    \n    The returned float array contains the frequency bins in\n    cycles/unit (with zero at the start) given a window length `n` and a\n    sample spacing `d`::\n    \n      f = [0,1,1,2,2,...,n/2-1,n/2-1,n/2]/(d*n)   if n is even\n      f = [0,1,1,2,2,...,n/2-1,n/2-1,n/2,n/2]/(d*n)   if n is odd\n    \n    Parameters\n    ----------\n    n : int\n        Window length.\n    d : scalar, optional\n        Sample spacing. Default is 1.\n    \n    Returns\n    -------\n    out : ndarray\n        The array of length `n`, containing the sample frequencies.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy import fftpack\n    >>> sig = np.array([-2, 8, 6, 4, 1, 0, 3, 5], dtype=float)\n    >>> sig_fft = fftpack.rfft(sig)\n    >>> n = sig_fft.size\n    >>> timestep = 0.1\n    >>> freq = fftpack.rfftfreq(n, d=timestep)\n    >>> freq\n    array([ 0.  ,  1.25,  1.25,  2.5 ,  2.5 ,  3.75,  3.75,  5.  ])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "71c16fdd9c4b687c5b0c3c6f81508b5044f349d5a3b5ce4a5ebbd22feadfd3b0",
            "fields": [
                {
                    "id": "bkenvrf1",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Window length.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "apua1dru",
                    "encoding": "",
                    "name": "d",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "Sample spacing. Default is 1.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "acvfvm8t",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.helper.rfftfreq",
                    "defaultValue": "scipy.fftpack.helper.rfftfreq",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6e1_d8dy",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1cm0q_x2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "nvqvn65_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yov_ecvy",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.helper",
                    "defaultValue": "scipy.fftpack.helper",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tb6n9m68",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l9h4e8w5",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "wkp2ekln",
            "name": "pseudo_diffs.cc_diff",
            "description": "Return (a,b)-cosh/cosh pseudo-derivative of a periodic sequence.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = cosh(j*a*2*pi/period)/cosh(j*b*2*pi/period) * x_j\n    \n    Parameters\n    ----------\n    x : array_like\n        The array to take the pseudo-derivative from.\n    a,b : float\n        Defines the parameters of the sinh/sinh pseudo-differential\n        operator.\n    period : float, optional\n        The period of the sequence x. Default is ``2*pi``.\n    \n    Returns\n    -------\n    cc_diff : ndarray\n        Pseudo-derivative of periodic sequence `x`.\n    \n    Notes\n    -----\n    ``cc_diff(cc_diff(x,a,b),b,a) == x``",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "fcaed678b1de8be8e2f2bb5732c6f833e05e3a8539f0ec159356b3e47e89b044",
            "fields": [
                {
                    "id": "q5ivrach",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to take the pseudo-derivative from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "geck_lu8",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8ojrv_fo",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f1k63y6m",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequence x. Default is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bi0jpid_",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sctm5typ",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.cc_diff",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.cc_diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "af0wwsd9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jr3uble1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "s73tcct4",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ztnxcbgg",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x7zj7wcg",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5u2dfu2l",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "s09kbq46",
            "name": "pseudo_diffs.cs_diff",
            "description": "Return (a,b)-cosh/sinh pseudo-derivative of a periodic sequence.\n    \n    If ``x_j`` and ``y_j`` are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = -sqrt(-1)*cosh(j*a*2*pi/period)/sinh(j*b*2*pi/period) * x_j\n      y_0 = 0\n    \n    Parameters\n    ----------\n    x : array_like\n        The array to take the pseudo-derivative from.\n    a, b : float\n        Defines the parameters of the cosh/sinh pseudo-differential\n        operator.\n    period : float, optional\n        The period of the sequence. Default period is ``2*pi``.\n    \n    Returns\n    -------\n    cs_diff : ndarray\n        Pseudo-derivative of periodic sequence `x`.\n    \n    Notes\n    -----\n    For even len(`x`), the Nyquist mode of `x` is taken as zero.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ad858427448c95bd0b4d3557287839fd4f84ebc342c57210c0a8ab7c166eaacd",
            "fields": [
                {
                    "id": "6rhr4xvj",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to take the pseudo-derivative from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kqgnsi0j",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "avlno4pm",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5ou1w999",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequence. Default period is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2l1vehxu",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ij6ij_jr",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.cs_diff",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.cs_diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qclgzinw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qq2tnbc3",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "98p3fpc2",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qotndcv9",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m1koirxm",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6us1308v",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "8na2gclm",
            "name": "pseudo_diffs.diff",
            "description": "Return kth derivative (or integral) of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = pow(sqrt(-1)*j*2*pi/period, order) * x_j\n      y_0 = 0 if order is not 0.\n    \n    Parameters\n    ----------\n    x : array_like\n        Input array.\n    order : int, optional\n        The order of differentiation. Default order is 1. If order is\n        negative, then integration is carried out under the assumption\n        that ``x_0 == 0``.\n    period : float, optional\n        The assumed period of the sequence. Default is ``2*pi``.\n    \n    Notes\n    -----\n    If ``sum(x, axis=0) = 0`` then ``diff(diff(x, k), -k) == x`` (within\n    numerical accuracy).\n    \n    For odd order and even ``len(x)``, the Nyquist mode is taken zero.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9d3d9465713f3e789341800c21bb1f4c69322c5eaef4e3276608c391bca645fe",
            "fields": [
                {
                    "id": "5uzwkv7m",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4mik8i4a",
                    "encoding": "",
                    "name": "order",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "The order of differentiation. Default order is 1. If order is\nnegative, then integration is carried out under the assumption\nthat ``x_0 == 0``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3aew6wet",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The assumed period of the sequence. Default is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nqn5rsp1",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wxivi65a",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.diff",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fsst1lla",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l4_gaohg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "3pkml95f",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "10uxnneq",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q43xd6q4",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qkbvk5d1",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "msojrql7",
            "name": "pseudo_diffs.hilbert",
            "description": "Return Hilbert transform of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = sqrt(-1)*sign(j) * x_j\n      y_0 = 0\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array, should be periodic.\n    _cache : dict, optional\n        Dictionary that contains the kernel used to do a convolution with.\n    \n    Returns\n    -------\n    y : ndarray\n        The transformed input.\n    \n    See Also\n    --------\n    scipy.signal.hilbert : Compute the analytic signal, using the Hilbert\n                           transform.\n    \n    Notes\n    -----\n    If ``sum(x, axis=0) == 0`` then ``hilbert(ihilbert(x)) == x``.\n    \n    For even len(x), the Nyquist mode of x is taken zero.\n    \n    The sign of the returned transform does not have a factor -1 that is more\n    often than not found in the definition of the Hilbert transform. Note also\n    that `scipy.signal.hilbert` does have an extra -1 factor compared to this\n    function.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "dfd576c6f983d38fb4f9a057c58c7ce05a01d94398ba165df1aeeabfae398091",
            "fields": [
                {
                    "id": "iwk9p9gm",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array, should be periodic.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ujxlf87v",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "Dictionary that contains the kernel used to do a convolution with.",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hve76ixg",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.hilbert",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.hilbert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eipe2i4n",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "33om9j8e",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "gjprqyss",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2ww911e4",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8_9trwou",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v31qamtc",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "eytirlno",
            "name": "pseudo_diffs.ihilbert",
            "description": "Return inverse Hilbert transform of a periodic sequence x.\n    \n    If ``x_j`` and ``y_j`` are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = -sqrt(-1)*sign(j) * x_j\n      y_0 = 0",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cf31d016f134dc772ee27b5c9c67293b3b6fd281afb65393ab6ff1f567804bf8",
            "fields": [
                {
                    "id": "5csg279d",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "spmh0xgv",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6xcvem_6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.ihilbert",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.ihilbert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5s7a_0zp",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5xs5g7v1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "7favj6dp",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z0qi3oeg",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nuzmbbld",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eq68visn",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "flbzs7ve",
            "name": "pseudo_diffs.itilbert",
            "description": "Return inverse h-Tilbert transform of a periodic sequence x.\n    \n    If ``x_j`` and ``y_j`` are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = -sqrt(-1)*tanh(j*h*2*pi/period) * x_j\n      y_0 = 0\n    \n    For more details, see `tilbert`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3bd25e3590e998c09b2ffd547f249e3781b00eeccfb3550338fc70d95554dbd6",
            "fields": [
                {
                    "id": "y1dvcgsf",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7m06fsud",
                    "encoding": "",
                    "name": "h",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j1jw37by",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8gd34ft2",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gejwffjb",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.itilbert",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.itilbert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e3ao81bf",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nwpeb4od",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "zpoh5isj",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vzjtxdbh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1xr5yv7k",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qakqnujd",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ysk6owgx",
            "name": "pseudo_diffs.sc_diff",
            "description": "Return (a,b)-sinh/cosh pseudo-derivative of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = sqrt(-1)*sinh(j*a*2*pi/period)/cosh(j*b*2*pi/period) * x_j\n      y_0 = 0\n    \n    Parameters\n    ----------\n    x : array_like\n        Input array.\n    a,b : float\n        Defines the parameters of the sinh/cosh pseudo-differential\n        operator.\n    period : float, optional\n        The period of the sequence x. Default is 2*pi.\n    \n    Notes\n    -----\n    ``sc_diff(cs_diff(x,a,b),b,a) == x``\n    For even ``len(x)``, the Nyquist mode of x is taken as zero.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5b53e3fbf4ddff4b9f44e58bffc6acd8b91ccf62d35955b2645b42f8588fbcb2",
            "fields": [
                {
                    "id": "jbvnv9ny",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hict3m82",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6f2r6eu9",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rs2p1o_8",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequence x. Default is 2*pi.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "exifbn2a",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w4ovhyi0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.sc_diff",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.sc_diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zdwpkmmv",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "czkd5h23",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "_t7m7kji",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h2tterc1",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "276k6upa",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4t0b24_5",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "azzua857",
            "name": "pseudo_diffs.shift",
            "description": "Shift periodic sequence x by a: y(u) = x(u+a).\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n          y_j = exp(j*a*2*pi/period*sqrt(-1)) * x_f\n    \n    Parameters\n    ----------\n    x : array_like\n        The array to take the pseudo-derivative from.\n    a : float\n        Defines the parameters of the sinh/sinh pseudo-differential\n    period : float, optional\n        The period of the sequences x and y. Default period is ``2*pi``.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "31a9d4f1ca94c7c4f4aacfbe4e9f67265ea965d86122805b685ff6db42548724",
            "fields": [
                {
                    "id": "vrfreckm",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to take the pseudo-derivative from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t01gygy0",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "Defines the parameters of the sinh/sinh pseudo-differential",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xhwl0pqz",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequences x and y. Default period is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "88wrfmj0",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rx8zgnq0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.shift",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.shift",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "udftkac7",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w21i_vs3",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "krv09zvz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mf70fvca",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xtk60z01",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k6iqb7yp",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ddgirp1v",
            "name": "pseudo_diffs.ss_diff",
            "description": "Return (a,b)-sinh/sinh pseudo-derivative of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n      y_j = sinh(j*a*2*pi/period)/sinh(j*b*2*pi/period) * x_j\n      y_0 = a/b * x_0\n    \n    Parameters\n    ----------\n    x : array_like\n        The array to take the pseudo-derivative from.\n    a,b\n        Defines the parameters of the sinh/sinh pseudo-differential\n        operator.\n    period : float, optional\n        The period of the sequence x. Default is ``2*pi``.\n    \n    Notes\n    -----\n    ``ss_diff(ss_diff(x,a,b),b,a) == x``",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5d7c88df5081ea7419693a0318b12bd7ecff0c501f1c51460e7a495b3204de00",
            "fields": [
                {
                    "id": "ezgpaoui",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to take the pseudo-derivative from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "emd73xfg",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j1hpan0a",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ld2av4vd",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The period of the sequence x. Default is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s258kbt7",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3486dhr3",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.ss_diff",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.ss_diff",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uyo561x6",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8c5ar1_n",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "h5nwdr17",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n0lqrpgn",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "si3h20_u",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9h9nd4c3",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "hrcr0gif",
            "name": "pseudo_diffs.tilbert",
            "description": "Return h-Tilbert transform of a periodic sequence x.\n    \n    If x_j and y_j are Fourier coefficients of periodic functions x\n    and y, respectively, then::\n    \n        y_j = sqrt(-1)*coth(j*h*2*pi/period) * x_j\n        y_0 = 0\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array to transform.\n    h : float\n        Defines the parameter of the Tilbert transform.\n    period : float, optional\n        The assumed period of the sequence. Default period is ``2*pi``.\n    \n    Returns\n    -------\n    tilbert : ndarray\n        The result of the transform.\n    \n    Notes\n    -----\n    If ``sum(x, axis=0) == 0`` and ``n = len(x)`` is odd, then\n    ``tilbert(itilbert(x)) == x``.\n    \n    If ``2 * pi * h / period`` is approximately 10 or larger, then\n    numerically ``tilbert == hilbert``\n    (theoretically oo-Tilbert == Hilbert).\n    \n    For even ``len(x)``, the Nyquist mode of ``x`` is taken zero.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e80e4a9ba5b7e8f25e8969a41c414744f92d0114b2ba83df599e93a6a67f072a",
            "fields": [
                {
                    "id": "oo7ae8vu",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array to transform.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hibo0t0c",
                    "encoding": "",
                    "name": "h",
                    "value": "",
                    "defaultValue": "",
                    "description": "Defines the parameter of the Tilbert transform.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fmm7dbji",
                    "encoding": "",
                    "name": "period",
                    "value": "",
                    "defaultValue": "",
                    "description": "The assumed period of the sequence. Default period is ``2*pi``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gp_9i_so",
                    "encoding": "",
                    "name": "_cache",
                    "value": "_thread._local",
                    "defaultValue": "_thread._local",
                    "description": "",
                    "type": "_thread._local",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f1cm64e_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.pseudo_diffs.tilbert",
                    "defaultValue": "scipy.fftpack.pseudo_diffs.tilbert",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x7xcgtqe",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r9cpvbpj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "n5v4jr6x",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l0ra8gg0",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.pseudo_diffs",
                    "defaultValue": "scipy.fftpack.pseudo_diffs",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q7ngcq6r",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xu_j82u3",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "6p4mnoju",
            "name": "realtransforms.dct",
            "description": "Return the Discrete Cosine Transform of arbitrary type sequence x.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DCT (see Notes). Default type is 2.\n    n : int, optional\n        Length of the transform.  If ``n < x.shape[axis]``, `x` is\n        truncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the dct is computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    idct : Inverse DCT\n    \n    Notes\n    -----\n    For a single dimension array ``x``, ``dct(x, norm='ortho')`` is equal to\n    MATLAB ``dct(x)``.\n    \n    There are, theoretically, 8 types of the DCT, only the first 4 types are\n    implemented in scipy. 'The' DCT generally refers to DCT type 2, and 'the'\n    Inverse DCT generally refers to DCT type 3.\n    \n    **Type I**\n    \n    There are several definitions of the DCT-I; we use the following\n    (for ``norm=None``)\n    \n    .. math::\n    \n       y_k = x_0 + (-1)^k x_{N-1} + 2 \\sum_{n=1}^{N-2} x_n \\cos\\left(\n       \\frac{\\pi k n}{N-1} \\right)\n    \n    If ``norm='ortho'``, ``x[0]`` and ``x[N-1]`` are multiplied by a scaling\n    factor of :math:`\\sqrt{2}`, and ``y[k]`` is multiplied by a scaling factor\n    ``f``\n    \n    .. math::\n    \n        f = \\begin{cases}\n         \\frac{1}{2}\\sqrt{\\frac{1}{N-1}} & \\text{if }k=0\\text{ or }N-1, \\\\\n         \\frac{1}{2}\\sqrt{\\frac{2}{N-1}} & \\text{otherwise} \\end{cases}\n    \n    .. versionadded:: 1.2.0\n       Orthonormalization in DCT-I.\n    \n    .. note::\n       The DCT-I is only supported for input size > 1.\n    \n    **Type II**\n    \n    There are several definitions of the DCT-II; we use the following\n    (for ``norm=None``)\n    \n    .. math::\n    \n       y_k = 2 \\sum_{n=0}^{N-1} x_n \\cos\\left(\\frac{\\pi k(2n+1)}{2N} \\right)\n    \n    If ``norm='ortho'``, ``y[k]`` is multiplied by a scaling factor ``f``\n    \n    .. math::\n       f = \\begin{cases}\n       \\sqrt{\\frac{1}{4N}} & \\text{if }k=0, \\\\\n       \\sqrt{\\frac{1}{2N}} & \\text{otherwise} \\end{cases}\n    \n    which makes the corresponding matrix of coefficients orthonormal\n    (``O @ O.T = np.eye(N)``).\n    \n    **Type III**\n    \n    There are several definitions, we use the following (for ``norm=None``)\n    \n    .. math::\n    \n       y_k = x_0 + 2 \\sum_{n=1}^{N-1} x_n \\cos\\left(\\frac{\\pi(2k+1)n}{2N}\\right)\n    \n    or, for ``norm='ortho'``\n    \n    .. math::\n    \n       y_k = \\frac{x_0}{\\sqrt{N}} + \\sqrt{\\frac{2}{N}} \\sum_{n=1}^{N-1} x_n\n       \\cos\\left(\\frac{\\pi(2k+1)n}{2N}\\right)\n    \n    The (unnormalized) DCT-III is the inverse of the (unnormalized) DCT-II, up\n    to a factor ``2N``. The orthonormalized DCT-III is exactly the inverse of\n    the orthonormalized DCT-II.\n    \n    **Type IV**\n    \n    There are several definitions of the DCT-IV; we use the following\n    (for ``norm=None``)\n    \n    .. math::\n    \n       y_k = 2 \\sum_{n=0}^{N-1} x_n \\cos\\left(\\frac{\\pi(2k+1)(2n+1)}{4N} \\right)\n    \n    If ``norm='ortho'``, ``y[k]`` is multiplied by a scaling factor ``f``\n    \n    .. math::\n    \n        f = \\frac{1}{\\sqrt{2N}}\n    \n    .. versionadded:: 1.2.0\n       Support for DCT-IV.\n    \n    References\n    ----------\n    .. [1] 'A Fast Cosine Transform in One and Two Dimensions', by J.\n           Makhoul, `IEEE Transactions on acoustics, speech and signal\n           processing` vol. 28(1), pp. 27-34,\n           :doi:`10.1109/TASSP.1980.1163351` (1980).\n    .. [2] Wikipedia, \"Discrete cosine transform\",\n           https://en.wikipedia.org/wiki/Discrete_cosine_transform\n    \n    Examples\n    --------\n    The Type 1 DCT is equivalent to the FFT (though faster) for real,\n    even-symmetrical inputs. The output is also real and even-symmetrical.\n    Half of the FFT input is used to generate half of the FFT output:\n    \n    >>> from scipy.fftpack import fft, dct\n    >>> import numpy as np\n    >>> fft(np.array([4., 3., 5., 10., 5., 3.])).real\n    array([ 30.,  -8.,   6.,  -2.,   6.,  -8.])\n    >>> dct(np.array([4., 3., 5., 10.]), 1)\n    array([ 30.,  -8.,   6.,  -2.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "561ac45023a2a9ad79980537c69574c2127d8c9c9c2b86e5283f4701ada1c914",
            "fields": [
                {
                    "id": "une3qew2",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u2zo0chd",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DCT (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i8sq6il2",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the transform.  If ``n < x.shape[axis]``, `x` is\ntruncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e_6y46iy",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the dct is computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xgmli8ok",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rxevxk8u",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7xh43n7g",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.realtransforms.dct",
                    "defaultValue": "scipy.fftpack.realtransforms.dct",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e7ljomw1",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pksqcwd6",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "el6fhvw3",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "56beei65",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.realtransforms",
                    "defaultValue": "scipy.fftpack.realtransforms",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vcgc_jgb",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cu1x1418",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "bjzgtgx9",
            "name": "realtransforms.dctn",
            "description": "Return multidimensional Discrete Cosine Transform along the specified axes.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DCT (see Notes). Default type is 2.\n    shape : int or array_like of ints or None, optional\n        The shape of the result. If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        Axes along which the DCT is computed.\n        The default is over all axes.\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    idctn : Inverse multidimensional DCT\n    \n    Notes\n    -----\n    For full details of the DCT types and normalization modes, as well as\n    references, see `dct`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import dctn, idctn\n    >>> rng = np.random.default_rng()\n    >>> y = rng.standard_normal((16, 16))\n    >>> np.allclose(y, idctn(dctn(y, norm='ortho'), norm='ortho'))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "88b90cfc1dbd3d112854e29a05e5ad1c310b3144ffdce26917ae4c563a931825",
            "fields": [
                {
                    "id": "o0akwkwj",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "npgelzw6",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DCT (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w1gy7ay7",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result. If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ba59htol",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes along which the DCT is computed.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o85nct8y",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v96fvobb",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iygn7gjv",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.realtransforms.dctn",
                    "defaultValue": "scipy.fftpack.realtransforms.dctn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e1id83h6",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x68l9ygw",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ub6zm_rz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "35lzgcwh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.realtransforms",
                    "defaultValue": "scipy.fftpack.realtransforms",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ypkd0wde",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jodbvk1s",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "5opuha_f",
            "name": "realtransforms.dst",
            "description": "Return the Discrete Sine Transform of arbitrary type sequence x.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DST (see Notes). Default type is 2.\n    n : int, optional\n        Length of the transform.  If ``n < x.shape[axis]``, `x` is\n        truncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the dst is computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    dst : ndarray of reals\n        The transformed input array.\n    \n    See Also\n    --------\n    idst : Inverse DST\n    \n    Notes\n    -----\n    For a single dimension array ``x``.\n    \n    There are, theoretically, 8 types of the DST for different combinations of\n    even/odd boundary conditions and boundary off sets [1]_, only the first\n    4 types are implemented in scipy.\n    \n    **Type I**\n    \n    There are several definitions of the DST-I; we use the following\n    for ``norm=None``. DST-I assumes the input is odd around `n=-1` and `n=N`.\n    \n    .. math::\n    \n        y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(k+1)(n+1)}{N+1}\\right)\n    \n    Note that the DST-I is only supported for input size > 1.\n    The (unnormalized) DST-I is its own inverse, up to a factor ``2(N+1)``.\n    The orthonormalized DST-I is exactly its own inverse.\n    \n    **Type II**\n    \n    There are several definitions of the DST-II; we use the following for\n    ``norm=None``. DST-II assumes the input is odd around `n=-1/2` and\n    `n=N-1/2`; the output is odd around :math:`k=-1` and even around `k=N-1`\n    \n    .. math::\n    \n        y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(k+1)(2n+1)}{2N}\\right)\n    \n    if ``norm='ortho'``, ``y[k]`` is multiplied by a scaling factor ``f``\n    \n    .. math::\n    \n        f = \\begin{cases}\n        \\sqrt{\\frac{1}{4N}} & \\text{if }k = 0, \\\\\n        \\sqrt{\\frac{1}{2N}} & \\text{otherwise} \\end{cases}\n    \n    **Type III**\n    \n    There are several definitions of the DST-III, we use the following (for\n    ``norm=None``). DST-III assumes the input is odd around `n=-1` and even\n    around `n=N-1`\n    \n    .. math::\n    \n        y_k = (-1)^k x_{N-1} + 2 \\sum_{n=0}^{N-2} x_n \\sin\\left(\n        \\frac{\\pi(2k+1)(n+1)}{2N}\\right)\n    \n    The (unnormalized) DST-III is the inverse of the (unnormalized) DST-II, up\n    to a factor ``2N``. The orthonormalized DST-III is exactly the inverse of the\n    orthonormalized DST-II.\n    \n    .. versionadded:: 0.11.0\n    \n    **Type IV**\n    \n    There are several definitions of the DST-IV, we use the following (for\n    ``norm=None``). DST-IV assumes the input is odd around `n=-0.5` and even\n    around `n=N-0.5`\n    \n    .. math::\n    \n        y_k = 2 \\sum_{n=0}^{N-1} x_n \\sin\\left(\\frac{\\pi(2k+1)(2n+1)}{4N}\\right)\n    \n    The (unnormalized) DST-IV is its own inverse, up to a factor ``2N``. The\n    orthonormalized DST-IV is exactly its own inverse.\n    \n    .. versionadded:: 1.2.0\n       Support for DST-IV.\n    \n    References\n    ----------\n    .. [1] Wikipedia, \"Discrete sine transform\",\n           https://en.wikipedia.org/wiki/Discrete_sine_transform",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "414f73c704f0fcf747cb62f416e1667dd9e385f84f0efeb5f714aea42027f212",
            "fields": [
                {
                    "id": "b5ad60ht",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a0az38ik",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DST (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rfhp6yot",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the transform.  If ``n < x.shape[axis]``, `x` is\ntruncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v1cmvjy2",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the dst is computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "khjpkvxz",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v8if6zxv",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1g74cf4h",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.realtransforms.dst",
                    "defaultValue": "scipy.fftpack.realtransforms.dst",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m1_dazs0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0kws3x0p",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6kne0bcd",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aoycv088",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.realtransforms",
                    "defaultValue": "scipy.fftpack.realtransforms",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fnkrifke",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "15_srunz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "0hzlgi3i",
            "name": "realtransforms.dstn",
            "description": "Return multidimensional Discrete Sine Transform along the specified axes.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DST (see Notes). Default type is 2.\n    shape : int or array_like of ints or None, optional\n        The shape of the result.  If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        Axes along which the DCT is computed.\n        The default is over all axes.\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    idstn : Inverse multidimensional DST\n    \n    Notes\n    -----\n    For full details of the DST types and normalization modes, as well as\n    references, see `dst`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import dstn, idstn\n    >>> rng = np.random.default_rng()\n    >>> y = rng.standard_normal((16, 16))\n    >>> np.allclose(y, idstn(dstn(y, norm='ortho'), norm='ortho'))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "819ae64181b3442eb80aa7db9d9be19c47dd0a8aa213c89366f4469cd1db7652",
            "fields": [
                {
                    "id": "6k6g_8d2",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wmpu20ny",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DST (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "svu8zxqo",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result.  If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fhjn8iqt",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes along which the DCT is computed.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xwk1oqwp",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7kkgpv13",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cu2yyj4c",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.realtransforms.dstn",
                    "defaultValue": "scipy.fftpack.realtransforms.dstn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2assmi63",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qpaaeev5",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "uwevlddp",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "290qyzvl",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.realtransforms",
                    "defaultValue": "scipy.fftpack.realtransforms",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v7olg9jg",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "npmyx41a",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "gqz33w_7",
            "name": "realtransforms.idct",
            "description": "Return the Inverse Discrete Cosine Transform of an arbitrary type sequence.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DCT (see Notes). Default type is 2.\n    n : int, optional\n        Length of the transform.  If ``n < x.shape[axis]``, `x` is\n        truncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the idct is computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    idct : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    dct : Forward DCT\n    \n    Notes\n    -----\n    For a single dimension array `x`, ``idct(x, norm='ortho')`` is equal to\n    MATLAB ``idct(x)``.\n    \n    'The' IDCT is the IDCT of type 2, which is the same as DCT of type 3.\n    \n    IDCT of type 1 is the DCT of type 1, IDCT of type 2 is the DCT of type\n    3, and IDCT of type 3 is the DCT of type 2. IDCT of type 4 is the DCT\n    of type 4. For the definition of these types, see `dct`.\n    \n    Examples\n    --------\n    The Type 1 DCT is equivalent to the DFT for real, even-symmetrical\n    inputs. The output is also real and even-symmetrical. Half of the IFFT\n    input is used to generate half of the IFFT output:\n    \n    >>> from scipy.fftpack import ifft, idct\n    >>> import numpy as np\n    >>> ifft(np.array([ 30.,  -8.,   6.,  -2.,   6.,  -8.])).real\n    array([  4.,   3.,   5.,  10.,   5.,   3.])\n    >>> idct(np.array([ 30.,  -8.,   6.,  -2.]), 1) / 6\n    array([  4.,   3.,   5.,  10.])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "897252259c843331a567183d5ee092504ba212832185e90def85d86d0be7d772",
            "fields": [
                {
                    "id": "y9eseafd",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w_5e25un",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DCT (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v9simwvz",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the transform.  If ``n < x.shape[axis]``, `x` is\ntruncated.  If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lukrh510",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the idct is computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gw3fikd4",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z1w2z0bf",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tbyin1no",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.realtransforms.idct",
                    "defaultValue": "scipy.fftpack.realtransforms.idct",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v02rrhhw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7_0odkz8",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "iqb4wxd0",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "usnu4b68",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.realtransforms",
                    "defaultValue": "scipy.fftpack.realtransforms",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t61l7ew7",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a7oj2p41",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "dgpkiz_i",
            "name": "realtransforms.idctn",
            "description": "Return multidimensional Discrete Cosine Transform along the specified axes.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DCT (see Notes). Default type is 2.\n    shape : int or array_like of ints or None, optional\n        The shape of the result.  If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        Axes along which the IDCT is computed.\n        The default is over all axes.\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    dctn : multidimensional DCT\n    \n    Notes\n    -----\n    For full details of the IDCT types and normalization modes, as well as\n    references, see `idct`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import dctn, idctn\n    >>> rng = np.random.default_rng()\n    >>> y = rng.standard_normal((16, 16))\n    >>> np.allclose(y, idctn(dctn(y, norm='ortho'), norm='ortho'))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "40e5cba986bc2b0dbb26f9a36ba99fa35a80009bc5e97aab6f62866725985350",
            "fields": [
                {
                    "id": "fp19999u",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "op5drbud",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DCT (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t43swew3",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result.  If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5wsgwtuk",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes along which the IDCT is computed.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4i2fqq5q",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pcaf2i8e",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tcegryuk",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.realtransforms.idctn",
                    "defaultValue": "scipy.fftpack.realtransforms.idctn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ti75e793",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ygtq6yxy",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "omjso6kl",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dsuph0ca",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.realtransforms",
                    "defaultValue": "scipy.fftpack.realtransforms",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dzjt5h4m",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6sddb3n5",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fe2hdk0f",
            "name": "realtransforms.idst",
            "description": "Return the Inverse Discrete Sine Transform of an arbitrary type sequence.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DST (see Notes). Default type is 2.\n    n : int, optional\n        Length of the transform.  If ``n < x.shape[axis]``, `x` is\n        truncated. If ``n > x.shape[axis]``, `x` is zero-padded. The\n        default results in ``n = x.shape[axis]``.\n    axis : int, optional\n        Axis along which the idst is computed; the default is over the\n        last axis (i.e., ``axis=-1``).\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    idst : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    dst : Forward DST\n    \n    Notes\n    -----\n    'The' IDST is the IDST of type 2, which is the same as DST of type 3.\n    \n    IDST of type 1 is the DST of type 1, IDST of type 2 is the DST of type\n    3, and IDST of type 3 is the DST of type 2. For the definition of these\n    types, see `dst`.\n    \n    .. versionadded:: 0.11.0",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "61b419fbaeb4d436141bd2acd96c05db953a2ded46d5c9aec794b0b3a5168639",
            "fields": [
                {
                    "id": "vmxan9yd",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "snuw7d2h",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DST (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5rnw_j32",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "Length of the transform.  If ``n < x.shape[axis]``, `x` is\ntruncated. If ``n > x.shape[axis]``, `x` is zero-padded. The\ndefault results in ``n = x.shape[axis]``.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jgnrhh2d",
                    "encoding": "",
                    "name": "axis",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Axis along which the idst is computed; the default is over the\nlast axis (i.e., ``axis=-1``).",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ghnnbnmx",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ghkv4eew",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cl6t7k2y",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.realtransforms.idst",
                    "defaultValue": "scipy.fftpack.realtransforms.idst",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7imviz7h",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9ngrgfwt",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wrj5b41q",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qc68vlyj",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.realtransforms",
                    "defaultValue": "scipy.fftpack.realtransforms",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y9mcv7lg",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7zmlzeri",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "26imd_tj",
            "name": "realtransforms.idstn",
            "description": "Return multidimensional Discrete Sine Transform along the specified axes.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input array.\n    type : {1, 2, 3, 4}, optional\n        Type of the DST (see Notes). Default type is 2.\n    shape : int or array_like of ints or None, optional\n        The shape of the result.  If both `shape` and `axes` (see below) are\n        None, `shape` is ``x.shape``; if `shape` is None but `axes` is\n        not None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\n        If ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\n        If ``shape[i] < x.shape[i]``, the ith dimension is truncated to\n        length ``shape[i]``.\n        If any element of `shape` is -1, the size of the corresponding\n        dimension of `x` is used.\n    axes : int or array_like of ints or None, optional\n        Axes along which the IDST is computed.\n        The default is over all axes.\n    norm : {None, 'ortho'}, optional\n        Normalization mode (see Notes). Default is None.\n    overwrite_x : bool, optional\n        If True, the contents of `x` can be destroyed; the default is False.\n    \n    Returns\n    -------\n    y : ndarray of real\n        The transformed input array.\n    \n    See Also\n    --------\n    dstn : multidimensional DST\n    \n    Notes\n    -----\n    For full details of the IDST types and normalization modes, as well as\n    references, see `idst`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from scipy.fftpack import dstn, idstn\n    >>> rng = np.random.default_rng()\n    >>> y = rng.standard_normal((16, 16))\n    >>> np.allclose(y, idstn(dstn(y, norm='ortho'), norm='ortho'))\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e3ce1680112135c994c5a1bed5ecb8c2c53fd167fdc85e0e1748ed7357f757e5",
            "fields": [
                {
                    "id": "h97e58f8",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input array.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vck13wig",
                    "encoding": "",
                    "name": "type",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Type of the DST (see Notes). Default type is 2.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u6y6agj5",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the result.  If both `shape` and `axes` (see below) are\nNone, `shape` is ``x.shape``; if `shape` is None but `axes` is\nnot None, then `shape` is ``numpy.take(x.shape, axes, axis=0)``.\nIf ``shape[i] > x.shape[i]``, the ith dimension is padded with zeros.\nIf ``shape[i] < x.shape[i]``, the ith dimension is truncated to\nlength ``shape[i]``.\nIf any element of `shape` is -1, the size of the corresponding\ndimension of `x` is used.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zee4yvyd",
                    "encoding": "",
                    "name": "axes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axes along which the IDST is computed.\nThe default is over all axes.",
                    "type": "int or arraylike of ints or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "58ypk08p",
                    "encoding": "",
                    "name": "norm",
                    "value": "",
                    "defaultValue": "",
                    "description": "Normalization mode (see Notes). Default is None.",
                    "type": "{None, 'ortho'}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xaq5v25n",
                    "encoding": "",
                    "name": "overwrite_x",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, the contents of `x` can be destroyed; the default is False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3uw8juqp",
                    "encoding": "",
                    "name": "func_name",
                    "value": "scipy.fftpack.realtransforms.idstn",
                    "defaultValue": "scipy.fftpack.realtransforms.idstn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9ru8bydl",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dmgx71pl",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "rt_x1o4p",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "leyuv78q",
                    "encoding": "",
                    "name": "base_name",
                    "value": "scipy.fftpack.realtransforms",
                    "defaultValue": "scipy.fftpack.realtransforms",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_y76o5fs",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tic2pjek",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}