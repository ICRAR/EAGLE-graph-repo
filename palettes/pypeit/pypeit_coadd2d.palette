{
    "modelData": {
        "filePath": "pypeit_coadd2d.palette",
        "fileType": "palette",
        "shortDescription": "",
        "detailedDescription": "Module for performing two-dimensional coaddition of spectra.\n\n.. include common links, assuming primary doc root is up one directory\n.. include:: ../include/links.rst",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE_test_repo",
        "eagleVersion": "",
        "eagleCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "pypeit",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "5b2ee6392eb6351f28c54833f4811cac57353ffe269009e9ab1b21e9458df977",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1731409045.872107,
        "numLGNodes": 67
    },
    "nodeDataArray": [
        {
            "category": "PythonMemberFunction",
            "id": "e5xkznnu",
            "name": "CoAdd2D.__init__",
            "description": "Args:\n        spec2d_files (:obj:`list`):\n            List of spec2d files or a list of\n            :class:`~pypeit.spec2dobj.Spec2dObj` objects.\n        spectrograph (:class:`~pypeit.spectrographs.spectrograph.Spectrograph`):\n            The instrument used to collect the data to be reduced.\n        par (:class:`~pypeit.par.parset.ParSet`):\n            Processing parameters.\n        det (:obj:`int`, :obj:`tuple`, optional):\n            The 1-indexed detector number(s) to process.  If a tuple, it\n            must include detectors viable as a mosaic for the provided\n            spectrograph; see\n            :func:`~pypeit.spectrographs.spectrograph.Spectrograph.allowed_mosaics`.\n        offsets (`numpy.ndarray`_ or string, optional):\n            Spatial offsets to be applied to each image before coadding.\n            Here are the possible usage cases:\n    \n                #. If ``offsets = 'auto'``, auto-compute offsets from brightest\n                   object (if exists)\n    \n                #. If ``offsets`` is something other than ``'auto'``, such\n                   as a list, these are the offsets applied to each image.\n    \n    \n                #. (*for MultiSlit only*) If ``offsets =\n                   'maskdef_offsets'``, use ``maskdef_offset`` saved by the\n                   :class:`~pypeit.slittrace.SlitTraceSet`\n    \n                #. (*for MultiSlit only*) If ``offsets = 'header'``, use the\n                   dither offsets recorded in the header\n    \n        weights (:obj:`str`, :obj:`list`, `numpy.ndarray`_):\n            Mode for the weights used to coadd images.  Options are:\n    \n                #. ``'auto'``: If brightest object exists, auto-compute the\n                   weights, otherwise use uniform weights.  ``'auto'`` is\n                   not allowed if offsets are input.\n    \n                #. ``'uniform'``: If brightest object exists, auto-compute\n                   the weights, otherwise use uniform weights.\n    \n                #. :obj:`list`, `numpy.ndarray`_:  This provides a set of\n                   ``nexp`` weights to use for each exposure.\n    \n        only_slits (:obj:`list`, optional):\n            List of slits to coadd. It must be `slitord_id`.\n        exclude_slits (:obj:`list`, optional):\n            List of slits to exclude from coaddition. It must be `slitord_id`.\n        spec_samp_fact (:obj:`float`, optional):\n            Make the wavelength grid sampling finer (``spec_samp_fact`` less\n            than 1.0) or coarser (``spec_samp_fact`` greater than 1.0) by\n            this sampling factor. This basically multiples the 'native'\n            spectral pixel size by ``spec_samp_fact``, i.e. the units of\n            ``spec_samp_fact`` are pixels.\n        spat_samp_fact (:obj:`float`, optional):\n            Make the spatial sampling finer (``spat_samp_fact`` less\n            than 1.0) or coarser (``spat_samp_fact`` greather than 1.0) by\n            this sampling factor. This basically multiples the 'native'\n            spatial pixel size by ``spat_samp_fact``, i.e. the units of\n            ``spat_samp_fact`` are pixels.\n        sn_smooth_npix (:obj:`int`, optional):\n            Number of pixels to median filter by when computing S/N used to\n            decide how to scale and weight spectra. If set to None, the code\n            will simply take 10% of the image size in the spectral\n            direction.  TODO: for truncated echelle orders we should be\n            doing something more intelligent.\n        bkg_redux (:obj:`bool`, optional):\n            If True, the sciImg has been subtracted by\n            a background image (e.g. standard treatment in the IR)\n            This parameter is passed to pypeit.reduce for determining the reduction steps.\n        find_negative (:obj:`bool`, optional):\n            Do the images have negative trace as would be generated by\n            differencing two science frames? This parameter is passed to\n            pypeit.reduce for determining the reduction steps. If True, then\n            find and mask negative object traces.\n        show (:obj:`bool`, optional):\n            Show results in ginga\n        show_peaks (:obj:`bool`, optional):\n            Plot the QA for the object finding algorithm peak finding to the\n            screen.\n        debug_offset (:obj:`bool`, optional):\n            Plot QA for debugging the automatic determination of offsets to\n            the screen.\n        debug (:obj:`bool`, optional):\n            Show QA for debugging.\nMain routine to run the extraction for 2d coadds.\n    \n    Algorithm steps are as follows:\n        - Fill this in.\n    \n    This performs 2d coadd specific tasks, and then also performs some\n    of the tasks analogous to the pypeit.extract_one method. Docs coming\n    soon....",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b52e843db1ba0eea6160665090c62ce5fd52ff6a814ef31e6b3202c6261b38ef",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec2d",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sn_smooth_npix",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "bkg_redux",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "find_negative",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug_offsets",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.__init__",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.__init__",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "qgzh5azq",
            "name": "CoAdd2D.check_input",
            "description": "Check that the number of input values (weights or offsets) is the same as the number of exposures\n    Args:\n        input (:obj:`list` or `numpy.ndarray`_): User input values (e.g., weights or offsets)\n        type (:obj:`str`): String defining what the quantities are\n    \n    Returns:\n        :obj:`list` or `numpy.ndarray`_: User input values",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0e66f1d71230774bfad400aaf15f55f411b103d7ef289457d2493546ef247fc8",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.check_input object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "type",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.check_input",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.check_input",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "g5jcf4at",
            "name": "CoAdd2D.coadd",
            "description": "Construct a 2d co-add of a stack of PypeIt spec2d reduction outputs.\n    This method calls loops over slits/orders and performs the 2d-coadd by\n    calling coadd.compute.coadd2d, which 'rectifies' images by coadding them\n    about the reference_trace_stack.\n    \n    Parameters\n    ----------\n    interp_dspat : bool, optional\n       Interpolate in the spatial coordinate image to faciliate running\n       through core.extract.local_skysub_extract.  Default=True\n    \n    \n    Returns\n    -------\n    coadd_list : list\n        List of dictionaries, one for each slit, containing the 2d stack.\n        # TODO Make this a PypeIt object, with data model yada-yada.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "394b1d9adf707ee92070f6494d3b298d762bf2442c5c7dad0ece2b0003797bcc",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.coadd object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "interp_dspat",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool, optional\n   Interpolate in the spatial coordinate image to faciliate running\n   through core.extract.local_skysub_extract.  Default=True",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.coadd",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.coadd",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "kb9xksdm",
            "name": "CoAdd2D.compute_offsets",
            "description": "Determine self.offsets, the offset of the frames to be coadded with respect to the first frame.\n    This is partially overloaded by the child methods.\n    \n    Args:\n        offsets (:obj:`list` or :obj:`str`):\n            Value that guides the determination of the offsets.\n            It could be a list of offsets, or a string.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8d03371ba5385a22297a60d305b716f8afa1999858f27c80af58667c923bef75",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.compute_offsets object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "Value that guides the determination of the offsets. It could be a list of offsets, or a string.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.compute_offsets",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.compute_offsets",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "7pot7m12",
            "name": "CoAdd2D.compute_weights",
            "description": "Determine the weights to be used in the coadd2d.\n    This is partially overloaded by the child methods.\n    \n    This method sets the internal :attr:`use_weights`.  Documentation on the\n    form of self.use_weights needs to be written.\n    \n    Args:\n        weights (:obj:`list`, :obj:`str`):\n            Value that guides the determination of the weights.  It could be\n            a list of weights or a string. If 'auto' the weight will be\n            computed using the brightest trace, if 'uniform' uniform weights\n            will be used.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "942d1c2b8297c4c830c9465fe71cf87b6780aab4dd6e23d2b71569631e43d88d",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.compute_weights object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": null,
                    "defaultValue": null,
                    "description": "Value that guides the determination of the weights.  It could be a list of weights or a string. If 'auto' the weight will be computed using the brightest trace, if 'uniform' uniform weights will be used.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.compute_weights",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.compute_weights",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "9kwsqr3z",
            "name": "CoAdd2D.create_pseudo_image",
            "description": "..todo.. see below\n    \n    THIS UNDOCUMENTED CODE PROBABLY SHOULD GENERATE AND RETURN\n    STANDARD PYPEIT OBJCTS INSTEAD OF SOME UNDEFINED DICT",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "49314e4b0975581610feffb41fbfd49f668dfcd7d240822f2291c531adecefb7",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.create_pseudo_image object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "coadd_list",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.create_pseudo_image",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.create_pseudo_image",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "ky8bzf44",
            "name": "CoAdd2D.default_basename",
            "description": "Construct the base name of the output spec2d file produced by coadding.\n    \n    Args:\n        spec2d_files (:obj:`list`):\n            The list of PypeIt spec2d files to be coadded.\n    \n    Returns:\n        :obj:`str`: The root base name for the output coadd2d spec2d file.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "042d978cc3bdfb840faea1d1f324ae99e7155e5316269c97922ae8d0897c6b20",
            "fields": [
                {
                    "name": "spec2d_files",
                    "value": null,
                    "defaultValue": null,
                    "description": "The list of PypeIt spec2d files to be coadded.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.default_basename",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.default_basename",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "pndub9x7",
            "name": "CoAdd2D.default_par",
            "description": "Get the default 2D coadding parameters.\n    \n    Args:\n        spectrograph (:obj:`str`):\n            The PypeIt-specific name of the spectrograph used to collect the\n            data.\n        inp_cfg (:obj:`dict`, optional):\n            An existing set of parameters to add to.\n        det (:obj:`list`, :obj:`str`, :obj:`tuple`, optional):\n            Limit the coadding to this (set of) detector(s)/detector mosaic(s)\n        only_slits (:obj:`list`, :obj:`str`, optional):\n            Limit the coadding to this (set of) slit(s). Only_slits and exclude_slits\n            are mutually exclusive. If both are set, only_slits takes precedence.\n        exclude_slits (:obj:`list`, :obj:`str`, optional):\n            Exclude this (set of) slit(s) from the coadding. Only_slits and exclude_slits\n            are mutually exclusive. If both are set, only_slits takes precedence.\n    \n    Returns:\n        :obj:`dict`: The default set of parameters.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "404564676752c4a343c7f4fa092ab06b1771ccdb9389487d4ba13d902a708e5a",
            "fields": [
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "The PypeIt-specific name of the spectrograph used to collect the data.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "inp_cfg",
                    "value": null,
                    "defaultValue": null,
                    "description": "An existing set of parameters to add to.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": null,
                    "defaultValue": null,
                    "description": "Limit the coadding to this (set of) detector(s)/detector mosaic(s)",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "Limit the coadding to this (set of) slit(s). Only_slits and exclude_slits are mutually exclusive. If both are set, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "Exclude this (set of) slit(s) from the coadding. Only_slits and exclude_slits are mutually exclusive. If both are set, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.default_par",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.default_par",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "i_t6h0lz",
            "name": "CoAdd2D.get_brightest_object",
            "description": "Dummy method to identify the brightest object. Overloaded by child methods.\n    \n    Parameters\n    ----------\n    specobjs_list\n    spat_ids\n    \n    Returns\n    -------",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f26efba17dae153aeb7f3917d929d68982ef4ad521cf72d54d6998d6ae7c51cf",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.get_brightest_object object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "specobjs_list",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_ids",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.get_brightest_object",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.get_brightest_object",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "_vwombry",
            "name": "CoAdd2D.get_instance",
            "description": "Instantiate the subclass appropriate for the provided spectrograph.\n    \n    The class to instantiate must match the ``pypeline``\n    attribute of the provided ``spectrograph``, and must be a\n    subclass of :class:`CoAdd2D`; see the parent class\n    instantiation for parameter descriptions.\n    \n    Returns:\n        :class:`CoAdd2D`: One of the subclasses with\n        :class:`CoAdd2D` as its base.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "293d7460ad268c452d14f255db06f0fb6d0730a86658b6e69f03e972db17a9bd",
            "fields": [
                {
                    "name": "spec2dfiles",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sn_smooth_npix",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "bkg_redux",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "find_negative",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug_offsets",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.get_instance",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.get_instance",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "qyuwcadg",
            "name": "CoAdd2D.get_maskdef_dict",
            "description": "Dummy method to get maskdef info. Overloaded by child methods.\n    \n    Args:\n        slit_idx (?):\n        ref_trace_stack (?):\n    \n    Returns:\n        dict: ?",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f75e30f21d48d230ee20d4ebbe999352db730e1c1f85e0c97cfde5cd4f35ecfa",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.get_maskdef_dict object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slit_idx",
                    "value": null,
                    "defaultValue": null,
                    "description": "ref_trace_stack (?):",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "ref_trace_stack",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.get_maskdef_dict",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.get_maskdef_dict",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "h5ldgxpg",
            "name": "CoAdd2D.get_wave_grid",
            "description": "Routine to create a wavelength grid for 2d coadds using all of the\n    wavelengths of the extracted objects. Calls\n    :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`.\n    \n    Args:\n        wave_method (str):\n           The method to use to create the wavelength grid passed to :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`\n    \n    Returns:\n        tuple: Returns the following:\n            - wave_grid (`numpy.ndarray`_): New wavelength grid, not\n              masked\n            - wave_grid_mid (`numpy.ndarray`_): New wavelength grid\n              evaluated at the centers of the wavelength bins, that\n              is this grid is simply offset from wave_grid by\n              dsamp/2.0, in either linear space or log10 depending\n              on whether linear or (log10 or velocity) was\n              requested.  For iref or concatenate the linear\n              wavelength sampling will be calculated.\n            - dsamp (float): The pixel sampling for wavelength grid\n              created.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c89ddc6f45994c7a9b45d684e31368f2319045e94d37fd7059b7449f2698c756",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.get_wave_grid object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "wave_method",
                    "value": null,
                    "defaultValue": null,
                    "description": "The method to use to create the wavelength grid passed to :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.get_wave_grid",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.get_wave_grid",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "84zt1bzq",
            "name": "CoAdd2D.good_slitindx",
            "description": "This provides an array of index of slits in the un-coadded frames that are considered good for 2d coadding.\n    A bitmask common to all the un-coadded frames is used to determine which slits are good. Also,\n    If the `only_slits` parameter is provided only those slits are considered good for 2d coadding.\n    \n    Args:\n        only_slits (:obj:`list`, optional):\n            List of slits to combine. It must be `slitord_id`.\n            Only_slits and exclude_slits are mutually exclusive.\n            If both are provided, only_slits takes precedence.\n        exclude_slits (:obj:`list`, optional):\n            List of slits to exclude. It must be `slitord_id`.\n            Only_slits and exclude_slits are mutually exclusive.\n            If both are provided, only_slits takes precedence.\n    \n    Returns:\n        `numpy.ndarray`_: array of index of good slits in the un-coadded frames",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "de62dfbfe728c7231df9c813f8c8d61823d794d7cc3f25426e97e6fc3fdf3c9f",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.good_slitindx object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "List of slits to combine. It must be `slitord_id`. Only_slits and exclude_slits are mutually exclusive. If both are provided, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "List of slits to exclude. It must be `slitord_id`. Only_slits and exclude_slits are mutually exclusive. If both are provided, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.good_slitindx",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.good_slitindx",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "rb_hanxd",
            "name": "CoAdd2D.load_coadd2d_stacks",
            "description": "Routine to read in required images for 2d coadds given a list of spec2d files.\n    \n    Args:\n        spec2d_files: list\n           List of spec2d filenames\n        det: int\n           detector in question\n    \n    Returns:\n        dict: Dictionary containing all the images and keys required\n        for perfomring 2d coadds.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c2c53aa0baa238b2bce3277379466eb99ff7d1d429effdace4d570302522f988",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.load_coadd2d_stacks object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec2d",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "chk_version",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.load_coadd2d_stacks",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.load_coadd2d_stacks",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "dqipr81j",
            "name": "CoAdd2D.offset_slit_cen",
            "description": "Offset the slit centers of the slit designated by slitid by the provided offsets\n    \n    Args:\n        slitid (int):\n           ID of the slit that is being offset\n        offsets (list, `numpy.ndarray`_):\n           A list or array of offsets that are being applied to the slit center\n    \n    Returns:\n        :obj:`list`: A list of reference traces for the 2d coadding that\n        have been offset.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "45e59703964f0e524b085a7f37437a803862dc457f5a18c19b05549be4317de5",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.offset_slit_cen object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "ID of the slit that is being offset",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "A list or array of offsets that are being applied to the slit center",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.offset_slit_cen",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.offset_slit_cen",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "9pjyieqf",
            "name": "CoAdd2D.offsets_report",
            "description": "Print out a report on the offsets\n    \n    Args:\n        offsets:\n        offsets_method:\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "74d1d675046b7038659bb89a521ab5a3b9b09a6b5aafc57b2cb3041bdfb43876",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.offsets_report object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "offsets_method:\n\nReturns:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets_method",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.offsets_report",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.offsets_report",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "0y2vunb4",
            "name": "CoAdd2D.optimal_weights",
            "description": "Determine optimal weights for 2d coadds. This script grabs the information from SpecObjs list for the\n    object with specified slitid and objid and passes to coadd.sn_weights to determine the optimal weights for\n    each exposure.\n    \n    Parameters\n    ----------\n    slitorderid : :obj:`int`\n        The slit or order id that has the brightest object whose\n        S/N will be used to determine the weight for each frame.\n    objid : `numpy.ndarray`_\n        Array of object indices with shape = (nexp,) of the\n        brightest object whose S/N will be used to determine the\n        weight for each frame.\n    weight_method : `str`, optional\n        Weight method to be used in :func:`~pypeit.coadd.sn_weights`.\n        Options are ``'auto'``, ``'constant'``, ``'relative'``, or\n        ``'ivar'``. The default is ``'auto'``.  Behavior is as follows:\n    \n            - ``'auto'``: Use constant weights if rms_sn < 3.0, otherwise\n              use wavelength dependent.\n    \n            - ``'constant'``: Constant weights based on rms_sn**2\n    \n            - ``'uniform'``: Uniform weighting.\n    \n            - ``'wave_dependent'``: Wavelength dependent weights will be\n              used irrespective of the rms_sn ratio. This option will not\n              work well at low S/N ratio although it is useful for objects\n              where only a small fraction of the spectral coverage has high\n              S/N ratio (like high-z quasars).\n    \n            - ``'relative'``: Calculate weights by fitting to the ratio of\n              spectra? Note, relative weighting will only work well when\n              there is at least one spectrum with a reasonable S/N, and a\n              continuum.  RJC note - This argument may only be better when\n              the object being used has a strong continuum + emission lines.\n              The reference spectrum is assigned a value of 1 for all\n              wavelengths, and the weights of all other spectra will be\n              determined relative to the reference spectrum. This is\n              particularly useful if you are dealing with highly variable\n              spectra (e.g. emission lines) and require a precision better\n              than ~1 per cent.\n    \n            - ``'ivar'``: Use inverse variance weighting. This is not well\n              tested and should probably be deprecated.\n    \n    Returns\n    -------\n    rms_sn : `numpy.ndarray`_\n        Array of root-mean-square S/N value for each input spectra. Shape = (nexp,)\n    weights : list\n        List of  len(nexp) containing the signal-to-noise squared weights to be\n        applied to the spectra. This output is aligned with the vector (or\n        vectors) provided in waves which is read in by this routine, i.e. it is a\n        list of arrays of type `numpy.ndarray`_  with the same shape as those in waves.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6c0ee515f527d6c6bf3f6fc35d6b5b91ab970f1210609a4e52bdac19adfff3a3",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.optimal_weights object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitorderid",
                    "value": null,
                    "defaultValue": null,
                    "description": "    The slit or order id that has the brightest object whose\n    S/N will be used to determine the weight for each frame.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "objid",
                    "value": null,
                    "defaultValue": null,
                    "description": "    Array of object indices with shape = (nexp,) of the\n    brightest object whose S/N will be used to determine the\n    weight for each frame.",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weight_method",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": " optional\n    Weight method to be used in :func:`~ or\n    ``'ivar'``. The default is ``'auto'``.  Behavior is as follows:\n\n        - ``'auto'``: Use constant weights if rms_sn < 3.0, otherwise\n          use wavelength dependent.\n\n        - ``'constant'``: Constant weights based on rms_sn**2\n\n        - ``'uniform'``: Uniform weighting.\n\n        - ``'wave_dependent'``: Wavelength dependent weights will be\n          used irrespective of the rms_sn ratio. This option will not\n          work well at low S/N ratio although it is useful for objects\n          where only a small fraction of the spectral coverage has high\n          S/N ratio (like high-z quasars).\n\n        - ``'relative'``: Calculate weights by fitting to the ratio of\n          spectra? Note, relative weighting will only work well when\n          there is at least one spectrum with a reasonable S/N, and a\n          continuum.  RJC note - This argument may only be better when\n          the object being used has a strong continuum + emission lines.\n          The reference spectrum is assigned a value of 1 for all\n          wavelengths, and the weights of all other spectra will be\n          determined relative to the reference spectrum. This is\n          particularly useful if you are dealing with highly variable\n          spectra (e.g. emission lines) and require a precision better\n          than ~1 per cent.\n\n        - ``'ivar'``: Use inverse variance weighting. This is not well\n          tested and should probably be deprecated.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.optimal_weights",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.optimal_weights",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "ocuyvht8",
            "name": "CoAdd2D.output_paths",
            "description": "Construct the names and ensure the existence of the science and QA output directories.\n    \n    Args:\n        spec2d_files (:obj:`list`):\n            The list of PypeIt spec2d files to be coadded.  The top-level\n            directory for the coadd2d output directories is assumed to be\n            same as used by the basic reductions.  For example, if one of\n            the spec2d files is\n            ``/path/to/reductions/Science/spec2d_file.fits``, the parent\n            directory for the coadd2d directories is\n            ``/path/to/reductions/``.\n        par (:class:`~pypeit.par.pypeitpar.PypeItPar`):\n            Full set of parameters.  The only used parameters are\n            ``par['rdx']['scidir']`` and ``par['rdx']['qadir']``.  WARNING:\n            This also *alters* the value of ``par['rdx']['qadir']``!!\n        coadd_dir (:obj:`str`, optional):\n            Path to the directory to use for the coadd2d output.\n            If None, the parent of the science directory is used.\n    \n    Returns:\n        :obj:`tuple`: Two strings with the names of (1) the science output\n        directory and (2) the QA output directory.  The function also\n        creates both directories if they do not exist.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a8e3cc7324df2cc8da172fe9a0aa959a34d0f38138d2c7b5b2a073beead21daf",
            "fields": [
                {
                    "name": "spec2d_files",
                    "value": null,
                    "defaultValue": null,
                    "description": "The list of PypeIt spec2d files to be coadded.  The top-level directory for the coadd2d output directories is assumed to be same as used by the basic reductions.  For example, if one of the spec2d files is ``/path/to/reductions/Science/spec2d_file.fits``, the parent directory for the coadd2d directories is ``/path/to/reductions/``.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "Full set of parameters.  The only used parameters are",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "coadd_dir",
                    "value": null,
                    "defaultValue": null,
                    "description": "Path to the directory to use for the coadd2d output. If None, the parent of the science directory is used.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.output_paths",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.output_paths",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "xbbvn1i6",
            "name": "CoAdd2D.reduce",
            "description": "Method to run the reduction on coadd2d pseudo images\n    \n    Args:\n        pseudo_dict (dict):\n           Dictionary containing coadd2d pseudo images\n        show (bool):\n           If True, show the outputs to ginga and the screen analogous to run_pypeit with the -s option\n        show_peaks (bool):\n           If True, plot the object finding QA to the screen.\n        basename (str):\n           The basename for the spec2d output files.\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0e2e0a9a025224c06921203c35579f30f4ac1b385609a017a84530c19eb5e7ee",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.reduce object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "pseudo_dict",
                    "value": null,
                    "defaultValue": null,
                    "description": "Dictionary containing coadd2d pseudo images",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, show the outputs to ginga and the screen analogous to run_pypeit with the -s option",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "clear_ginga",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, plot the object finding QA to the screen.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_skysub_fit",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "basename",
                    "value": null,
                    "defaultValue": null,
                    "description": "The basename for the spec2d output files.\n\nReturns:",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.reduce",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.reduce",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "nrpx5hcg",
            "name": "CoAdd2D.reference_trace_stack",
            "description": "Dummy method to obtain the stack of reference traces. Overloaded by child methods.\n    \n    Args:\n        slitid:\n        offsets:\n        objid:\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "19fd525afd78ecda0c11fb2ccaafb3c27167bcae6c01f221ba2f770bd60c7671",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.reference_trace_stack object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "offsets:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "objid",
                    "value": null,
                    "defaultValue": null,
                    "description": "Returns:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.reference_trace_stack",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.reference_trace_stack",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "e51jqoc_",
            "name": "CoAdd2D.snr_report",
            "description": "..todo.. I need a doc string\n    \n    Args:\n        snr_bar:\n        slitid:\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "17a4a6e654c610df5217260401ab37c9c57809a95298e1475f057075a7391f41",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to CoAdd2D.snr_report object",
                    "type": "Object:pypeit.coadd2d.CoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "snr_bar",
                    "value": null,
                    "defaultValue": null,
                    "description": "slitid:\n\nReturns:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.CoAdd2D",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.CoAdd2D.snr_report",
                    "defaultValue": "pypeit.coadd2d.CoAdd2D.snr_report",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "b7c4xtzx",
            "name": "EchelleCoAdd2D.__init__",
            "description": "Args:\n        spec2d_files (:obj:`list`):\n            List of spec2d files or a list of\n            :class:`~pypeit.spec2dobj.Spec2dObj` objects.\n        spectrograph (:class:`~pypeit.spectrographs.spectrograph.Spectrograph`):\n            The instrument used to collect the data to be reduced.\n        par (:class:`~pypeit.par.parset.ParSet`):\n            Processing parameters.\n        det (:obj:`int`, :obj:`tuple`, optional):\n            The 1-indexed detector number(s) to process.  If a tuple, it\n            must include detectors viable as a mosaic for the provided\n            spectrograph; see\n            :func:`~pypeit.spectrographs.spectrograph.Spectrograph.allowed_mosaics`.\n        offsets (`numpy.ndarray`_ or string, optional):\n            Spatial offsets to be applied to each image before coadding.\n            Here are the possible usage cases:\n    \n                #. If ``offsets = 'auto'``, auto-compute offsets from brightest\n                   object (if exists)\n    \n                #. If ``offsets`` is something other than ``'auto'``, such\n                   as a list, these are the offsets applied to each image.\n    \n    \n                #. (*for MultiSlit only*) If ``offsets =\n                   'maskdef_offsets'``, use ``maskdef_offset`` saved by the\n                   :class:`~pypeit.slittrace.SlitTraceSet`\n    \n                #. (*for MultiSlit only*) If ``offsets = 'header'``, use the\n                   dither offsets recorded in the header\n    \n        weights (:obj:`str`, :obj:`list`, `numpy.ndarray`_):\n            Mode for the weights used to coadd images.  Options are:\n    \n                #. ``'auto'``: If brightest object exists, auto-compute the\n                   weights, otherwise use uniform weights.  ``'auto'`` is\n                   not allowed if offsets are input.\n    \n                #. ``'uniform'``: If brightest object exists, auto-compute\n                   the weights, otherwise use uniform weights.\n    \n                #. :obj:`list`, `numpy.ndarray`_:  This provides a set of\n                   ``nexp`` weights to use for each exposure.\n    \n        only_slits (:obj:`list`, optional):\n            List of slits to coadd. It must be `slitord_id`.\n        exclude_slits (:obj:`list`, optional):\n            List of slits to exclude from coaddition. It must be `slitord_id`.\n        spec_samp_fact (:obj:`float`, optional):\n            Make the wavelength grid sampling finer (``spec_samp_fact`` less\n            than 1.0) or coarser (``spec_samp_fact`` greater than 1.0) by\n            this sampling factor. This basically multiples the 'native'\n            spectral pixel size by ``spec_samp_fact``, i.e. the units of\n            ``spec_samp_fact`` are pixels.\n        spat_samp_fact (:obj:`float`, optional):\n            Make the spatial sampling finer (``spat_samp_fact`` less\n            than 1.0) or coarser (``spat_samp_fact`` greather than 1.0) by\n            this sampling factor. This basically multiples the 'native'\n            spatial pixel size by ``spat_samp_fact``, i.e. the units of\n            ``spat_samp_fact`` are pixels.\n        sn_smooth_npix (:obj:`int`, optional):\n            Number of pixels to median filter by when computing S/N used to\n            decide how to scale and weight spectra. If set to None, the code\n            will simply take 10% of the image size in the spectral\n            direction.  TODO: for truncated echelle orders we should be\n            doing something more intelligent.\n        bkg_redux (:obj:`bool`, optional):\n            If True, the sciImg has been subtracted by\n            a background image (e.g. standard treatment in the IR)\n            This parameter is passed to pypeit.reduce for determining the reduction steps.\n        find_negative (:obj:`bool`, optional):\n            Do the images have negative trace as would be generated by\n            differencing two science frames? This parameter is passed to\n            pypeit.reduce for determining the reduction steps. If True, then\n            find and mask negative object traces.\n        show (:obj:`bool`, optional):\n            Show results in ginga\n        show_peaks (:obj:`bool`, optional):\n            Plot the QA for the object finding algorithm peak finding to the\n            screen.\n        debug_offset (:obj:`bool`, optional):\n            Plot QA for debugging the automatic determination of offsets to\n            the screen.\n        debug (:obj:`bool`, optional):\n            Show QA for debugging.\nCoadd Echelle reductions.\n    \n    For documentation see :class:`CoAdd2D`.\n    \n    Echelle can either stack with:\n    \n        - input ``offsets`` or if ``offsets`` is None, it will find\n          the ``objid`` of brightest trace and stack all orders\n          relative to the trace of this object.\n    \n        - specified ``weights``, or if ``weights`` is None and\n          ``auto_weights`` is True, it will use wavelength dependent\n          weights determined from the spectrum of the brightest\n          objects ``objid`` on each order",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e7e213dccd41c27887a315e3ef409bb7a8b3ffc4fd1132eefde2f1e0d04d835c",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec2d_files",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sn_smooth_npix",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "bkg_redux",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "find_negative",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug_offsets",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.__init__",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.__init__",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "wapei6mk",
            "name": "EchelleCoAdd2D.check_input",
            "description": "Check that the number of input values (weights or offsets) is the same as the number of exposures\n    Args:\n        input (:obj:`list` or `numpy.ndarray`_): User input values (e.g., weights or offsets)\n        type (:obj:`str`): String defining what the quantities are\n    \n    Returns:\n        :obj:`list` or `numpy.ndarray`_: User input values",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "85e596c4fb74c279c133bba85f36f001f364335c81c4bb17232c311a177eba7e",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.check_input object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "type",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.check_input",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.check_input",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "36kmiwui",
            "name": "EchelleCoAdd2D.coadd",
            "description": "Construct a 2d co-add of a stack of PypeIt spec2d reduction outputs.\n    This method calls loops over slits/orders and performs the 2d-coadd by\n    calling coadd.compute.coadd2d, which 'rectifies' images by coadding them\n    about the reference_trace_stack.\n    \n    Parameters\n    ----------\n    interp_dspat : bool, optional\n       Interpolate in the spatial coordinate image to faciliate running\n       through core.extract.local_skysub_extract.  Default=True\n    \n    \n    Returns\n    -------\n    coadd_list : list\n        List of dictionaries, one for each slit, containing the 2d stack.\n        # TODO Make this a PypeIt object, with data model yada-yada.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "bb154ffb0d101cdb61b5f434501f35a1953f979d110f94499806c28c4b3cdbb5",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.coadd object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "interp_dspat",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool, optional\n   Interpolate in the spatial coordinate image to faciliate running\n   through core.extract.local_skysub_extract.  Default=True",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.coadd",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.coadd",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "x296f8uj",
            "name": "EchelleCoAdd2D.compute_offsets",
            "description": "Determine self.offsets, the offset of the frames to be coadded with respect to the first frame\n    \n    Args:\n        offsets (:obj:`list` or :obj:`str`):\n            Value that guides the determination of the offsets.\n            It could be a list of offsets, or a string, or None.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "984fca5a89756c2fb61ce4623d6a5b28a0c6734b462f895851ac9892aa5cf293",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.compute_offsets object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "Value that guides the determination of the offsets. It could be a list of offsets, or a string, or None.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.compute_offsets",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.compute_offsets",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "ttwjamle",
            "name": "EchelleCoAdd2D.compute_weights",
            "description": "Determine self.use_weights, the weights to be used in the coadd2d\n    \n    Args:\n        weights (:obj:`list` or :obj:`str`):\n            Value that guides the determination of the weights.\n            It could be a list of weights or a string. If 'auto' the weight will be computed using\n            the brightest trace, if 'uniform' uniform weights will be used.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "758450bf7a8355e8bd1610f0fcaf8e1335440656fbca6ebd658af5bfdff7e010",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.compute_weights object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": null,
                    "defaultValue": null,
                    "description": "Value that guides the determination of the weights. It could be a list of weights or a string. If 'auto' the weight will be computed using the brightest trace, if 'uniform' uniform weights will be used.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.compute_weights",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.compute_weights",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "mezwz5rt",
            "name": "EchelleCoAdd2D.create_pseudo_image",
            "description": "..todo.. see below\n    \n    THIS UNDOCUMENTED CODE PROBABLY SHOULD GENERATE AND RETURN\n    STANDARD PYPEIT OBJCTS INSTEAD OF SOME UNDEFINED DICT",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4eb07131d88280d6c89de3e19c2eb1df46026527ca6a9dbcb87e1962f824ba6a",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.create_pseudo_image object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "coadd_list",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.create_pseudo_image",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.create_pseudo_image",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "jvwz8oxo",
            "name": "EchelleCoAdd2D.default_basename",
            "description": "Construct the base name of the output spec2d file produced by coadding.\n    \n    Args:\n        spec2d_files (:obj:`list`):\n            The list of PypeIt spec2d files to be coadded.\n    \n    Returns:\n        :obj:`str`: The root base name for the output coadd2d spec2d file.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "80baca179726408b04dd0a656c3288a5e05bf5f18ac0ab812053de88b91f3b41",
            "fields": [
                {
                    "name": "spec2d_files",
                    "value": null,
                    "defaultValue": null,
                    "description": "The list of PypeIt spec2d files to be coadded.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.default_basename",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.default_basename",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "pbnkxzmq",
            "name": "EchelleCoAdd2D.default_par",
            "description": "Get the default 2D coadding parameters.\n    \n    Args:\n        spectrograph (:obj:`str`):\n            The PypeIt-specific name of the spectrograph used to collect the\n            data.\n        inp_cfg (:obj:`dict`, optional):\n            An existing set of parameters to add to.\n        det (:obj:`list`, :obj:`str`, :obj:`tuple`, optional):\n            Limit the coadding to this (set of) detector(s)/detector mosaic(s)\n        only_slits (:obj:`list`, :obj:`str`, optional):\n            Limit the coadding to this (set of) slit(s). Only_slits and exclude_slits\n            are mutually exclusive. If both are set, only_slits takes precedence.\n        exclude_slits (:obj:`list`, :obj:`str`, optional):\n            Exclude this (set of) slit(s) from the coadding. Only_slits and exclude_slits\n            are mutually exclusive. If both are set, only_slits takes precedence.\n    \n    Returns:\n        :obj:`dict`: The default set of parameters.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5db601e4c29b27ffd5125edb4281839c55a6315cd1c9a1ed1fe849fd61b58520",
            "fields": [
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "The PypeIt-specific name of the spectrograph used to collect the data.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "inp_cfg",
                    "value": null,
                    "defaultValue": null,
                    "description": "An existing set of parameters to add to.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": null,
                    "defaultValue": null,
                    "description": "Limit the coadding to this (set of) detector(s)/detector mosaic(s)",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "Limit the coadding to this (set of) slit(s). Only_slits and exclude_slits are mutually exclusive. If both are set, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "Exclude this (set of) slit(s) from the coadding. Only_slits and exclude_slits are mutually exclusive. If both are set, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.default_par",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.default_par",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "nadrevyr",
            "name": "EchelleCoAdd2D.get_brightest_obj",
            "description": "Utility routine to find the brightest object in each exposure given a specobjs_list for Echelle reductions.\n    \n    Args:\n        specobjs_list: list\n           List of SpecObjs objects.\n        echelle: bool, default=True, optional\n    \n    Returns:\n        tuple: Returns the following:\n            - objid: ndarray, int, shape (len(specobjs_list),):\n              Array of object ids representing the brightest object\n              in each exposure\n            - snr_bar: ndarray, float, shape (len(list),): Average\n              S/N over all the orders for this object",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "25681cd7c9bcfc036a4d9d101f17f054cab446e314dca5822f09e4c529f75504",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.get_brightest_obj object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "specobjs_list",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "nslits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.get_brightest_obj",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.get_brightest_obj",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "0tuzzemh",
            "name": "EchelleCoAdd2D.get_brightest_object",
            "description": "Dummy method to identify the brightest object. Overloaded by child methods.\n    \n    Parameters\n    ----------\n    specobjs_list\n    spat_ids\n    \n    Returns\n    -------",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "adbca2805d867ef71f178ae922c1c39db641729fc93b7b2261b1fb407f31c7ff",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.get_brightest_object object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "specobjs_list",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_ids",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.get_brightest_object",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.get_brightest_object",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "7db7zsqm",
            "name": "EchelleCoAdd2D.get_instance",
            "description": "Instantiate the subclass appropriate for the provided spectrograph.\n    \n    The class to instantiate must match the ``pypeline``\n    attribute of the provided ``spectrograph``, and must be a\n    subclass of :class:`CoAdd2D`; see the parent class\n    instantiation for parameter descriptions.\n    \n    Returns:\n        :class:`CoAdd2D`: One of the subclasses with\n        :class:`CoAdd2D` as its base.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "991d2b47e8634d9a51435157e59d24f58907cbe0c0001a5bd1c1e9f99386a632",
            "fields": [
                {
                    "name": "spec2dfiles",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sn_smooth_npix",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "bkg_redux",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "find_negative",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug_offsets",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.get_instance",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.get_instance",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "x_1wz_jm",
            "name": "EchelleCoAdd2D.get_maskdef_dict",
            "description": "Dummy method to get maskdef info. Overloaded by child methods.\n    \n    Args:\n        slit_idx (?):\n        ref_trace_stack (?):\n    \n    Returns:\n        dict: ?",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "647fec07b4a217c0f3f5569274f8ed43f12fdc4c91d41491adef24a54a2bf699",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.get_maskdef_dict object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slit_idx",
                    "value": null,
                    "defaultValue": null,
                    "description": "ref_trace_stack (?):",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "ref_trace_stack",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.get_maskdef_dict",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.get_maskdef_dict",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "psg6l95b",
            "name": "EchelleCoAdd2D.get_wave_grid",
            "description": "Routine to create a wavelength grid for 2d coadds using all of the\n    wavelengths of the extracted objects. Calls\n    :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`.\n    \n    Args:\n        wave_method (str):\n           The method to use to create the wavelength grid passed to :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`\n    \n    Returns:\n        tuple: Returns the following:\n            - wave_grid (`numpy.ndarray`_): New wavelength grid, not\n              masked\n            - wave_grid_mid (`numpy.ndarray`_): New wavelength grid\n              evaluated at the centers of the wavelength bins, that\n              is this grid is simply offset from wave_grid by\n              dsamp/2.0, in either linear space or log10 depending\n              on whether linear or (log10 or velocity) was\n              requested.  For iref or concatenate the linear\n              wavelength sampling will be calculated.\n            - dsamp (float): The pixel sampling for wavelength grid\n              created.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "08448b6cc53ffa3a6d3eefce9622909cee9105a11124d3bb981b8cda1f3d56bd",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.get_wave_grid object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "wave_method",
                    "value": null,
                    "defaultValue": null,
                    "description": "The method to use to create the wavelength grid passed to :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.get_wave_grid",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.get_wave_grid",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "b5j5mrdw",
            "name": "EchelleCoAdd2D.good_slitindx",
            "description": "This provides an array of index of slits in the un-coadded frames that are considered good for 2d coadding.\n    A bitmask common to all the un-coadded frames is used to determine which slits are good. Also,\n    If the `only_slits` parameter is provided only those slits are considered good for 2d coadding.\n    \n    Args:\n        only_slits (:obj:`list`, optional):\n            List of slits to combine. It must be `slitord_id`.\n            Only_slits and exclude_slits are mutually exclusive.\n            If both are provided, only_slits takes precedence.\n        exclude_slits (:obj:`list`, optional):\n            List of slits to exclude. It must be `slitord_id`.\n            Only_slits and exclude_slits are mutually exclusive.\n            If both are provided, only_slits takes precedence.\n    \n    Returns:\n        `numpy.ndarray`_: array of index of good slits in the un-coadded frames",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a0eb9963697b0261068be2fbc800f81e088a6e4826edcae4ce73ae51bdfee275",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.good_slitindx object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "List of slits to combine. It must be `slitord_id`. Only_slits and exclude_slits are mutually exclusive. If both are provided, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "List of slits to exclude. It must be `slitord_id`. Only_slits and exclude_slits are mutually exclusive. If both are provided, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.good_slitindx",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.good_slitindx",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "c3qarojl",
            "name": "EchelleCoAdd2D.load_coadd2d_stacks",
            "description": "Routine to read in required images for 2d coadds given a list of spec2d files.\n    \n    Args:\n        spec2d_files: list\n           List of spec2d filenames\n        det: int\n           detector in question\n    \n    Returns:\n        dict: Dictionary containing all the images and keys required\n        for perfomring 2d coadds.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a1b3483205a22d14ab14efcacddc07d4f0583f5a444afbba674615ddc019d612",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.load_coadd2d_stacks object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec2d",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "chk_version",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.load_coadd2d_stacks",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.load_coadd2d_stacks",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "6igogsmt",
            "name": "EchelleCoAdd2D.offset_slit_cen",
            "description": "Offset the slit centers of the slit designated by slitid by the provided offsets\n    \n    Args:\n        slitid (int):\n           ID of the slit that is being offset\n        offsets (list, `numpy.ndarray`_):\n           A list or array of offsets that are being applied to the slit center\n    \n    Returns:\n        :obj:`list`: A list of reference traces for the 2d coadding that\n        have been offset.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "123623b7fef5fe3c215969f79551cb2baf4c838dd09219bface7a1652e988667",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.offset_slit_cen object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "ID of the slit that is being offset",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "A list or array of offsets that are being applied to the slit center",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.offset_slit_cen",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.offset_slit_cen",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "o64_6u1o",
            "name": "EchelleCoAdd2D.offsets_report",
            "description": "Print out a report on the offsets\n    \n    Args:\n        offsets:\n        offsets_method:\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e45a87f2a6e2321a1e2152d3ce4f30e7eb6c2b653b0150222fbdc0f5e20ee4db",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.offsets_report object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "offsets_method:\n\nReturns:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets_method",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.offsets_report",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.offsets_report",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "5_8g0l9y",
            "name": "EchelleCoAdd2D.optimal_weights",
            "description": "Determine optimal weights for 2d coadds. This script grabs the information from SpecObjs list for the\n    object with specified slitid and objid and passes to coadd.sn_weights to determine the optimal weights for\n    each exposure.\n    \n    Parameters\n    ----------\n    slitorderid : :obj:`int`\n        The slit or order id that has the brightest object whose\n        S/N will be used to determine the weight for each frame.\n    objid : `numpy.ndarray`_\n        Array of object indices with shape = (nexp,) of the\n        brightest object whose S/N will be used to determine the\n        weight for each frame.\n    weight_method : `str`, optional\n        Weight method to be used in :func:`~pypeit.coadd.sn_weights`.\n        Options are ``'auto'``, ``'constant'``, ``'relative'``, or\n        ``'ivar'``. The default is ``'auto'``.  Behavior is as follows:\n    \n            - ``'auto'``: Use constant weights if rms_sn < 3.0, otherwise\n              use wavelength dependent.\n    \n            - ``'constant'``: Constant weights based on rms_sn**2\n    \n            - ``'uniform'``: Uniform weighting.\n    \n            - ``'wave_dependent'``: Wavelength dependent weights will be\n              used irrespective of the rms_sn ratio. This option will not\n              work well at low S/N ratio although it is useful for objects\n              where only a small fraction of the spectral coverage has high\n              S/N ratio (like high-z quasars).\n    \n            - ``'relative'``: Calculate weights by fitting to the ratio of\n              spectra? Note, relative weighting will only work well when\n              there is at least one spectrum with a reasonable S/N, and a\n              continuum.  RJC note - This argument may only be better when\n              the object being used has a strong continuum + emission lines.\n              The reference spectrum is assigned a value of 1 for all\n              wavelengths, and the weights of all other spectra will be\n              determined relative to the reference spectrum. This is\n              particularly useful if you are dealing with highly variable\n              spectra (e.g. emission lines) and require a precision better\n              than ~1 per cent.\n    \n            - ``'ivar'``: Use inverse variance weighting. This is not well\n              tested and should probably be deprecated.\n    \n    Returns\n    -------\n    rms_sn : `numpy.ndarray`_\n        Array of root-mean-square S/N value for each input spectra. Shape = (nexp,)\n    weights : list\n        List of  len(nexp) containing the signal-to-noise squared weights to be\n        applied to the spectra. This output is aligned with the vector (or\n        vectors) provided in waves which is read in by this routine, i.e. it is a\n        list of arrays of type `numpy.ndarray`_  with the same shape as those in waves.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "50ab568f61d5b0967d7c9eb98484dd2dd12657b166eb91d2e99a7388d7ab9d75",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.optimal_weights object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitorderid",
                    "value": null,
                    "defaultValue": null,
                    "description": "    The slit or order id that has the brightest object whose\n    S/N will be used to determine the weight for each frame.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "objid",
                    "value": null,
                    "defaultValue": null,
                    "description": "    Array of object indices with shape = (nexp,) of the\n    brightest object whose S/N will be used to determine the\n    weight for each frame.",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weight_method",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": " optional\n    Weight method to be used in :func:`~ or\n    ``'ivar'``. The default is ``'auto'``.  Behavior is as follows:\n\n        - ``'auto'``: Use constant weights if rms_sn < 3.0, otherwise\n          use wavelength dependent.\n\n        - ``'constant'``: Constant weights based on rms_sn**2\n\n        - ``'uniform'``: Uniform weighting.\n\n        - ``'wave_dependent'``: Wavelength dependent weights will be\n          used irrespective of the rms_sn ratio. This option will not\n          work well at low S/N ratio although it is useful for objects\n          where only a small fraction of the spectral coverage has high\n          S/N ratio (like high-z quasars).\n\n        - ``'relative'``: Calculate weights by fitting to the ratio of\n          spectra? Note, relative weighting will only work well when\n          there is at least one spectrum with a reasonable S/N, and a\n          continuum.  RJC note - This argument may only be better when\n          the object being used has a strong continuum + emission lines.\n          The reference spectrum is assigned a value of 1 for all\n          wavelengths, and the weights of all other spectra will be\n          determined relative to the reference spectrum. This is\n          particularly useful if you are dealing with highly variable\n          spectra (e.g. emission lines) and require a precision better\n          than ~1 per cent.\n\n        - ``'ivar'``: Use inverse variance weighting. This is not well\n          tested and should probably be deprecated.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.optimal_weights",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.optimal_weights",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "hzpyzqjo",
            "name": "EchelleCoAdd2D.output_paths",
            "description": "Construct the names and ensure the existence of the science and QA output directories.\n    \n    Args:\n        spec2d_files (:obj:`list`):\n            The list of PypeIt spec2d files to be coadded.  The top-level\n            directory for the coadd2d output directories is assumed to be\n            same as used by the basic reductions.  For example, if one of\n            the spec2d files is\n            ``/path/to/reductions/Science/spec2d_file.fits``, the parent\n            directory for the coadd2d directories is\n            ``/path/to/reductions/``.\n        par (:class:`~pypeit.par.pypeitpar.PypeItPar`):\n            Full set of parameters.  The only used parameters are\n            ``par['rdx']['scidir']`` and ``par['rdx']['qadir']``.  WARNING:\n            This also *alters* the value of ``par['rdx']['qadir']``!!\n        coadd_dir (:obj:`str`, optional):\n            Path to the directory to use for the coadd2d output.\n            If None, the parent of the science directory is used.\n    \n    Returns:\n        :obj:`tuple`: Two strings with the names of (1) the science output\n        directory and (2) the QA output directory.  The function also\n        creates both directories if they do not exist.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9ed2e3c05cbd23640c210f5fed17d443912cd6b293aacfd4dcd75b0437e0fa34",
            "fields": [
                {
                    "name": "spec2d_files",
                    "value": null,
                    "defaultValue": null,
                    "description": "The list of PypeIt spec2d files to be coadded.  The top-level directory for the coadd2d output directories is assumed to be same as used by the basic reductions.  For example, if one of the spec2d files is ``/path/to/reductions/Science/spec2d_file.fits``, the parent directory for the coadd2d directories is ``/path/to/reductions/``.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "Full set of parameters.  The only used parameters are",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "coadd_dir",
                    "value": null,
                    "defaultValue": null,
                    "description": "Path to the directory to use for the coadd2d output. If None, the parent of the science directory is used.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.output_paths",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.output_paths",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "yfg7v562",
            "name": "EchelleCoAdd2D.reduce",
            "description": "Method to run the reduction on coadd2d pseudo images\n    \n    Args:\n        pseudo_dict (dict):\n           Dictionary containing coadd2d pseudo images\n        show (bool):\n           If True, show the outputs to ginga and the screen analogous to run_pypeit with the -s option\n        show_peaks (bool):\n           If True, plot the object finding QA to the screen.\n        basename (str):\n           The basename for the spec2d output files.\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "77bfa44530d984dc7487787eb594510645a5afbb5a598a78320061a6cda6f73e",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.reduce object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "pseudo_dict",
                    "value": null,
                    "defaultValue": null,
                    "description": "Dictionary containing coadd2d pseudo images",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, show the outputs to ginga and the screen analogous to run_pypeit with the -s option",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "clear_ginga",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, plot the object finding QA to the screen.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_skysub_fit",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "basename",
                    "value": null,
                    "defaultValue": null,
                    "description": "The basename for the spec2d output files.\n\nReturns:",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.reduce",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.reduce",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "p1jtunvy",
            "name": "EchelleCoAdd2D.reference_trace_stack",
            "description": "Utility function for determining the reference trace about\n    which 2d coadds are performed.\n    \n    There are two modes of operation to determine the reference\n    trace for the 2d coadd of a given slit/order:\n    \n        #. ``offsets``: We stack about the center of the slit for\n           the slit in question with the input offsets added\n    \n        #. ``ojbid``: We stack about the trace of a reference\n           object for this slit given for each exposure by the\n           input objid\n    \n    Either offsets or objid must be provided, but the code will\n    raise an exception if both are provided.\n    \n    Args:\n        slitid (int):\n            The slit or order that we are currently considering\n        stack_dict (dict):\n            Dictionary containing all the images and keys\n            required for performing 2d coadds.\n        offsets (list, `numpy.ndarray`_):\n            An array of offsets with the same dimensionality as\n            the nexp, the numer of images being coadded.\n        objid (list, `numpy.ndarray`_):\n            An array of objids with the same dimensionality as\n            the nexp, the number of images being coadded.\n    \n    Returns:\n        :obj:`list`: A list of reference traces for the 2d coadding that\n        have been offset",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f83eeb4bcafb80a4aad21132a38c2b301e412cc38d2c46de913e71dcaabba1cc",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.reference_trace_stack object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "The slit or order that we are currently considering",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "An array of offsets with the same dimensionality as the nexp, the numer of images being coadded.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "objid",
                    "value": null,
                    "defaultValue": null,
                    "description": "An array of objids with the same dimensionality as the nexp, the number of images being coadded.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.reference_trace_stack",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.reference_trace_stack",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "3fg0ja2e",
            "name": "EchelleCoAdd2D.snr_report",
            "description": "..todo.. I need a doc string\n    \n    Args:\n        snr_bar:\n        slitid:\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "672579a36027c40822349f25d53182bc7ca53667c05bb26d46a2ef91cb09053d",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to EchelleCoAdd2D.snr_report object",
                    "type": "Object:pypeit.coadd2d.EchelleCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "snr_bar",
                    "value": null,
                    "defaultValue": null,
                    "description": "slitid:\n\nReturns:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.EchelleCoAdd2D.snr_report",
                    "defaultValue": "pypeit.coadd2d.EchelleCoAdd2D.snr_report",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "yyfbfd_4",
            "name": "MultiSlitCoAdd2D.__init__",
            "description": "Args:\n        spec2d_files (:obj:`list`):\n            List of spec2d files or a list of\n            :class:`~pypeit.spec2dobj.Spec2dObj` objects.\n        spectrograph (:class:`~pypeit.spectrographs.spectrograph.Spectrograph`):\n            The instrument used to collect the data to be reduced.\n        par (:class:`~pypeit.par.parset.ParSet`):\n            Processing parameters.\n        det (:obj:`int`, :obj:`tuple`, optional):\n            The 1-indexed detector number(s) to process.  If a tuple, it\n            must include detectors viable as a mosaic for the provided\n            spectrograph; see\n            :func:`~pypeit.spectrographs.spectrograph.Spectrograph.allowed_mosaics`.\n        offsets (`numpy.ndarray`_ or string, optional):\n            Spatial offsets to be applied to each image before coadding.\n            Here are the possible usage cases:\n    \n                #. If ``offsets = 'auto'``, auto-compute offsets from brightest\n                   object (if exists)\n    \n                #. If ``offsets`` is something other than ``'auto'``, such\n                   as a list, these are the offsets applied to each image.\n    \n    \n                #. (*for MultiSlit only*) If ``offsets =\n                   'maskdef_offsets'``, use ``maskdef_offset`` saved by the\n                   :class:`~pypeit.slittrace.SlitTraceSet`\n    \n                #. (*for MultiSlit only*) If ``offsets = 'header'``, use the\n                   dither offsets recorded in the header\n    \n        weights (:obj:`str`, :obj:`list`, `numpy.ndarray`_):\n            Mode for the weights used to coadd images.  Options are:\n    \n                #. ``'auto'``: If brightest object exists, auto-compute the\n                   weights, otherwise use uniform weights.  ``'auto'`` is\n                   not allowed if offsets are input.\n    \n                #. ``'uniform'``: If brightest object exists, auto-compute\n                   the weights, otherwise use uniform weights.\n    \n                #. :obj:`list`, `numpy.ndarray`_:  This provides a set of\n                   ``nexp`` weights to use for each exposure.\n    \n        only_slits (:obj:`list`, optional):\n            List of slits to coadd. It must be `slitord_id`.\n        exclude_slits (:obj:`list`, optional):\n            List of slits to exclude from coaddition. It must be `slitord_id`.\n        spec_samp_fact (:obj:`float`, optional):\n            Make the wavelength grid sampling finer (``spec_samp_fact`` less\n            than 1.0) or coarser (``spec_samp_fact`` greater than 1.0) by\n            this sampling factor. This basically multiples the 'native'\n            spectral pixel size by ``spec_samp_fact``, i.e. the units of\n            ``spec_samp_fact`` are pixels.\n        spat_samp_fact (:obj:`float`, optional):\n            Make the spatial sampling finer (``spat_samp_fact`` less\n            than 1.0) or coarser (``spat_samp_fact`` greather than 1.0) by\n            this sampling factor. This basically multiples the 'native'\n            spatial pixel size by ``spat_samp_fact``, i.e. the units of\n            ``spat_samp_fact`` are pixels.\n        sn_smooth_npix (:obj:`int`, optional):\n            Number of pixels to median filter by when computing S/N used to\n            decide how to scale and weight spectra. If set to None, the code\n            will simply take 10% of the image size in the spectral\n            direction.  TODO: for truncated echelle orders we should be\n            doing something more intelligent.\n        bkg_redux (:obj:`bool`, optional):\n            If True, the sciImg has been subtracted by\n            a background image (e.g. standard treatment in the IR)\n            This parameter is passed to pypeit.reduce for determining the reduction steps.\n        find_negative (:obj:`bool`, optional):\n            Do the images have negative trace as would be generated by\n            differencing two science frames? This parameter is passed to\n            pypeit.reduce for determining the reduction steps. If True, then\n            find and mask negative object traces.\n        show (:obj:`bool`, optional):\n            Show results in ginga\n        show_peaks (:obj:`bool`, optional):\n            Plot the QA for the object finding algorithm peak finding to the\n            screen.\n        debug_offset (:obj:`bool`, optional):\n            Plot QA for debugging the automatic determination of offsets to\n            the screen.\n        debug (:obj:`bool`, optional):\n            Show QA for debugging.\nChild of Coadd2d for Multislit and Longslit reductions. For documentation see CoAdd2d parent class above.\n    \n        # Multislit can coadd with:\n        # 1) input offsets or if offsets is None, it will find the brightest trace and compute them\n        # 2) specified weights, or if weights is None and auto_weights=True, it will compute weights using the brightest object",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "215b8fe86570db4ff7ce53db004e8255fc77e3d8119c8b5fa2b4f9849ebe2d19",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec2d_files",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sn_smooth_npix",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "bkg_redux",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "find_negative",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug_offsets",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.__init__",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.__init__",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "1or9bair",
            "name": "MultiSlitCoAdd2D.check_input",
            "description": "Check that the number of input values (weights or offsets) is the same as the number of exposures\n    Args:\n        input (:obj:`list` or `numpy.ndarray`_): User input values (e.g., weights or offsets)\n        type (:obj:`str`): String defining what the quantities are\n    \n    Returns:\n        :obj:`list` or `numpy.ndarray`_: User input values",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "885c7a0b54dde639c5ed8a7e20ae26deca8984721eb26e96abe38431b1f9fb52",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.check_input object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "type",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.check_input",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.check_input",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "o2bu0e9m",
            "name": "MultiSlitCoAdd2D.coadd",
            "description": "Construct a 2d co-add of a stack of PypeIt spec2d reduction outputs.\n    This method calls loops over slits/orders and performs the 2d-coadd by\n    calling coadd.compute.coadd2d, which 'rectifies' images by coadding them\n    about the reference_trace_stack.\n    \n    Parameters\n    ----------\n    interp_dspat : bool, optional\n       Interpolate in the spatial coordinate image to faciliate running\n       through core.extract.local_skysub_extract.  Default=True\n    \n    \n    Returns\n    -------\n    coadd_list : list\n        List of dictionaries, one for each slit, containing the 2d stack.\n        # TODO Make this a PypeIt object, with data model yada-yada.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "43523a60d5b83644920d62610ca5b1a7e73371fa83008ba5bc4df11ae272865e",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.coadd object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "interp_dspat",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool, optional\n   Interpolate in the spatial coordinate image to faciliate running\n   through core.extract.local_skysub_extract.  Default=True",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.coadd",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.coadd",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "mrncqxg7",
            "name": "MultiSlitCoAdd2D.compute_offsets",
            "description": "Determine self.offsets, the offset of the frames to be coadded with respect to the first frame\n    \n    Args:\n        offsets (:obj:`list` or :obj:`str`):\n            Value that guides the determination of the offsets.\n            It could be a list of offsets, or a string, or None. If equal to 'maskdef_offsets' the\n            offsets computed during the slitmask design matching will be used.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "eea151d8e5e23ba51c4e935b69015cd66ee89bd2e75f9f6d14ce39d9d1f53b28",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.compute_offsets object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "Value that guides the determination of the offsets. It could be a list of offsets, or a string, or None. If equal to 'maskdef_offsets' the offsets computed during the slitmask design matching will be used.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.compute_offsets",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.compute_offsets",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "ybnhw6j8",
            "name": "MultiSlitCoAdd2D.compute_weights",
            "description": "Determine the weights to be used in the coadd2d.\n    \n    This method sets the internal :attr:`use_weights`.  Documentation on the\n    form of self.use_weights needs to be written.\n    \n    Args:\n        weights (:obj:`list`, :obj:`str`):\n            Value that guides the determination of the weights.  It could be\n            a list of weights or a string. If equal to 'auto', the weight\n            will be computed using the brightest trace, if 'uniform' uniform\n            weights will be used.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "45530bf698c131003a1a63792b7ae7f9487566c514b940f18c89c6b4a5ff09df",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.compute_weights object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": null,
                    "defaultValue": null,
                    "description": "Value that guides the determination of the weights.  It could be a list of weights or a string. If equal to 'auto', the weight will be computed using the brightest trace, if 'uniform' uniform weights will be used.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.compute_weights",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.compute_weights",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "_vmflqxn",
            "name": "MultiSlitCoAdd2D.create_pseudo_image",
            "description": "..todo.. see below\n    \n    THIS UNDOCUMENTED CODE PROBABLY SHOULD GENERATE AND RETURN\n    STANDARD PYPEIT OBJCTS INSTEAD OF SOME UNDEFINED DICT",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a8010e5718abab1efa546ebab3b946b1adb29dbb18270e886d2e75ecfdda2d33",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.create_pseudo_image object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "coadd_list",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.create_pseudo_image",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.create_pseudo_image",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "qtfozqca",
            "name": "MultiSlitCoAdd2D.default_basename",
            "description": "Construct the base name of the output spec2d file produced by coadding.\n    \n    Args:\n        spec2d_files (:obj:`list`):\n            The list of PypeIt spec2d files to be coadded.\n    \n    Returns:\n        :obj:`str`: The root base name for the output coadd2d spec2d file.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "655f7bfbf11c32c2561690d4c8226f8c7741470bc3eeba43389290607770ab68",
            "fields": [
                {
                    "name": "spec2d_files",
                    "value": null,
                    "defaultValue": null,
                    "description": "The list of PypeIt spec2d files to be coadded.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.default_basename",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.default_basename",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "ms0k09fi",
            "name": "MultiSlitCoAdd2D.default_par",
            "description": "Get the default 2D coadding parameters.\n    \n    Args:\n        spectrograph (:obj:`str`):\n            The PypeIt-specific name of the spectrograph used to collect the\n            data.\n        inp_cfg (:obj:`dict`, optional):\n            An existing set of parameters to add to.\n        det (:obj:`list`, :obj:`str`, :obj:`tuple`, optional):\n            Limit the coadding to this (set of) detector(s)/detector mosaic(s)\n        only_slits (:obj:`list`, :obj:`str`, optional):\n            Limit the coadding to this (set of) slit(s). Only_slits and exclude_slits\n            are mutually exclusive. If both are set, only_slits takes precedence.\n        exclude_slits (:obj:`list`, :obj:`str`, optional):\n            Exclude this (set of) slit(s) from the coadding. Only_slits and exclude_slits\n            are mutually exclusive. If both are set, only_slits takes precedence.\n    \n    Returns:\n        :obj:`dict`: The default set of parameters.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2392c3e4abe3eebf3c7d90f5db5a048e36a335e9ce7f82fe7b23902a3041fa67",
            "fields": [
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "The PypeIt-specific name of the spectrograph used to collect the data.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "inp_cfg",
                    "value": null,
                    "defaultValue": null,
                    "description": "An existing set of parameters to add to.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": null,
                    "defaultValue": null,
                    "description": "Limit the coadding to this (set of) detector(s)/detector mosaic(s)",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "Limit the coadding to this (set of) slit(s). Only_slits and exclude_slits are mutually exclusive. If both are set, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "Exclude this (set of) slit(s) from the coadding. Only_slits and exclude_slits are mutually exclusive. If both are set, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.default_par",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.default_par",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "8hhjkw_u",
            "name": "MultiSlitCoAdd2D.get_brightest_obj",
            "description": "Utility routine to find the brightest object in each exposure given a specobjs_list for MultiSlit reductions.\n    \n    Args:\n        specobjs_list: list\n           List of SpecObjs objects.\n        spat_ids (`numpy.ndarray`_):\n    \n    Returns:\n        tuple: Returns the following:\n            - objid: ndarray, int, shape (len(specobjs_list),):\n              Array of object ids representing the brightest object\n              in each exposure\n            - slit_idx (int): 0-based index\n            - spat_id (int): SPAT_ID for slit that highest S/N ratio object is on\n              (only for pypeline=MultiSlit)\n            - snr_bar: ndarray, float, shape (len(list),): Average\n              S/N over all the orders for this object",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "39b6e1e327952c77598c7b9a441f505f8facdb0bc16f2a86115f1409dae9d3e5",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.get_brightest_obj object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "specobjs_list",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_ids",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.get_brightest_obj",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.get_brightest_obj",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "adk1aw0h",
            "name": "MultiSlitCoAdd2D.get_brightest_object",
            "description": "Dummy method to identify the brightest object. Overloaded by child methods.\n    \n    Parameters\n    ----------\n    specobjs_list\n    spat_ids\n    \n    Returns\n    -------",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "312c1d8691661b31f5cc3011429ebf89503154d15e61d984e874b3b77d1d371d",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.get_brightest_object object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "specobjs_list",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_ids",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.get_brightest_object",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.get_brightest_object",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "yk0qbdo_",
            "name": "MultiSlitCoAdd2D.get_instance",
            "description": "Instantiate the subclass appropriate for the provided spectrograph.\n    \n    The class to instantiate must match the ``pypeline``\n    attribute of the provided ``spectrograph``, and must be a\n    subclass of :class:`CoAdd2D`; see the parent class\n    instantiation for parameter descriptions.\n    \n    Returns:\n        :class:`CoAdd2D`: One of the subclasses with\n        :class:`CoAdd2D` as its base.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2ad63c13caa012a5ccf01a7bfc6dfcbd3df1cf45bd6fd06ed29c6aedd0abc6c0",
            "fields": [
                {
                    "name": "spec2dfiles",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spectrograph",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "det",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weights",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spat_samp_fact",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sn_smooth_npix",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "bkg_redux",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "find_negative",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug_offsets",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.get_instance",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.get_instance",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "73ps5a3d",
            "name": "MultiSlitCoAdd2D.get_maskdef_dict",
            "description": "Args:\n        slit_idx (:obj:`int`):\n            index of a slit in the uncoadded frames\n        ref_trace_stack (`numpy.ndarray`_):\n            Stack of reference traces about which the images are rectified\n            and coadded.  It is the slitcen appropriately shifted according\n            the frames offsets. Shape is (nspec, nimgs).\n    \n    Returns:\n        :obj:`dict`: Dictionary containing all the maskdef info. The\n        quantities saved are: maskdef_id, maskdef_objpos, maskdef_slitcen,\n        maskdef_designtab. To learn what they are see\n        :class:`~pypeit.slittrace.SlitTraceSet` datamodel.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a824aa1e4d923b923dcaad2627d02eeced1124cf188539cbd684d68768cb3f81",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.get_maskdef_dict object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slit_idx",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "ref_trace_stack",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.get_maskdef_dict",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.get_maskdef_dict",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "dtizcv96",
            "name": "MultiSlitCoAdd2D.get_wave_grid",
            "description": "Routine to create a wavelength grid for 2d coadds using all of the\n    wavelengths of the extracted objects. Calls\n    :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`.\n    \n    Args:\n        wave_method (str):\n           The method to use to create the wavelength grid passed to :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`\n    \n    Returns:\n        tuple: Returns the following:\n            - wave_grid (`numpy.ndarray`_): New wavelength grid, not\n              masked\n            - wave_grid_mid (`numpy.ndarray`_): New wavelength grid\n              evaluated at the centers of the wavelength bins, that\n              is this grid is simply offset from wave_grid by\n              dsamp/2.0, in either linear space or log10 depending\n              on whether linear or (log10 or velocity) was\n              requested.  For iref or concatenate the linear\n              wavelength sampling will be calculated.\n            - dsamp (float): The pixel sampling for wavelength grid\n              created.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "68bd834961799c2c3cc23fdbd44c1d8527b76b30af692753c92da399e3a72a68",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.get_wave_grid object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "wave_method",
                    "value": null,
                    "defaultValue": null,
                    "description": "The method to use to create the wavelength grid passed to :func:`~pypeit.core.wavecal.wvutils.get_wave_grid`",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.get_wave_grid",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.get_wave_grid",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "as9wn5u_",
            "name": "MultiSlitCoAdd2D.good_slitindx",
            "description": "This provides an array of index of slits in the un-coadded frames that are considered good for 2d coadding.\n    A bitmask common to all the un-coadded frames is used to determine which slits are good. Also,\n    If the `only_slits` parameter is provided only those slits are considered good for 2d coadding.\n    \n    Args:\n        only_slits (:obj:`list`, optional):\n            List of slits to combine. It must be `slitord_id`.\n            Only_slits and exclude_slits are mutually exclusive.\n            If both are provided, only_slits takes precedence.\n        exclude_slits (:obj:`list`, optional):\n            List of slits to exclude. It must be `slitord_id`.\n            Only_slits and exclude_slits are mutually exclusive.\n            If both are provided, only_slits takes precedence.\n    \n    Returns:\n        `numpy.ndarray`_: array of index of good slits in the un-coadded frames",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "08043ea1b54e3ad3ec6daff3a8a194883e16f9bfafe15048d6a12024d8b57864",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.good_slitindx object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "only_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "List of slits to combine. It must be `slitord_id`. Only_slits and exclude_slits are mutually exclusive. If both are provided, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "exclude_slits",
                    "value": null,
                    "defaultValue": null,
                    "description": "List of slits to exclude. It must be `slitord_id`. Only_slits and exclude_slits are mutually exclusive. If both are provided, only_slits takes precedence.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.good_slitindx",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.good_slitindx",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "24doi55r",
            "name": "MultiSlitCoAdd2D.load_coadd2d_stacks",
            "description": "Routine to read in required images for 2d coadds given a list of spec2d files.\n    \n    Args:\n        spec2d_files: list\n           List of spec2d filenames\n        det: int\n           detector in question\n    \n    Returns:\n        dict: Dictionary containing all the images and keys required\n        for perfomring 2d coadds.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "705e60ff4f98daeb606d50a69df50d316966fb81ce12811616f7d6db5079f1a4",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.load_coadd2d_stacks object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec2d",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "chk_version",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.load_coadd2d_stacks",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.load_coadd2d_stacks",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "nssqmtnz",
            "name": "MultiSlitCoAdd2D.offset_slit_cen",
            "description": "Offset the slit centers of the slit designated by slitid by the provided offsets\n    \n    Args:\n        slitid (int):\n           ID of the slit that is being offset\n        offsets (list, `numpy.ndarray`_):\n           A list or array of offsets that are being applied to the slit center\n    \n    Returns:\n        :obj:`list`: A list of reference traces for the 2d coadding that\n        have been offset.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e18158cf46258c72cbfe0fe9baa5d2fae2a7146ddfe840e0a14ac6d78fa37a5f",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.offset_slit_cen object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "ID of the slit that is being offset",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "A list or array of offsets that are being applied to the slit center",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.offset_slit_cen",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.offset_slit_cen",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "0r_osnug",
            "name": "MultiSlitCoAdd2D.offsets_report",
            "description": "Print out a report on the offsets\n    \n    Args:\n        offsets:\n        offsets_method:\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "22792baac179342713ac56b2571e54aaea51f9821e4eb548ef0a67fc627ee50c",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.offsets_report object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "offsets_method:\n\nReturns:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets_method",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.offsets_report",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.offsets_report",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "iuiwsfcw",
            "name": "MultiSlitCoAdd2D.optimal_weights",
            "description": "Determine optimal weights for 2d coadds. This script grabs the information from SpecObjs list for the\n    object with specified slitid and objid and passes to coadd.sn_weights to determine the optimal weights for\n    each exposure.\n    \n    Parameters\n    ----------\n    slitorderid : :obj:`int`\n        The slit or order id that has the brightest object whose\n        S/N will be used to determine the weight for each frame.\n    objid : `numpy.ndarray`_\n        Array of object indices with shape = (nexp,) of the\n        brightest object whose S/N will be used to determine the\n        weight for each frame.\n    weight_method : `str`, optional\n        Weight method to be used in :func:`~pypeit.coadd.sn_weights`.\n        Options are ``'auto'``, ``'constant'``, ``'relative'``, or\n        ``'ivar'``. The default is ``'auto'``.  Behavior is as follows:\n    \n            - ``'auto'``: Use constant weights if rms_sn < 3.0, otherwise\n              use wavelength dependent.\n    \n            - ``'constant'``: Constant weights based on rms_sn**2\n    \n            - ``'uniform'``: Uniform weighting.\n    \n            - ``'wave_dependent'``: Wavelength dependent weights will be\n              used irrespective of the rms_sn ratio. This option will not\n              work well at low S/N ratio although it is useful for objects\n              where only a small fraction of the spectral coverage has high\n              S/N ratio (like high-z quasars).\n    \n            - ``'relative'``: Calculate weights by fitting to the ratio of\n              spectra? Note, relative weighting will only work well when\n              there is at least one spectrum with a reasonable S/N, and a\n              continuum.  RJC note - This argument may only be better when\n              the object being used has a strong continuum + emission lines.\n              The reference spectrum is assigned a value of 1 for all\n              wavelengths, and the weights of all other spectra will be\n              determined relative to the reference spectrum. This is\n              particularly useful if you are dealing with highly variable\n              spectra (e.g. emission lines) and require a precision better\n              than ~1 per cent.\n    \n            - ``'ivar'``: Use inverse variance weighting. This is not well\n              tested and should probably be deprecated.\n    \n    Returns\n    -------\n    rms_sn : `numpy.ndarray`_\n        Array of root-mean-square S/N value for each input spectra. Shape = (nexp,)\n    weights : list\n        List of  len(nexp) containing the signal-to-noise squared weights to be\n        applied to the spectra. This output is aligned with the vector (or\n        vectors) provided in waves which is read in by this routine, i.e. it is a\n        list of arrays of type `numpy.ndarray`_  with the same shape as those in waves.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9e137e6cb53a1fee5649cf655d37deb5406d193519affcbc7d6e04d6d9fb6d88",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.optimal_weights object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitorderid",
                    "value": null,
                    "defaultValue": null,
                    "description": "    The slit or order id that has the brightest object whose\n    S/N will be used to determine the weight for each frame.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "objid",
                    "value": null,
                    "defaultValue": null,
                    "description": "    Array of object indices with shape = (nexp,) of the\n    brightest object whose S/N will be used to determine the\n    weight for each frame.",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weight_method",
                    "value": "auto",
                    "defaultValue": "auto",
                    "description": " optional\n    Weight method to be used in :func:`~ or\n    ``'ivar'``. The default is ``'auto'``.  Behavior is as follows:\n\n        - ``'auto'``: Use constant weights if rms_sn < 3.0, otherwise\n          use wavelength dependent.\n\n        - ``'constant'``: Constant weights based on rms_sn**2\n\n        - ``'uniform'``: Uniform weighting.\n\n        - ``'wave_dependent'``: Wavelength dependent weights will be\n          used irrespective of the rms_sn ratio. This option will not\n          work well at low S/N ratio although it is useful for objects\n          where only a small fraction of the spectral coverage has high\n          S/N ratio (like high-z quasars).\n\n        - ``'relative'``: Calculate weights by fitting to the ratio of\n          spectra? Note, relative weighting will only work well when\n          there is at least one spectrum with a reasonable S/N, and a\n          continuum.  RJC note - This argument may only be better when\n          the object being used has a strong continuum + emission lines.\n          The reference spectrum is assigned a value of 1 for all\n          wavelengths, and the weights of all other spectra will be\n          determined relative to the reference spectrum. This is\n          particularly useful if you are dealing with highly variable\n          spectra (e.g. emission lines) and require a precision better\n          than ~1 per cent.\n\n        - ``'ivar'``: Use inverse variance weighting. This is not well\n          tested and should probably be deprecated.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.optimal_weights",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.optimal_weights",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "n24uueii",
            "name": "MultiSlitCoAdd2D.output_paths",
            "description": "Construct the names and ensure the existence of the science and QA output directories.\n    \n    Args:\n        spec2d_files (:obj:`list`):\n            The list of PypeIt spec2d files to be coadded.  The top-level\n            directory for the coadd2d output directories is assumed to be\n            same as used by the basic reductions.  For example, if one of\n            the spec2d files is\n            ``/path/to/reductions/Science/spec2d_file.fits``, the parent\n            directory for the coadd2d directories is\n            ``/path/to/reductions/``.\n        par (:class:`~pypeit.par.pypeitpar.PypeItPar`):\n            Full set of parameters.  The only used parameters are\n            ``par['rdx']['scidir']`` and ``par['rdx']['qadir']``.  WARNING:\n            This also *alters* the value of ``par['rdx']['qadir']``!!\n        coadd_dir (:obj:`str`, optional):\n            Path to the directory to use for the coadd2d output.\n            If None, the parent of the science directory is used.\n    \n    Returns:\n        :obj:`tuple`: Two strings with the names of (1) the science output\n        directory and (2) the QA output directory.  The function also\n        creates both directories if they do not exist.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0ca5267df89ce51d910aa428c405bf3852f9476c9673476bda626d7404a76156",
            "fields": [
                {
                    "name": "spec2d_files",
                    "value": null,
                    "defaultValue": null,
                    "description": "The list of PypeIt spec2d files to be coadded.  The top-level directory for the coadd2d output directories is assumed to be same as used by the basic reductions.  For example, if one of the spec2d files is ``/path/to/reductions/Science/spec2d_file.fits``, the parent directory for the coadd2d directories is ``/path/to/reductions/``.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "par",
                    "value": null,
                    "defaultValue": null,
                    "description": "Full set of parameters.  The only used parameters are",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "coadd_dir",
                    "value": null,
                    "defaultValue": null,
                    "description": "Path to the directory to use for the coadd2d output. If None, the parent of the science directory is used.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.output_paths",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.output_paths",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "bodfh8lj",
            "name": "MultiSlitCoAdd2D.reduce",
            "description": "Method to run the reduction on coadd2d pseudo images\n    \n    Args:\n        pseudo_dict (dict):\n           Dictionary containing coadd2d pseudo images\n        show (bool):\n           If True, show the outputs to ginga and the screen analogous to run_pypeit with the -s option\n        show_peaks (bool):\n           If True, plot the object finding QA to the screen.\n        basename (str):\n           The basename for the spec2d output files.\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "54d2c17409df08a6381a9ae48a7146ffd93987d2539b9cbfa8e74e7b25da494c",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.reduce object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "pseudo_dict",
                    "value": null,
                    "defaultValue": null,
                    "description": "Dictionary containing coadd2d pseudo images",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, show the outputs to ginga and the screen analogous to run_pypeit with the -s option",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "clear_ginga",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_peaks",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, plot the object finding QA to the screen.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "show_skysub_fit",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "basename",
                    "value": null,
                    "defaultValue": null,
                    "description": "The basename for the spec2d output files.\n\nReturns:",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.reduce",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.reduce",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "50rfxwwo",
            "name": "MultiSlitCoAdd2D.reference_trace_stack",
            "description": "..todo..  I need a doc string\n    \n    Args:\n        slitid:\n        offsets:\n        objid:\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3dfba000a698706a4d14e92f19333040e2c17f9b8e37bf4dfa3e88f929251526",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.reference_trace_stack object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "offsets:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "offsets",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "objid",
                    "value": null,
                    "defaultValue": null,
                    "description": "Returns:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.reference_trace_stack",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.reference_trace_stack",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "darrhtvl",
            "name": "MultiSlitCoAdd2D.snr_report",
            "description": "..todo.. I need a doc string\n    \n    Args:\n        snr_bar:\n        slitid:\n    \n    Returns:",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0d3024a930be53ae57b6e1c37fb9ddbc71cc0ea896368baba326e63beda6dfde",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to MultiSlitCoAdd2D.snr_report object",
                    "type": "Object:pypeit.coadd2d.MultiSlitCoAdd2D",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "snr_bar",
                    "value": null,
                    "defaultValue": null,
                    "description": "slitid:\n\nReturns:",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "slitid",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.coadd2d.MultiSlitCoAdd2D.snr_report",
                    "defaultValue": "pypeit.coadd2d.MultiSlitCoAdd2D.snr_report",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "c93rzdcz",
            "name": "moment1d",
            "description": "Compute one-dimensional moments of the provided image within an\n    aperture along its second axis (axis=1).\n    \n    This method allows for computations of the zeroth, first, and\n    second moments (see `order`). The aperture used for the\n    calculation is centered at the provided `col` pixel with a width\n    defined by `width`; however, this definition depends on the type\n    of weighting applied (see `weighting`). Formulae for each moment\n    are as follows. The zeroth moment (`order=0`) computes the\n    discrete weighted sum of the flux within the aperture:\n    \n    .. math::\n        \\mu_0 &= \\sum_i w_i f_i \\\\\n        \\epsilon_{\\mu_0}^2 &= \\sum_i (w_i \\epsilon_{f,i})^2,\n    \n    where :math:`f` is the flux in each pixel :math:`i`,\n    :math:`\\epsilon_f` is its error, and :math:`w` is the assigned\n    weight (see `weighting`).  The first moment (`order=1`) computes the\n    flux-weighted center of window:\n    \n    .. math::\n        \\mu_1 &= \\frac{\\sum_i x_i w_i f_i }{\\mu_0} \\\\\n        \\epsilon_{\\mu_1}^2 &= \\mu_0^{-2}\\ \\sum_i [ w_i \\epsilon_{f,i}\\\n                            (x_i - \\mu_1)]^2,\n    \n    where :math:`x` is the pixel position along the 2nd axis (see\n    `col`).  The second moment (`order=2`) computes the variance of the\n    flux profile about its center within the window:\n    \n    .. math::\n        \\mu_2 &= \\frac{\\sum_i x^2_i w_i f_i }{\\mu_0} - \\mu_1^2 \\\\\n        \\epsilon_{\\mu_2}^2 &= \\mu_0^{-2}\\ \\sum_i w^2_i \\epsilon^2_{f,i}\\\n                                [(x_i - \\mu_1)^2 + \\mu_2]^2.\n    \n    The values returned for the second-moment calculation are actually\n    the standard deviation instead of the variance, where:\n    \n    .. math::\n        \\sigma = \\sqrt{\\mu_2} \\\\\n        \\epsilon_{\\sigma} = \\frac{\\epsilon_{\\mu_2}}{2 \\sigma}.\n    \n    The method uses `numpy.ma.MaskedArray` objects to keep track of\n    math errors, such as divisions by 0. The returned boolean array\n    indicates when these errors occurred, and the method replaces\n    these errors with the original centers.\n    \n    The shape of arrays depend on the shapes of the input image\n    (`flux`), columns about which to perform the calculation (`col`),\n    and rows from which to select the column data (`row`) as listed\n    below.  In the following, the input flux array must be 2D and has\n    shape :math:`(N_{\\rm row}, N_{\\rm col})`, whereas the number of rows\n    and columns identified for a moment calculation are :math:`N_{\\rm\n    mom,row}` and :math:`N_{\\rm mom,col}`, respectively.  The possible\n    shapes of the output arrays are:\n    \n        - If `row` is None and `col` is 1D, the moments are calculated\n          centered at each `col` for all rows in `flux`. The shape of\n          the array for each moment is then :math:`(N_{\\rm row}, N_{\\rm\n          mom,col})`\n        - If `row` is None and `col` is 2D, `col` must have shape\n          :math:`(N_{\\rm row}, N_{\\rm mom,col})` and the shape of the\n          output array per moment calculated is the same.\n        - If `row` is a single integer and `col` is 1D, the moments are\n          calculated for each col only at the provided row in `flux`.\n          The shape of the array for each moment is then :math:`(N_{\\rm\n          mom,col},)`.\n        - If `row` is a 1D integer array and `col` is 1D, the default\n          behavior is for the moments to be calculated at each col\n          for each provided row. The shape of the array for each\n          moment would then be :math:`(N_{\\rm mom,row},N_{\\rm\n          mom,col})`. This will be true even if :math:`N_{\\rm\n          mom,row} = N_{\\rm mom,col}`, as long as `mesh` is `True`.\n          However, if :math:`N_{\\rm mom,row} = N_{\\rm mom,col}` and\n          `mesh` is `False`, only the matched pairs of `col` and\n          `row` will be used and the output shape per moment will be\n          :math:`(N_{\\rm mom,row},)`.\n        - If `row` is a 1D integer array and `col` is 2D, the first axis\n          of `col` must be the same length as `row`. The shape of the\n          array for each moment is then :math:`(N_{\\rm mom,row},N_{\\rm\n          mom,col})`, which is the same as the input `col`.\n        - If `row` is 2D and `col` is 2D, they must have the same shape.\n        - If `row` is a single integer and `col` is 2D, or if `row` is\n          2D and `col` is 1D, the method raises an error.\n    \n    .. note::\n    \n        - This is an entirely general function, as reflected by the\n          nomenclature used in the call. As used within PypeIt, the\n          PypeIt image orientation convention means that moments are\n          always taken along the spatial direction; i.e., `col` is\n          the spatial coordinate and `row` is the spectral\n          coordinate.\n    \n        - This function is a generalization of and builds on the\n          heritage of functions in idlspec2d, specifically\n          trace_fweight, trace_gweight, extrace_asymbox2,\n          extract_boxcar.\n    \n    .. warning::\n    \n        The function has significant setup/input checking. Most of\n        this introduces limited overhead with the exception of the\n        handling of `ivar`, `bpm`, and `fwgt`. If any of these are\n        provided as `None` on input, an array is constructed (unity\n        for `ivar` and `fwgt` and all False for `bpm`) that serves as\n        a place holder. If repetitive calls to the function are\n        expected and any of these arrays are missing, significant\n        efficiency gains can be made by providing pre-built values\n        for these arrays so that time isn't lost in allocating the\n        placeholder arrays in every call.\n    \n    .. todo::\n    \n        Optimize the code for efficiency, regardless of the input.\n    \n    Args:\n        flux (`numpy.ndarray`_):\n            Intensity image with shape :math:`(N_{\\rm row}, N_{\\rm\n            col})`.\n        col (`numpy.ndarray`_):\n            Floating-point center along the 2nd axis for the integration\n            window in pixel index (first value located at index 0).\n            This can either be a 1D or 2D array.  See restrictions on\n            the shape in the description above.\n        width (:obj:`float`, `numpy.ndarray`_):\n            The meaning of the parameter depends on the value of\n            `weighting`.  If `weighting=='uniform'`, the width of the\n            integration window in columns, centered at the input `col`.\n            If `weighting=='gaussian'`, the :math:`\\sigma` of a\n            pixelated Gaussian weighting function.  The width of the\n            integration window in columns, centered at the input `col`,\n            is always `6*width` (i.e., the half-width is\n            :math:`3\\sigma`).  The provided value can be a scalar to use\n            a constant window definition, or it can be an array variable\n            integration window where the array must have the same shape\n            as `col`.\n        ivar (`numpy.ndarray`_, optional):\n            Inverse variance of the image intensity.  If not provided,\n            unity variance is used.  If provided, must have the same\n            shape as `flux`.\n        bpm (`numpy.ndarray`_, optional):\n            Boolean bad-pixel mask for the input image. True values\n            are ignored, False values are included. If not provided,\n            all pixels are included. If provided, must have the same\n            shape as `flux`.\n        fwgt (`numpy.ndarray`_, optional):\n            An additional weight to apply to each pixel in `flux`.  If\n            None, weights are uniform.  Otherwise, the :math:`w_i` from\n            above are the product of this weight and the result of the\n            scheme set using the `weighting` argument.\n        row (:obj:`int`, `numpy.ndarray`_, optional):\n            Integer or integer array with the position along the first\n            axis (axis=0) for the moment calculation.  This can either\n            be None, an integer, or a 1D or 2D array.  See restrictions\n            on the shape in the description above.\n        weighting (:obj:`str`, optional):\n            The weighting to apply to the position within each\n            integration window (see `width` above). This must be\n            (case-insensitive) either 'uniform' for uniform weighting or\n            'gaussian' for weighting by a Gaussian centered at the input\n            guess coordinates and integrated over the pixel width.\n        order (:obj:`int`, array-like, optional):\n            The order of the moment(s) to calculate. Can be a single\n            integer or a list. Moments to calculate must be 0, 1, or\n            2; at most order can be `[0,1,2]`. The shape of the\n            output arrays depends on the number of moments\n            calculated. Note that the calculation of the orders is\n            necessarily sequential; i.e., setting `order=2` means\n            that the zeroth and first moments have to be calculated\n            anyway. The order must be provided in sorted order; i.e.,\n            you cannot pass `order=[2,1]`.\n        bounds (:obj:`tuple`, optional):\n            A two-tuple with the lower and upper limit for each\n            moment order. If None, no bounds are imposed. If not\n            None, an upper and lower bound must be provided for each\n            moment to compute; i.e., if more than one moment is\n            computed, each element of the two-tuple must be an\n            array-like object that matches the length of `order`. To\n            set an upper or lower bound only, set the unbounded\n            component to None. Bounds for the zeroth and second order\n            moments are in an absolute sense, whereas first-order\n            bounds are relative to the input `col`. Measurements that\n            hit the bounds are masked; see the description of the\n            returned objects. For example, to flag anything without a\n            positive zeroth moment or a maximum shift from the input\n            center of 1 pixel, call the method with arguments::\n    \n                order=[0,1], bounds=([0,-1], [None,1])\n            \n        fill_error (:obj:`float`, optional):\n            Value to use as filler for undetermined moments,\n            resulting from either the input bad-pixel mask or\n            computational issues (division by zero, etc.; see return\n            description below).\n        mesh (:obj:`bool`, optional):\n            If `col` and `row` are 1D vectors of the same length,\n            this determines if each `col` and `row` should be paired\n            (`mesh is False`) or used to construct a grid, i.e.,\n            every `col` combined with every `row` (`mesh is True`).\n            See the method description.\n    \n    Returns:\n        Three `numpy.ndarray`_ objects are returned. If more than one\n        moment order is requested, the moments are ordered along the\n        first axis; e.g., if `order=[0,1]` the outputs `moment[0]` and\n        `moment[1]` contain the zeroth and first moments, respectively.\n        The subsequent dimensions of the output arrays are dictated by\n        the input `row` and `col`; see the method description. The\n        returned arrays are:\n    \n            - The moment calculated along the 2nd axis of the input\n              image (axis=1).  Masked values (indicated by the third\n              object returned) are 0 for the zeroth and second moments\n              and equal to the input `col` value for the first moments.\n            - The formal propagated error (see equations above) in the\n              moments.  Errors are only meaningful if `ivar` is\n              provided. Masked values (indicated by the third object\n              returned) are set to `fill_error`.\n            - A boolean bad-pixel mask for output data; True values\n              should be ignored, False values are valid measurements.\n    \n    Raises:\n        ValueError:\n            Raised if input shapes are not correct or if the selected\n            `weighting` is unknown.  See method description.\n    \n    Examples:\n    \n        First setup an image with some Gaussians:\n    \n        >>> from pypeit.core.moment import moment1d\n        >>> import numpy as np\n        >>> from scipy.special import erf\n        >>> def gauss_comb():\n        ...     c = [45,50,55]\n        ...     img = np.zeros((len(c),100), dtype=float)\n        ...     x = np.arange(100)\n        ...     sig = 5.\n        ...     for i,_c in enumerate(c):\n        ...         img[i,:] = (erf((x-c[i]+0.5)/np.sqrt(2)/sig) \n        ...                         - erf((x-c[i]-0.5)/np.sqrt(2)/sig))/2.\n        ...     return img\n        ...\n        >>> img = gauss_comb()\n    \n        Calculate all moments at one column and row:\n        \n        >>> mu, mue, flag = moment1d(img, 50, 40., row=0, order=[0,1,2])\n        >>> print(mu)\n        [ 0.99858297 45.02314924  4.97367636]\n    \n        Calculate all moments at one column for all rows:\n        \n        >>> moment1d(img, 50, 40., order=[0,1,2])[0]\n        array([[ 0.99858297,  0.99993125,  0.99858297],\n               [45.02314924, 50.        , 54.97685076],\n               [ 4.97367636,  5.00545947,  4.97367636]])\n    \n        Calculate zeroth moments in all rows centered at column 50\n        \n        >>> moment1d(img, 50, 40., order=0)[0]\n        array([0.99858297, 0.99993125, 0.99858297])\n    \n        Calculate zeroth moments in all rows for three column positions\n        \n        >>> moment1d(img, [45,50,55], 40., order=0, mesh=True)[0]\n        array([[0.99993125, 0.99858297, 0.97670951],\n               [0.99858297, 0.99993125, 0.99858297],\n               [0.97670951, 0.99858297, 0.99993125]])\n    \n        Calculate first moments in all rows for the three column positions\n        \n        >>> moment1d(img, [45,50,55], 40., order=1, mesh=True)[0]\n        array([[45.        , 45.02314924, 45.2814655 ],\n               [49.97685076, 50.        , 50.02314924],\n               [54.7185345 , 54.97685076, 55.        ]])\n    \n        Or pick the same column for all rows\n        \n        >>> moment1d(img, 50, 40., row=[0,1,2], order=1)[0]\n        array([45.02314924, 50.        , 54.97685076])\n    \n        Or pick a column unique to each row\n        \n        >>> moment1d(img, [43,52,57], 40., row=[0,1,2], order=1)[0]\n        array([44.99688181, 50.00311819, 55.00311819])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0e44cb2c4efaeea84edc43017b19c843567e804ebc5fb8fb08c9f27dacf6e305",
            "fields": [
                {
                    "name": "flux",
                    "value": null,
                    "defaultValue": null,
                    "description": "Intensity image with shape :math:`(N_{\\rm row}, N_{\\rm col})`.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "col",
                    "value": null,
                    "defaultValue": null,
                    "description": "Floating-point center along the 2nd axis for the integration window in pixel index (first value located at index 0). This can either be a 1D or 2D array.  See restrictions on the shape in the description above.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "width",
                    "value": null,
                    "defaultValue": null,
                    "description": "The meaning of the parameter depends on the value of `weighting`.  If `weighting=='uniform'`, the width of the integration window in columns, centered at the input `col`. If `weighting=='gaussian'`, the :math:`\\sigma` of a pixelated Gaussian weighting function.  The width of the integration window in columns, centered at the input `col`, is always `6*width` (i.e., the half-width is :math:`3\\sigma`).  The provided value can be a scalar to use a constant window definition, or it can be an array variable integration window where the array must have the same shape as `col`.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "ivar",
                    "value": null,
                    "defaultValue": null,
                    "description": "Inverse variance of the image intensity.  If not provided, unity variance is used.  If provided, must have the same shape as `flux`.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "bpm",
                    "value": null,
                    "defaultValue": null,
                    "description": "Boolean bad-pixel mask for the input image. True values are ignored, False values are included. If not provided, all pixels are included. If provided, must have the same shape as `flux`.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "fwgt",
                    "value": null,
                    "defaultValue": null,
                    "description": "An additional weight to apply to each pixel in `flux`.  If None, weights are uniform.  Otherwise, the :math:`w_i` from above are the product of this weight and the result of the scheme set using the `weighting` argument.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "row",
                    "value": null,
                    "defaultValue": null,
                    "description": "Integer or integer array with the position along the first axis (axis=0) for the moment calculation.  This can either be None, an integer, or a 1D or 2D array.  See restrictions on the shape in the description above.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "weighting",
                    "value": "uniform",
                    "defaultValue": "uniform",
                    "description": "The weighting to apply to the position within each integration window (see `width` above). This must be (case-insensitive) either 'uniform' for uniform weighting or 'gaussian' for weighting by a Gaussian centered at the input guess coordinates and integrated over the pixel width.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "order",
                    "value": 0,
                    "defaultValue": 0,
                    "description": "The order of the moment(s) to calculate. Can be a single integer or a list. Moments to calculate must be 0, 1, or 2; at most order can be `[0,1,2]`. The shape of the output arrays depends on the number of moments calculated. Note that the calculation of the orders is necessarily sequential; i.e., setting `order=2` means that the zeroth and first moments have to be calculated anyway. The order must be provided in sorted order; i.e., you cannot pass `order=[2,1]`.",
                    "type": "Integer",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "bounds",
                    "value": null,
                    "defaultValue": null,
                    "description": "A two-tuple with the lower and upper limit for each moment order. If None, no bounds are imposed. If not None, an upper and lower bound must be provided for each moment to compute; i.e., if more than one moment is computed, each element of the two-tuple must be an array-like object that matches the length of `order`. To set an upper or lower bound only, set the unbounded component to None. Bounds for the zeroth and second order moments are in an absolute sense, whereas first-order bounds are relative to the input `col`. Measurements that hit the bounds are masked; see the description of the returned objects. For example, to flag anything without a positive zeroth moment or a maximum shift from the input",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "fill_error",
                    "value": -1.0,
                    "defaultValue": -1.0,
                    "description": "Value to use as filler for undetermined moments, resulting from either the input bad-pixel mask or computational issues (division by zero, etc.; see return description below).",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "mesh",
                    "value": false,
                    "defaultValue": false,
                    "description": "If `col` and `row` are 1D vectors of the same length, this determines if each `col` and `row` should be paired (`mesh is False`) or used to construct a grid, i.e., every `col` combined with every `row` (`mesh is True`). See the method description.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.core.moment",
                    "defaultValue": "pypeit.core.moment",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.core.moment.moment1d",
                    "defaultValue": "pypeit.core.moment.moment1d",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "5zjqqyyy",
            "name": "vstack",
            "description": "Stack tables vertically (along rows).\n    \n    A ``join_type`` of 'exact' means that the tables must all have exactly\n    the same column names (though the order can vary).  If ``join_type``\n    is 'inner' then the intersection of common columns will be the output.\n    A value of 'outer' (default) means the output will have the union of\n    all columns, with table values being masked where no common values are\n    available.\n    \n    Parameters\n    ----------\n    tables : `~astropy.table.Table` or `~astropy.table.Row` or list thereof\n        Table(s) to stack along rows (vertically) with the current table\n    join_type : str\n        Join type ('inner' | 'exact' | 'outer'), default is 'outer'\n    metadata_conflicts : str\n        How to proceed with metadata conflicts. This should be one of:\n            * ``'silent'``: silently pick the last conflicting meta-data value\n            * ``'warn'``: pick the last conflicting meta-data value, but emit a warning (default)\n            * ``'error'``: raise an exception.\n    \n    Returns\n    -------\n    stacked_table : `~astropy.table.Table` object\n        New table containing the stacked data from the input tables.\n    \n    Examples\n    --------\n    To stack two tables along rows do::\n    \n      >>> from astropy.table import vstack, Table\n      >>> t1 = Table({'a': [1, 2], 'b': [3, 4]}, names=('a', 'b'))\n      >>> t2 = Table({'a': [5, 6], 'b': [7, 8]}, names=('a', 'b'))\n      >>> print(t1)\n       a   b\n      --- ---\n        1   3\n        2   4\n      >>> print(t2)\n       a   b\n      --- ---\n        5   7\n        6   8\n      >>> print(vstack([t1, t2]))\n       a   b\n      --- ---\n        1   3\n        2   4\n        5   7\n        6   8",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "937c32f933304b22ec503b644eb817d57122404ad1b43689d43ace7c54a8b811",
            "fields": [
                {
                    "name": "tables",
                    "value": null,
                    "defaultValue": null,
                    "description": "`~astropy.table.Table` or `~astropy.table.Row` or list thereof\n    Table(s) to stack along rows (vertically) with the current table",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "join_type",
                    "value": "outer",
                    "defaultValue": "outer",
                    "description": "str\n    Join type ('inner' | 'exact' | 'outer'), default is 'outer'",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "metadata_conflicts",
                    "value": "warn",
                    "defaultValue": "warn",
                    "description": "str\n    How to proceed with metadata conflicts. This should be one of:\n        * ``'silent'``: silently pick the last conflicting meta-data value\n        * ``'warn'``: pick the last conflicting meta-data value, but emit a warning (default)\n        * ``'error'``: raise an exception.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "astropy.table.operations",
                    "defaultValue": "astropy.table.operations",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "astropy.table.operations.vstack",
                    "defaultValue": "astropy.table.operations.vstack",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}