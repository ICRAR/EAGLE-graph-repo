{
    "modelData": {
        "filePath": "pypeit_wavemodel.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "Module to create models of arc lines.\n\n.. include:: ../include/links.rst",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.3",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "pypeit",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "0639a07efbf16c0d43948bc34606b4f70a551ca194f6d2819be79ef5c1fe2878",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755101137.801565,
        "numLGNodes": 16
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "hfcmd_sv",
            "name": "wavemodel.addlines2spec",
            "description": "Create a spectrum with a set of (gaussian) emission lines.\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength vector of the input spectrum\n    wl_line : `numpy.ndarray`_\n        wavelength of each individual line\n    fl_line : `numpy.ndarray`_\n        flux of each individual line\n    resolution : float\n        resolution of the spectrograph. In other words, the lines\n        will have a FWHM equal to:\n        fwhm_line = wl_line / resolution\n    scale_spec : float\n        rescale all the  normalization of the final spectrum.\n        Default scale_spec=1.\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    line_spec : `numpy.ndarray`_\n        Spectrum with lines",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7cad336d15c047832a7360e42aa324155aa8136e3c1063b621095ac008d28242",
            "fields": [
                {
                    "id": "1443wes3",
                    "encoding": "",
                    "name": "wavelength",
                    "value": "",
                    "defaultValue": "",
                    "description": "wavelength vector of the input spectrum",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cbw3tj7g",
                    "encoding": "",
                    "name": "wl_line",
                    "value": "",
                    "defaultValue": "",
                    "description": "wavelength of each individual line",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vyc6tvfx",
                    "encoding": "",
                    "name": "fl_line",
                    "value": "",
                    "defaultValue": "",
                    "description": "flux of each individual line",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "409pmx13",
                    "encoding": "",
                    "name": "resolution",
                    "value": "",
                    "defaultValue": "",
                    "description": "resolution of the spectrograph. In other words, the lines\nwill have a FWHM equal to:\nfwhm_line = wl_line / resolution",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z4sk9uxk",
                    "encoding": "",
                    "name": "scale_spec",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "rescale all the  normalization of the final spectrum.\nDefault scale_spec=1.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r76cj6r3",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True will show debug plots",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kuq9llx0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.addlines2spec",
                    "defaultValue": "pypeit.wavemodel.addlines2spec",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xfqm6je0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u0_5onmo",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "hgo33qnr",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9z3sr30w",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zymu3jd9",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fn_xadxv",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "5rqd6hb2",
            "name": "wavemodel.airtovac",
            "description": "Convert air-based wavelengths to vacuum\n    \n    Parameters\n    ----------\n    wave: `astropy.units.Quantity`_\n        Wavelengths to convert\n    \n    Returns\n    -------\n    new_wave: `astropy.units.Quantity`_\n        Wavelength array corrected to vacuum wavelengths",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "dd2b6c9bf8a8be6e08d55b4b691566f5cecead5e7f2c58db05d225f4dc1d864c",
            "fields": [
                {
                    "id": "tcl26pau",
                    "encoding": "",
                    "name": "wave",
                    "value": "",
                    "defaultValue": "",
                    "description": "Wavelengths to convert",
                    "type": "astropy.units.Quantity",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rlg273t2",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.airtovac",
                    "defaultValue": "pypeit.wavemodel.airtovac",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6mbzyq90",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h9777iby",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "acnj9nqo",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jzf7h6l8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "scyh3uk7",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n6huwcfi",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "c6ii8yvv",
            "name": "wavemodel.blackbody",
            "description": "Given wavelength [in microns] and Temperature in Kelvin\n    it returns the black body emission.\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength vector in microns\n    T_BB : float \n        black body temperature in Kelvin. Default is set to:\n        T_BB = 250.\n    \n    Returns\n    -------\n    blackbody : `numpy.ndarray`_\n        spectral radiance of the black body in cgs units:\n        B_lambda = 2.*h*c^2/lambda^5.*(1./(exp(h*c/(lambda*k_b*T_BB))-1.)\n    blackbody_counts : `numpy.ndarray`_\n        Same as above but in flux density",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c7d511b30580d5b8b08ec9d308341bf1a61dcdb067782110e6556f35164f9492",
            "fields": [
                {
                    "id": "10oa6c6a",
                    "encoding": "",
                    "name": "wavelength",
                    "value": "",
                    "defaultValue": "",
                    "description": "wavelength vector in microns",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ngcbo7a6",
                    "encoding": "",
                    "name": "T_BB",
                    "value": 250.0,
                    "defaultValue": 250.0,
                    "description": "black body temperature in Kelvin. Default is set to:\nT_BB = 250.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jwuym8aa",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "soc9dd7q",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.blackbody",
                    "defaultValue": "pypeit.wavemodel.blackbody",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ub3qnabm",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u_qqqwj0",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kwdinsar",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c1fx0vz0",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yjwcg210",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "74fx7cox",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "qs23ocnj",
            "name": "wavemodel.conv2res",
            "description": "Convolve an imput spectrum to a specific resolution. This is only\n    approximate. It takes a fix FWHM for the entire spectrum given by:\n    fwhm = wl_cent / resolution\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength\n    flux : `numpy.ndarray`_\n        flux\n    resolution : float\n        resolution of the spectrograph\n    central_wl \n        if 'midpt' the central pixel of wavelength is used, otherwise\n        the central_wl will be used.\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    flux_convolved : `numpy.ndarray`_\n        Resulting flux after convolution\n    px_sigma : float\n        Size of the sigma in pixels at central_wl\n    px_bin : float\n        Size of one pixel at central_wl",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "283a1aee467c23b46f078308a2fd265398bc170166537a146c7aac0205541ec3",
            "fields": [
                {
                    "id": "u_z9_35v",
                    "encoding": "",
                    "name": "wavelength",
                    "value": "",
                    "defaultValue": "",
                    "description": "wavelength",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xajoyjtl",
                    "encoding": "",
                    "name": "flux",
                    "value": "",
                    "defaultValue": "",
                    "description": "flux",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qz2aqhrp",
                    "encoding": "",
                    "name": "resolution",
                    "value": "",
                    "defaultValue": "",
                    "description": "resolution of the spectrograph",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ioodlun7",
                    "encoding": "",
                    "name": "central_wl",
                    "value": "midpt",
                    "defaultValue": "midpt",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yn3l4sdk",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True will show debug plots",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x74o8tlt",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.conv2res",
                    "defaultValue": "pypeit.wavemodel.conv2res",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9qpc9tqx",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "80ke7ac0",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "c3n9qg5c",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f1vou_54",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q7t2nze3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "olp9k5vf",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "zk0vh8rt",
            "name": "wavemodel.convolve",
            "description": "Convolve an array with a kernel.\n    \n    This routine differs from `scipy.ndimage.convolve` because\n    it includes a special treatment for ``NaN`` values. Rather than\n    including ``NaN`` values in the array in the convolution calculation, which\n    causes large ``NaN`` holes in the convolved array, ``NaN`` values are\n    replaced with interpolated values using the kernel as an interpolation\n    function.\n    \n    Parameters\n    ----------\n    array : `~astropy.nddata.NDData` or array-like\n        The array to convolve. This should be a 1, 2, or 3-dimensional array\n        or a list or a set of nested lists representing a 1, 2, or\n        3-dimensional array.  If an `~astropy.nddata.NDData`, the ``mask`` of\n        the `~astropy.nddata.NDData` will be used as the ``mask`` argument.\n    kernel : `numpy.ndarray` or `~astropy.convolution.Kernel`\n        The convolution kernel. The number of dimensions should match those for\n        the array, and the dimensions should be odd in all directions.  If a\n        masked array, the masked values will be replaced by ``fill_value``.\n    boundary : str, optional\n        A flag indicating how to handle boundaries:\n            * `None`\n                Set the ``result`` values to zero where the kernel\n                extends beyond the edge of the array.\n            * 'fill'\n                Set values outside the array boundary to ``fill_value`` (default).\n            * 'wrap'\n                Periodic boundary that wrap to the other side of ``array``.\n            * 'extend'\n                Set values outside the array to the nearest ``array``\n                value.\n    fill_value : float, optional\n        The value to use outside the array when using ``boundary='fill'``.\n    normalize_kernel : bool, optional\n        Whether to normalize the kernel to have a sum of one.\n    nan_treatment : {'interpolate', 'fill'}, optional\n        The method used to handle NaNs in the input ``array``:\n            * ``'interpolate'``: ``NaN`` values are replaced with\n              interpolated values using the kernel as an interpolation\n              function. Note that if the kernel has a sum equal to\n              zero, NaN interpolation is not possible and will raise an\n              exception.\n            * ``'fill'``: ``NaN`` values are replaced by ``fill_value``\n              prior to convolution.\n    preserve_nan : bool, optional\n        After performing convolution, should pixels that were originally NaN\n        again become NaN?\n    mask : None or ndarray, optional\n        A \"mask\" array.  Shape must match ``array``, and anything that is masked\n        (i.e., not 0/`False`) will be set to NaN for the convolution.  If\n        `None`, no masking will be performed unless ``array`` is a masked array.\n        If ``mask`` is not `None` *and* ``array`` is a masked array, a pixel is\n        masked if it is masked in either ``mask`` *or* ``array.mask``.\n    normalization_zero_tol : float, optional\n        The absolute tolerance on whether the kernel is different than zero.\n        If the kernel sums to zero to within this precision, it cannot be\n        normalized. Default is \"1e-8\".\n    \n    Returns\n    -------\n    result : `numpy.ndarray`\n        An array with the same dimensions and as the input array,\n        convolved with kernel.  The data type depends on the input\n        array type.  If array is a floating point type, then the\n        return array keeps the same data type, otherwise the type\n        is ``numpy.float``.\n    \n    Notes\n    -----\n    For masked arrays, masked values are treated as NaNs.  The convolution\n    is always done at ``numpy.float`` precision.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f72a2c90528092e207491b716b3ec2e63a859f19f7ae181782067216d1c973a1",
            "fields": [
                {
                    "id": "yd0dmk2l",
                    "encoding": "",
                    "name": "array",
                    "value": "",
                    "defaultValue": "",
                    "description": "The array to convolve. This should be a 1, 2, or 3-dimensional array\nor a list or a set of nested lists representing a 1, 2, or\n3-dimensional array.  If an `~astropy.nddata.NDData`, the ``mask`` of\nthe `~astropy.nddata.NDData` will be used as the ``mask`` argument.",
                    "type": "astropy.nddata.NDData or array-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ywvxoie_",
                    "encoding": "",
                    "name": "kernel",
                    "value": "",
                    "defaultValue": "",
                    "description": "The convolution kernel. The number of dimensions should match those for\nthe array, and the dimensions should be odd in all directions.  If a\nmasked array, the masked values will be replaced by ``fill_value``.",
                    "type": "numpy.ndarray or astropy.convolution.Kernel",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m68itzdt",
                    "encoding": "",
                    "name": "boundary",
                    "value": "fill",
                    "defaultValue": "fill",
                    "description": "A flag indicating how to handle boundaries:\n    * `None`\n        Set the ``result`` values to zero where the kernel\n        extends beyond the edge of the array.\n    * 'fill'\n        Set values outside the array boundary to ``fill_value`` (default).\n    * 'wrap'\n        Periodic boundary that wrap to the other side of ``array``.\n    * 'extend'\n        Set values outside the array to the nearest ``array``\n        value.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n_4fmlpo",
                    "encoding": "",
                    "name": "fill_value",
                    "value": 0.0,
                    "defaultValue": 0.0,
                    "description": "The value to use outside the array when using ``boundary='fill'``.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r83wy3e1",
                    "encoding": "",
                    "name": "nan_treatment",
                    "value": "interpolate",
                    "defaultValue": "interpolate",
                    "description": "The method used to handle NaNs in the input ``array``:\n    * ``'interpolate'``: ``NaN`` values are replaced with\n      interpolated values using the kernel as an interpolation\n      function. Note that if the kernel has a sum equal to\n      zero, NaN interpolation is not possible and will raise an\n      exception.\n    * ``'fill'``: ``NaN`` values are replaced by ``fill_value``\n      prior to convolution.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pte6w89v",
                    "encoding": "",
                    "name": "normalize_kernel",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether to normalize the kernel to have a sum of one.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qc1r2_p2",
                    "encoding": "",
                    "name": "mask",
                    "value": "",
                    "defaultValue": "",
                    "description": "A \"mask\" array.  Shape must match ``array``, and anything that is masked\n(i.e., not 0/`False`) will be set to NaN for the convolution.  If\n`None`, no masking will be performed unless ``array`` is a masked array.\nIf ``mask`` is not `None` *and* ``array`` is a masked array, a pixel is\nmasked if it is masked in either ``mask`` *or* ``array.mask``.",
                    "type": "None or ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xho9au_s",
                    "encoding": "",
                    "name": "preserve_nan",
                    "value": false,
                    "defaultValue": false,
                    "description": "After performing convolution, should pixels that were originally NaN\nagain become NaN?",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jh2ekj9f",
                    "encoding": "",
                    "name": "normalization_zero_tol",
                    "value": 1e-08,
                    "defaultValue": 1e-08,
                    "description": "The absolute tolerance on whether the kernel is different than zero.\nIf the kernel sums to zero to within this precision, it cannot be\nnormalized. Default is \"1e-8\".",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dvy7si2q",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.convolve",
                    "defaultValue": "pypeit.wavemodel.convolve",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9xri1w9t",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "473ocdj4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "u4wreb45",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9q7emzki",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "60knzbzc",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nveafxa1",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "mraageh_",
            "name": "wavemodel.create_OHlinelist",
            "description": "Create a synthetic sky spectrum at a given resolution, extract significant lines, and\n    store them in a PypeIt compatibile file. The skymodel is built from nearIR_modelsky and\n    includes black body at 250K, OH lines, and H2O lines (but only at lambda>2.3microns).\n    \n    Parameters\n    ----------\n    resolution : float\n        resolution of the spectrograph\n    waveminmax : tuple\n        wavelength range in microns to be covered by the model.\n        Default is: (0.8, 2.6)\n    dlam : \n        bin to be used to create the wavelength grid of the model.\n        If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n        it is a bin in linear space (microns).\n        Default is: 40.0 (with flgd='True')\n    flgd : bool\n        if flgd='True' (default) wavelengths are created with \n        equal steps in log space. If 'False', wavelengths will be\n        created wit equal steps in linear space.\n    nirsky_outfile : str\n        name of the fits file where the model sky spectrum will be stored.\n        default is 'None' (i.e., no file will be written).\n    fwhm : float\n        fwhm in pixels used for filtering out arc lines that are too\n        wide and not considered in fits. Parameter of arc.detect_lines().\n        If set to 'None' the fwhm will be derived from the resolution as:\n        2. * central_wavelength / resolution\n    sigdetec : float\n        sigma threshold above fluctuations for line detection. Parameter\n        of arc.detect_lines(). Default = 2.\n    line_name : str\n        name of the lines to listed in the file. Default is 'OH'.\n    file_root_name : str\n        name of the file where the identified lines will be stored.\n        The code automatically add '_lines.dat' at the end of the\n        root name.\n    iraf_frmt : bool\n        if True, the file is written in the IRAF format (i.e. wavelength,\n        ion name, amplitude).\n    debug : bool\n        If True will show debug plots",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b85c16bf7639a4755de52e6d3a5c8553492119bb1bfafaa5bf6012485c70c68b",
            "fields": [
                {
                    "id": "tctju0q8",
                    "encoding": "",
                    "name": "resolution",
                    "value": "",
                    "defaultValue": "",
                    "description": "resolution of the spectrograph",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "32p23b75",
                    "encoding": "",
                    "name": "waveminmax",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "wavelength range in microns to be covered by the model.\nDefault is: (0.8, 2.6)",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hymlno6z",
                    "encoding": "",
                    "name": "dlam",
                    "value": 40.0,
                    "defaultValue": 40.0,
                    "description": "bin to be used to create the wavelength grid of the model.\nIf flgd='True' it is a bin in velocity (km/s). If flgd='False'\nit is a bin in linear space (microns).\nDefault is: 40.0 (with flgd='True')",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2t7tqrj2",
                    "encoding": "",
                    "name": "flgd",
                    "value": true,
                    "defaultValue": true,
                    "description": "if flgd='True' (default) wavelengths are created with \nequal steps in log space. If 'False', wavelengths will be\ncreated wit equal steps in linear space.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e_x9dk2o",
                    "encoding": "",
                    "name": "nirsky_outfile",
                    "value": "",
                    "defaultValue": "",
                    "description": "name of the fits file where the model sky spectrum will be stored.\ndefault is 'None' (i.e., no file will be written).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jhx1tx4r",
                    "encoding": "",
                    "name": "fwhm",
                    "value": "",
                    "defaultValue": "",
                    "description": "fwhm in pixels used for filtering out arc lines that are too\nwide and not considered in fits. Parameter of arc.detect_lines().\nIf set to 'None' the fwhm will be derived from the resolution as:\n2. * central_wavelength / resolution",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q203x_wc",
                    "encoding": "",
                    "name": "sigdetec",
                    "value": 3.0,
                    "defaultValue": 3.0,
                    "description": "sigma threshold above fluctuations for line detection. Parameter\nof arc.detect_lines(). Default = 2.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8aeiwkfe",
                    "encoding": "",
                    "name": "line_name",
                    "value": "OH",
                    "defaultValue": "OH",
                    "description": "name of the lines to listed in the file. Default is 'OH'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8k420en6",
                    "encoding": "",
                    "name": "file_root_name",
                    "value": "",
                    "defaultValue": "",
                    "description": "name of the file where the identified lines will be stored.\nThe code automatically add '_lines.dat' at the end of the\nroot name.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5xz9ykrr",
                    "encoding": "",
                    "name": "iraf_frmt",
                    "value": false,
                    "defaultValue": false,
                    "description": "if True, the file is written in the IRAF format (i.e. wavelength,\nion name, amplitude).",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kxbl4_f2",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True will show debug plots",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "doh04z4h",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.create_OHlinelist",
                    "defaultValue": "pypeit.wavemodel.create_OHlinelist",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "55ht_j1v",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vtj9y1hl",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ldrnbqcz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nu_f3djk",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4vwvqvkp",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "773tvwlr",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "feqaqjh7",
            "name": "wavemodel.create_ThArlinelist",
            "description": "Create a syntetic ThAr spectrum at a given resolution, extract significant lines, and\n    store them in a PypeIt compatibile file. This is based on the Murphy et al. ThAr spectrum.\n    Detailed information are here: http://astronomy.swin.edu.au/~mmurphy/thar/index.html\n    \n    Parameters\n    ----------\n    resolution : float\n        resolution of the spectrograph\n    waveminmax : tuple\n        wavelength range in ang. to be covered by the model.\n        Default is: (3000., 10500.)\n    dlam : \n        bin to be used to create the wavelength grid of the model.\n        If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n        it is a bin in linear space (angstrom).\n        Default is: 40.0 (with flgd='True')\n    flgd : bool\n        if flgd='True' (default) wavelengths are created with \n        equal steps in log space. If 'False', wavelengths will be\n        created wit equal steps in linear space.\n    thar_outfile : str\n        name of the fits file where the model sky spectrum will be stored.\n        default is 'None' (i.e., no file will be written).\n    fwhm : float\n        fwhm in pixels used for filtering out arc lines that are too\n        wide and not considered in fits. Parameter of arc.detect_lines().\n        If set to 'None' the fwhm will be derived from the resolution as:\n        2. * central_wavelength / resolution\n    sigdetec : float\n        sigma threshold above fluctuations for line detection. Parameter\n        of arc.detect_lines(). Default = 2.\n    line_name : str\n        name of the lines to listed in the file.\n    file_root_name : str\n        name of the file where the identified lines will be stored.\n        The code automatically add '_lines.dat' at the end of the\n        root name.\n    iraf_frmt : bool\n        if True, the file is written in the IRAF format (i.e. wavelength,\n        ion name, amplitude).\n    debug : bool\n        If True will show debug plots\n    convert_air_to_vac : bool\n        If True, convert the wavelengths of the created linelist from air to vacuum",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2bfe8cbe7962f76d59116e38dc318971474d9360c704b925c923e4759c252244",
            "fields": [
                {
                    "id": "guyx_t5t",
                    "encoding": "",
                    "name": "resolution",
                    "value": "",
                    "defaultValue": "",
                    "description": "resolution of the spectrograph",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tpz3ex_o",
                    "encoding": "",
                    "name": "waveminmax",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "wavelength range in ang. to be covered by the model.\nDefault is: (3000., 10500.)",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o48epsgc",
                    "encoding": "",
                    "name": "dlam",
                    "value": 40.0,
                    "defaultValue": 40.0,
                    "description": "bin to be used to create the wavelength grid of the model.\nIf flgd='True' it is a bin in velocity (km/s). If flgd='False'\nit is a bin in linear space (angstrom).\nDefault is: 40.0 (with flgd='True')",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n07_wxmg",
                    "encoding": "",
                    "name": "flgd",
                    "value": true,
                    "defaultValue": true,
                    "description": "if flgd='True' (default) wavelengths are created with \nequal steps in log space. If 'False', wavelengths will be\ncreated wit equal steps in linear space.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8oymodmy",
                    "encoding": "",
                    "name": "thar_outfile",
                    "value": "",
                    "defaultValue": "",
                    "description": "name of the fits file where the model sky spectrum will be stored.\ndefault is 'None' (i.e., no file will be written).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "948qrg19",
                    "encoding": "",
                    "name": "fwhm",
                    "value": "",
                    "defaultValue": "",
                    "description": "fwhm in pixels used for filtering out arc lines that are too\nwide and not considered in fits. Parameter of arc.detect_lines().\nIf set to 'None' the fwhm will be derived from the resolution as:\n2. * central_wavelength / resolution",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "34j20rgc",
                    "encoding": "",
                    "name": "sigdetec",
                    "value": 3.0,
                    "defaultValue": 3.0,
                    "description": "sigma threshold above fluctuations for line detection. Parameter\nof arc.detect_lines(). Default = 2.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2hu8m9l0",
                    "encoding": "",
                    "name": "line_name",
                    "value": "ThAr",
                    "defaultValue": "ThAr",
                    "description": "name of the lines to listed in the file.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4jjirx1t",
                    "encoding": "",
                    "name": "file_root_name",
                    "value": "",
                    "defaultValue": "",
                    "description": "name of the file where the identified lines will be stored.\nThe code automatically add '_lines.dat' at the end of the\nroot name.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0m6xer5x",
                    "encoding": "",
                    "name": "iraf_frmt",
                    "value": false,
                    "defaultValue": false,
                    "description": "if True, the file is written in the IRAF format (i.e. wavelength,\nion name, amplitude).",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3kx_opcv",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True will show debug plots",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3_x_p1fz",
                    "encoding": "",
                    "name": "convert_air_to_vac",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, convert the wavelengths of the created linelist from air to vacuum",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0whlnyq7",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.create_ThArlinelist",
                    "defaultValue": "pypeit.wavemodel.create_ThArlinelist",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xqcyhpsc",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nmhs_gqv",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "jm44a8u9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2qxqtm5j",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "or4l975u",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5fpoqg9k",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "50enz595",
            "name": "wavemodel.create_linelist",
            "description": "Create list of lines detected in a spectrum in a PypeIt\n    compatible format. The name of the output file is\n    file_root_name+'_lines.dat'.\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength\n    spec : `numpy.ndarray`_\n        spectrum\n    fwhm : float\n        fwhm in pixels used for filtering out arc lines that are too\n        wide and not considered in fits. Parameter of arc.detect_lines().\n    sigdetec : float\n        sigma threshold above fluctuations for line detection. Parameter\n        of arc.detect_lines(). Default = 2.\n    cont_samp : float\n        the number of samples across the spectrum used for continuum\n        subtraction. Parameter of arc.detect_lines().  Default = 10.\n    line_name : str\n        name of the lines to listed in the file.\n    file_root_name : str\n        name of the file where the identified lines will be stored.\n        The code automatically add '_lines.dat' at the end of the\n        root name.\n    iraf_frmt : bool\n        if True, the file is written in the IRAF format (i.e. wavelength,\n        ion name, amplitude).\n    convert_air_to_vac : bool\n        If True, convert the wavelengths of the created linelist from air to vacuum",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8c69118774ddca9438b3bb5eba4aecc0d2994a78d66d92663e513094a967db52",
            "fields": [
                {
                    "id": "6chkzbrs",
                    "encoding": "",
                    "name": "wavelength",
                    "value": "",
                    "defaultValue": "",
                    "description": "wavelength",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j3_0twoq",
                    "encoding": "",
                    "name": "spec",
                    "value": "",
                    "defaultValue": "",
                    "description": "spectrum",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ybzp3kzv",
                    "encoding": "",
                    "name": "fwhm",
                    "value": "",
                    "defaultValue": "",
                    "description": "fwhm in pixels used for filtering out arc lines that are too\nwide and not considered in fits. Parameter of arc.detect_lines().",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v3cgbf6a",
                    "encoding": "",
                    "name": "sigdetec",
                    "value": 2.0,
                    "defaultValue": 2.0,
                    "description": "sigma threshold above fluctuations for line detection. Parameter\nof arc.detect_lines(). Default = 2.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "__396lps",
                    "encoding": "",
                    "name": "cont_samp",
                    "value": 10.0,
                    "defaultValue": 10.0,
                    "description": "the number of samples across the spectrum used for continuum\nsubtraction. Parameter of arc.detect_lines().  Default = 10.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nxlm5695",
                    "encoding": "",
                    "name": "line_name",
                    "value": "",
                    "defaultValue": "",
                    "description": "name of the lines to listed in the file.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_1gw_h0l",
                    "encoding": "",
                    "name": "file_root_name",
                    "value": "",
                    "defaultValue": "",
                    "description": "name of the file where the identified lines will be stored.\nThe code automatically add '_lines.dat' at the end of the\nroot name.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6b7qh0n3",
                    "encoding": "",
                    "name": "iraf_frmt",
                    "value": false,
                    "defaultValue": false,
                    "description": "if True, the file is written in the IRAF format (i.e. wavelength,\nion name, amplitude).",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_454fda4",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dszakxn0",
                    "encoding": "",
                    "name": "convert_air_to_vac",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, convert the wavelengths of the created linelist from air to vacuum",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1th8zrgq",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.create_linelist",
                    "defaultValue": "pypeit.wavemodel.create_linelist",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6mwgj868",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5rn9c7h6",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "deyt2ou3",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oq407cah",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b3of42ru",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rwvcn2rh",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "722qyw5o",
            "name": "wavemodel.embed",
            "description": "Call this to embed IPython at the current point in your program.\n    \n    The first invocation of this will create a :class:`terminal.embed.InteractiveShellEmbed`\n    instance and then call it.  Consecutive calls just call the already\n    created instance.\n    \n    If you don't want the kernel to initialize the namespace\n    from the scope of the surrounding function,\n    and/or you want to load full IPython configuration,\n    you probably want `IPython.start_ipython()` instead.\n    \n    Here is a simple example::\n    \n        from IPython import embed\n        a = 10\n        b = 20\n        embed(header='First time')\n        c = 30\n        d = 40\n        embed()\n    \n    Parameters\n    ----------\n    \n    header : str\n        Optional header string to print at startup.\n    compile_flags\n        Passed to the `compile_flags` parameter of :py:meth:`terminal.embed.InteractiveShellEmbed.mainloop()`,\n        which is called when the :class:`terminal.embed.InteractiveShellEmbed` instance is called.\n    **kwargs : various, optional\n        Any other kwargs will be passed to the :class:`terminal.embed.InteractiveShellEmbed` constructor.\n        Full customization can be done by passing a traitlets :class:`Config` in as the\n        `config` argument (see :ref:`configure_start_ipython` and :ref:`terminal_options`).",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0e88cab6c23aa3c5899b47866888ecebe1752630e8715cddfd84a1a21c1acb90",
            "fields": [
                {
                    "id": "np4afyhd",
                    "encoding": "",
                    "name": "header",
                    "value": "",
                    "defaultValue": "",
                    "description": "Optional header string to print at startup.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "stx4gnpm",
                    "encoding": "",
                    "name": "compile_flags",
                    "value": "",
                    "defaultValue": "",
                    "description": "Passed to the `compile_flags` parameter of :py:meth:`terminal.embed.InteractiveShellEmbed.mainloop()`,\nwhich is called when the :class:`terminal.embed.InteractiveShellEmbed` instance is called.",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "azwfnuwu",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k0b0o38a",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.embed",
                    "defaultValue": "pypeit.wavemodel.embed",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "isygu6cx",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rmfostgu",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "nayl_yky",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hb904vcc",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fs6h4us6",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k8c4t7pd",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ipk93enl",
            "name": "wavemodel.h2o_lines",
            "description": "Reads in the H2O atmospheric spectrum\"\n    \n    Returns\n    -------\n    wavelength : `numpy.ndarray`_\n        Wavelength [in microns] of the H2O atmospheric spectrum.\n    flux : `numpy.ndarray`_\n        Flux of the H2O atmospheric spectrum.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3c19a382a8dee18605bf9871430cf712461c957ad1f082011c40901345d61da6",
            "fields": [
                {
                    "id": "x9h12kvj",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.h2o_lines",
                    "defaultValue": "pypeit.wavemodel.h2o_lines",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ybxr8b9l",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i989io1c",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "51wpj509",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4rr24g20",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9bqysb3j",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5a3r7f4m",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "cub7uz5d",
            "name": "wavemodel.iraf_datareader",
            "description": "Reads in a line identification database created with IRAF\n    identify. These are usually locate in a directory called 'database'.\n    This read pixel location and wavelength of the lines that\n    have been id with IRAF. Note that the first pixel in IRAF\n    is '1', while is '0' in python. The pixel location is thus\n    shifted of one pixel while reading the database.\n    \n    Parameters\n    ----------\n    database_dir : str\n        directory where the id files are located.\n    id_file : str\n        filename that is going to be read.\n    \n    Returns\n    -------\n    pixel : `numpy.ndarray`_\n        Position of the line in pixel of the line.  For IRAF output, these are\n        usually in Ang.\n    line_id : `numpy.ndarray`_\n        ID of the line.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "89359386a0eafe46039e83744e3f0c88c52d04e7e9106dd57945a777b86e70a9",
            "fields": [
                {
                    "id": "xvmwvlke",
                    "encoding": "",
                    "name": "database_dir",
                    "value": "",
                    "defaultValue": "",
                    "description": "directory where the id files are located.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cg8y8yda",
                    "encoding": "",
                    "name": "id_file",
                    "value": "",
                    "defaultValue": "",
                    "description": "filename that is going to be read.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kd5ztjhc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.iraf_datareader",
                    "defaultValue": "pypeit.wavemodel.iraf_datareader",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rt737pxi",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bazqyfaf",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "_3sgy039",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "axvperlz",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3ircu_ae",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "swynivx1",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "nv9x5ems",
            "name": "wavemodel.nearIR_modelsky",
            "description": "Generate a model sky in the near-IR. This includes a continuum model\n    to match to gemini broadband level, a black body at T_BB, OH lines, and \n    H2O lines (but only at lambda>WAVE_WATER). Everythins is smoothed at the\n    given resolution.\n    \n    Parameters\n    ----------\n    resolution : float\n        resolution of the spectrograph. The OH and H2O lines will have a \n        FWHM equal to:\n        fwhm_line = wl_line / resolution\n    waveminmax : tuple\n        wavelength range in microns to be covered by the model.\n        Default is: (0.8, 2.6)\n    dlam : \n        bin to be used to create the wavelength grid of the model.\n        If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n        it is a bin in linear space (microns).\n        Default is: 40.0 (with flgd='True')\n    flgd : bool\n        if flgd='True' (default) wavelengths are created with \n        equal steps in log space. If 'False', wavelengths will be\n        created wit equal steps in linear space.\n    nirsky_outfile : str\n        name of the fits file where the model sky spectrum will be stored.\n        default is 'None' (i.e., no file will be written).\n    T_BB : float \n        black body temperature in Kelvin. Default is set to:\n        T_BB = 250.\n    SCL_BB : float\n        scale factor for modelling the sky black body emssion.\n        Default: SCL_BB=1.\n    SCL_OH : float\n        scale factor for modelling the OH emssion.\n        Default: SCL_OH=1.\n    SCL_H2O : float\n        scale factor for modelling the H2O emssion.\n        Default: SCL_H2O=10.\n    WAVE_WATER : float\n        wavelength (in microns) at which the H2O are inclued.\n        Default: WAVE_WATER = 2.3\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    wave : `numpy.ndarray`_\n        Wavelength (in Ang.) of the final model of the sky.\n    sky_model : `numpy.ndarray`_\n        Flux of the final model of the sky.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "9bedb3c957c74b4c2208f3fdca95176d0174d99ab1e185bba54e2270fc7f3c69",
            "fields": [
                {
                    "id": "l7v438n0",
                    "encoding": "",
                    "name": "resolution",
                    "value": "",
                    "defaultValue": "",
                    "description": "resolution of the spectrograph. The OH and H2O lines will have a \nFWHM equal to:\nfwhm_line = wl_line / resolution",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dzazd0p0",
                    "encoding": "",
                    "name": "waveminmax",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "wavelength range in microns to be covered by the model.\nDefault is: (0.8, 2.6)",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "znqwiaoh",
                    "encoding": "",
                    "name": "dlam",
                    "value": 40.0,
                    "defaultValue": 40.0,
                    "description": "bin to be used to create the wavelength grid of the model.\nIf flgd='True' it is a bin in velocity (km/s). If flgd='False'\nit is a bin in linear space (microns).\nDefault is: 40.0 (with flgd='True')",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "klhwiwuq",
                    "encoding": "",
                    "name": "flgd",
                    "value": true,
                    "defaultValue": true,
                    "description": "if flgd='True' (default) wavelengths are created with \nequal steps in log space. If 'False', wavelengths will be\ncreated wit equal steps in linear space.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8lehb37k",
                    "encoding": "",
                    "name": "nirsky_outfile",
                    "value": "",
                    "defaultValue": "",
                    "description": "name of the fits file where the model sky spectrum will be stored.\ndefault is 'None' (i.e., no file will be written).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9609pe0u",
                    "encoding": "",
                    "name": "T_BB",
                    "value": 250.0,
                    "defaultValue": 250.0,
                    "description": "black body temperature in Kelvin. Default is set to:\nT_BB = 250.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l83f62j_",
                    "encoding": "",
                    "name": "SCL_BB",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "scale factor for modelling the sky black body emssion.\nDefault: SCL_BB=1.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f36dkp88",
                    "encoding": "",
                    "name": "SCL_OH",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "scale factor for modelling the OH emssion.\nDefault: SCL_OH=1.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u2feiuq7",
                    "encoding": "",
                    "name": "SCL_H2O",
                    "value": 10.0,
                    "defaultValue": 10.0,
                    "description": "scale factor for modelling the H2O emssion.\nDefault: SCL_H2O=10.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zv21ywn1",
                    "encoding": "",
                    "name": "WAVE_WATER",
                    "value": 2.3,
                    "defaultValue": 2.3,
                    "description": "wavelength (in microns) at which the H2O are inclued.\nDefault: WAVE_WATER = 2.3",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zug7g50v",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True will show debug plots",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d8o6kp9t",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.nearIR_modelsky",
                    "defaultValue": "pypeit.wavemodel.nearIR_modelsky",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lklwse5k",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d9d2akuj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "tqy_y3gn",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8xhaj_r_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_9t4qxjp",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jeg1mzri",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "h5u1hbws",
            "name": "wavemodel.oh_lines",
            "description": "Reads in the Rousselot (2000) OH line list\"\n    \n    Returns\n    -------\n    wavelength : `numpy.ndarray`_\n        Wavelength [in microns] of the OH lines.\n    amplitude : `numpy.ndarray`_\n        Amplitude of the OH lines.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d7df021f5f1dc865f518602d7814afe1c43f3903c008235a3c0c785505739bba",
            "fields": [
                {
                    "id": "65of3q_f",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.oh_lines",
                    "defaultValue": "pypeit.wavemodel.oh_lines",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ugygmn2g",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3omd8s_n",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "3zwh3u4f",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i8o9kvh4",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b_yisk7o",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fl0l24tk",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "brgibxt9",
            "name": "wavemodel.optical_modelThAr",
            "description": "Generate a model of a ThAr lamp in the uvb/optical. This is based on the\n    Murphy et al. ThAr spectrum. Detailed information are here:\n    http://astronomy.swin.edu.au/~mmurphy/thar/index.html\n    Everythins is smoothed at the given resolution.\n    \n    Parameters\n    ----------\n    resolution : float\n        resolution of the spectrograph. The ThAr lines will have a \n        FWHM equal to:\n        fwhm_line = wl_line / resolution\n    waveminmax : tuple\n        wavelength range in angstrom to be covered by the model.\n        Default is: (3000.,10500.)\n    dlam : \n        bin to be used to create the wavelength grid of the model.\n        If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n        it is a bin in linear space (microns).\n        Default is: 40.0 (with flgd='True')\n    flgd : bool\n        if flgd='True' (default) wavelengths are created with \n        equal steps in log space. If 'False', wavelengths will be\n        created wit equal steps in linear space.\n    thar_outfile : str\n        name of the fits file where the model sky spectrum will be stored.\n        default is 'None' (i.e., no file will be written).\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    wave : `numpy.ndarray`_\n        Wavelength (in Ang.) of the final model of the ThAr lamp emission.\n    thar_model : `numpy.ndarray`_\n        Flux of the final model of the ThAr lamp emission.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3c4185c1e717d76c548550cb208d727a071a11dfe2f5ffe2670f0c03174b2e69",
            "fields": [
                {
                    "id": "8ktb925u",
                    "encoding": "",
                    "name": "resolution",
                    "value": "",
                    "defaultValue": "",
                    "description": "resolution of the spectrograph. The ThAr lines will have a \nFWHM equal to:\nfwhm_line = wl_line / resolution",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "crlhmd56",
                    "encoding": "",
                    "name": "waveminmax",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "wavelength range in angstrom to be covered by the model.\nDefault is: (3000.,10500.)",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k80_o_dp",
                    "encoding": "",
                    "name": "dlam",
                    "value": 40.0,
                    "defaultValue": 40.0,
                    "description": "bin to be used to create the wavelength grid of the model.\nIf flgd='True' it is a bin in velocity (km/s). If flgd='False'\nit is a bin in linear space (microns).\nDefault is: 40.0 (with flgd='True')",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fqssa254",
                    "encoding": "",
                    "name": "flgd",
                    "value": true,
                    "defaultValue": true,
                    "description": "if flgd='True' (default) wavelengths are created with \nequal steps in log space. If 'False', wavelengths will be\ncreated wit equal steps in linear space.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qoy2nbx4",
                    "encoding": "",
                    "name": "thar_outfile",
                    "value": "",
                    "defaultValue": "",
                    "description": "name of the fits file where the model sky spectrum will be stored.\ndefault is 'None' (i.e., no file will be written).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g_8z4k9w",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True will show debug plots",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zat8xdm1",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.optical_modelThAr",
                    "defaultValue": "pypeit.wavemodel.optical_modelThAr",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a5krcwlv",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n9tezxxu",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "4igj1gh3",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "25y85tbt",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ndjor0xh",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ihenr8hi",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "i39a6rl8",
            "name": "wavemodel.thar_lines",
            "description": "Reads in the H2O atmospheric spectrum\"\n    Detailed information are here: http://astronomy.swin.edu.au/~mmurphy/thar/index.html\n    \n    Returns\n    -------\n    wavelength : `numpy.ndarray`_\n        Wavelength [in microns] of the ThAr lamp spectrum.\n    flux : `numpy.ndarray`_\n        Flux of the ThAr lamp spectrum.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ff32cc105a8ed20788cda422b1111afccc81929e60a1cd22fe97797d02331e4c",
            "fields": [
                {
                    "id": "o8mkfefw",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.thar_lines",
                    "defaultValue": "pypeit.wavemodel.thar_lines",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fj33wv63",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5lq6mm4x",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "l6udrusu",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jwjhij_y",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ycanle_w",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qbytp9ch",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ewr48khb",
            "name": "wavemodel.transparency",
            "description": "Interpolate the atmospheric transmission model in the IR over\n    a given wavelength (in microns) range.\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength vector in microns\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    transparency : `numpy.ndarray`_\n        Transmission of the sky over the considered wavelength range.  1. means\n        fully transparent and 0. fully opaque",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5867221dbe93ae0f7ebc3124e09780916679601346d8ab88d143c0785fcd4269",
            "fields": [
                {
                    "id": "yej_6mz_",
                    "encoding": "",
                    "name": "wavelength",
                    "value": "",
                    "defaultValue": "",
                    "description": "wavelength vector in microns",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wj1t5brf",
                    "encoding": "",
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True will show debug plots",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "alw56b2g",
                    "encoding": "",
                    "name": "func_name",
                    "value": "pypeit.wavemodel.transparency",
                    "defaultValue": "pypeit.wavemodel.transparency",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qdpqlez9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ye6cx20e",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "oj9obedt",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "igegh5ln",
                    "encoding": "",
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_62h4bs0",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wuey79_l",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}