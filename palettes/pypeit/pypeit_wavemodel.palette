{
    "modelData": {
        "filePath": "pypeit_wavemodel.palette",
        "fileType": "palette",
        "shortDescription": "",
        "detailedDescription": "Module to create models of arc lines.\n\n.. include:: ../include/links.rst",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE_test_repo",
        "eagleVersion": "",
        "eagleCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "pypeit",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "7f972819b2aa8f08df94e2a5fb6f21eba919c9fee57aa986bca41ac360863702",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1731409058.636997,
        "numLGNodes": 12
    },
    "nodeDataArray": [
        {
            "category": "PythonApp",
            "id": "rqg8p59m",
            "name": "addlines2spec",
            "description": "Create a spectrum with a set of (gaussian) emission lines.\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength vector of the input spectrum\n    wl_line : `numpy.ndarray`_\n        wavelength of each individual line\n    fl_line : `numpy.ndarray`_\n        flux of each individual line\n    resolution : float\n        resolution of the spectrograph. In other words, the lines\n        will have a FWHM equal to:\n        fwhm_line = wl_line / resolution\n    scale_spec : float\n        rescale all the  normalization of the final spectrum.\n        Default scale_spec=1.\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    line_spec : `numpy.ndarray`_\n        Spectrum with lines",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "58d8612099871dfd0515f2505a988f905a44c4494046b0a1558e171f00d3a6b6",
            "fields": [
                {
                    "name": "wavelength",
                    "value": null,
                    "defaultValue": null,
                    "description": "    wavelength vector of the input spectrum",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "wl_line",
                    "value": null,
                    "defaultValue": null,
                    "description": "    wavelength of each individual line",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "fl_line",
                    "value": null,
                    "defaultValue": null,
                    "description": "    flux of each individual line",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "resolution",
                    "value": null,
                    "defaultValue": null,
                    "description": "float\n    resolution of the spectrograph. In other words, the lines\n    will have a FWHM equal to:\n    fwhm_line = wl_line / resolution",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "scale_spec",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "float\n    rescale all the  normalization of the final spectrum.\n    Default scale_spec=1.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    If True will show debug plots",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.addlines2spec",
                    "defaultValue": "pypeit.wavemodel.addlines2spec",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "yboynm68",
            "name": "blackbody",
            "description": "Given wavelength [in microns] and Temperature in Kelvin\n    it returns the black body emission.\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength vector in microns\n    T_BB : float \n        black body temperature in Kelvin. Default is set to:\n        T_BB = 250.\n    \n    Returns\n    -------\n    blackbody : `numpy.ndarray`_\n        spectral radiance of the black body in cgs units:\n        B_lambda = 2.*h*c^2/lambda^5.*(1./(exp(h*c/(lambda*k_b*T_BB))-1.)\n    blackbody_counts : `numpy.ndarray`_\n        Same as above but in flux density",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a0b877e58addd28e4a34674d0079b2c38256c0e57a08909e2904da5ccb3710d8",
            "fields": [
                {
                    "name": "wavelength",
                    "value": null,
                    "defaultValue": null,
                    "description": "    wavelength vector in microns",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "T_BB",
                    "value": 250.0,
                    "defaultValue": 250.0,
                    "description": "float \n    black body temperature in Kelvin. Default is set to:\n    T_BB = 250.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.blackbody",
                    "defaultValue": "pypeit.wavemodel.blackbody",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "n98aerlj",
            "name": "create_OHlinelist",
            "description": "Create a synthetic sky spectrum at a given resolution, extract significant lines, and\n    store them in a PypeIt compatibile file. The skymodel is built from nearIR_modelsky and\n    includes black body at 250K, OH lines, and H2O lines (but only at lambda>2.3microns).\n    \n    Parameters\n    ----------\n    resolution : float\n        resolution of the spectrograph\n    waveminmax : tuple\n        wavelength range in microns to be covered by the model.\n        Default is: (0.8, 2.6)\n    dlam : \n        bin to be used to create the wavelength grid of the model.\n        If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n        it is a bin in linear space (microns).\n        Default is: 40.0 (with flgd='True')\n    flgd : bool\n        if flgd='True' (default) wavelengths are created with \n        equal steps in log space. If 'False', wavelengths will be\n        created wit equal steps in linear space.\n    nirsky_outfile : str\n        name of the fits file where the model sky spectrum will be stored.\n        default is 'None' (i.e., no file will be written).\n    fwhm : float\n        fwhm in pixels used for filtering out arc lines that are too\n        wide and not considered in fits. Parameter of arc.detect_lines().\n        If set to 'None' the fwhm will be derived from the resolution as:\n        2. * central_wavelength / resolution\n    sigdetec : float\n        sigma threshold above fluctuations for line detection. Parameter\n        of arc.detect_lines(). Default = 2.\n    line_name : str\n        name of the lines to listed in the file. Default is 'OH'.\n    file_root_name : str\n        name of the file where the identified lines will be stored.\n        The code automatically add '_lines.dat' at the end of the\n        root name.\n    iraf_frmt : bool\n        if True, the file is written in the IRAF format (i.e. wavelength,\n        ion name, amplitude).\n    debug : bool\n        If True will show debug plots",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "05fa751fcd533794bb7a8d85f902fc4634cd9230b7a08db08fd94d9b35cfe1d6",
            "fields": [
                {
                    "name": "resolution",
                    "value": null,
                    "defaultValue": null,
                    "description": "float\n    resolution of the spectrograph",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "waveminmax",
                    "value": [
                        0.8,
                        2.6
                    ],
                    "defaultValue": [
                        0.8,
                        2.6
                    ],
                    "description": "tuple\n    wavelength range in microns to be covered by the model.\n    Default",
                    "type": "Json",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dlam",
                    "value": 40.0,
                    "defaultValue": 40.0,
                    "description": "bin to be used to create the wavelength grid of the model.\n    If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n    it is a bin in linear space (microns).\n    Default",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "flgd",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool\n    if flgd='True' (default) wavelengths are created with \n    equal steps in log space. If 'False', wavelengths will be\n    created wit equal steps in linear space.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "nirsky_outfile",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    name of the fits file where the model sky spectrum will be stored.\n    default is 'None' (i.e., no file will be written).",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "fwhm",
                    "value": null,
                    "defaultValue": null,
                    "description": "float\n    fwhm in pixels used for filtering out arc lines that are too\n    wide and not considered in fits. Parameter of arc.detect_lines().\n    If set to 'None' the fwhm will be derived from the resolution as:\n    2. * central_wavelength / resolution",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sigdetec",
                    "value": 3.0,
                    "defaultValue": 3.0,
                    "description": "float\n    sigma threshold above fluctuations for line detection. Parameter\n    of arc.detect_lines(). Default = 2.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "line_name",
                    "value": "OH",
                    "defaultValue": "OH",
                    "description": "str\n    name of the lines to listed in the file. Default is 'OH'.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "file_root_name",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    name of the file where the identified lines will be stored.\n    The code automatically add '_lines.dat' at the end of the\n    root name.",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "iraf_frmt",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    if True, the file is written in the IRAF format (i.e. wavelength,\n    ion name, amplitude).",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    If True will show debug plots",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.create_OHlinelist",
                    "defaultValue": "pypeit.wavemodel.create_OHlinelist",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "6bryrewh",
            "name": "create_ThArlinelist",
            "description": "Create a syntetic ThAr spectrum at a given resolution, extract significant lines, and\n    store them in a PypeIt compatibile file. This is based on the Murphy et al. ThAr spectrum.\n    Detailed information are here: http://astronomy.swin.edu.au/~mmurphy/thar/index.html\n    \n    Parameters\n    ----------\n    resolution : float\n        resolution of the spectrograph\n    waveminmax : tuple\n        wavelength range in ang. to be covered by the model.\n        Default is: (3000., 10500.)\n    dlam : \n        bin to be used to create the wavelength grid of the model.\n        If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n        it is a bin in linear space (angstrom).\n        Default is: 40.0 (with flgd='True')\n    flgd : bool\n        if flgd='True' (default) wavelengths are created with \n        equal steps in log space. If 'False', wavelengths will be\n        created wit equal steps in linear space.\n    thar_outfile : str\n        name of the fits file where the model sky spectrum will be stored.\n        default is 'None' (i.e., no file will be written).\n    fwhm : float\n        fwhm in pixels used for filtering out arc lines that are too\n        wide and not considered in fits. Parameter of arc.detect_lines().\n        If set to 'None' the fwhm will be derived from the resolution as:\n        2. * central_wavelength / resolution\n    sigdetec : float\n        sigma threshold above fluctuations for line detection. Parameter\n        of arc.detect_lines(). Default = 2.\n    line_name : str\n        name of the lines to listed in the file.\n    file_root_name : str\n        name of the file where the identified lines will be stored.\n        The code automatically add '_lines.dat' at the end of the\n        root name.\n    iraf_frmt : bool\n        if True, the file is written in the IRAF format (i.e. wavelength,\n        ion name, amplitude).\n    debug : bool\n        If True will show debug plots\n    convert_air_to_vac : bool\n        If True, convert the wavelengths of the created linelist from air to vacuum",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "1721f3b2d72bfd92be81209679f9b358107dc8f9c94f767cf5c80e7fdfcb8b5e",
            "fields": [
                {
                    "name": "resolution",
                    "value": null,
                    "defaultValue": null,
                    "description": "float\n    resolution of the spectrograph",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "waveminmax",
                    "value": [
                        3000.0,
                        10500.0
                    ],
                    "defaultValue": [
                        3000.0,
                        10500.0
                    ],
                    "description": "tuple\n    wavelength range in ang. to be covered by the model.\n    Default",
                    "type": "Json",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dlam",
                    "value": 40.0,
                    "defaultValue": 40.0,
                    "description": "bin to be used to create the wavelength grid of the model.\n    If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n    it is a bin in linear space (angstrom).\n    Default",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "flgd",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool\n    if flgd='True' (default) wavelengths are created with \n    equal steps in log space. If 'False', wavelengths will be\n    created wit equal steps in linear space.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "thar_outfile",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    name of the fits file where the model sky spectrum will be stored.\n    default is 'None' (i.e., no file will be written).",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "fwhm",
                    "value": null,
                    "defaultValue": null,
                    "description": "float\n    fwhm in pixels used for filtering out arc lines that are too\n    wide and not considered in fits. Parameter of arc.detect_lines().\n    If set to 'None' the fwhm will be derived from the resolution as:\n    2. * central_wavelength / resolution",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sigdetec",
                    "value": 3.0,
                    "defaultValue": 3.0,
                    "description": "float\n    sigma threshold above fluctuations for line detection. Parameter\n    of arc.detect_lines(). Default = 2.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "line_name",
                    "value": "ThAr",
                    "defaultValue": "ThAr",
                    "description": "str\n    name of the lines to listed in the file.",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "file_root_name",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    name of the file where the identified lines will be stored.\n    The code automatically add '_lines.dat' at the end of the\n    root name.",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "iraf_frmt",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    if True, the file is written in the IRAF format (i.e. wavelength,\n    ion name, amplitude).",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    If True will show debug plots",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "convert_air_to_vac",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool\n    If True, convert the wavelengths of the created linelist from air to vacuum",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.create_ThArlinelist",
                    "defaultValue": "pypeit.wavemodel.create_ThArlinelist",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "o0z99vsa",
            "name": "create_linelist",
            "description": "Create list of lines detected in a spectrum in a PypeIt\n    compatible format. The name of the output file is\n    file_root_name+'_lines.dat'.\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength\n    spec : `numpy.ndarray`_\n        spectrum\n    fwhm : float\n        fwhm in pixels used for filtering out arc lines that are too\n        wide and not considered in fits. Parameter of arc.detect_lines().\n    sigdetec : float\n        sigma threshold above fluctuations for line detection. Parameter\n        of arc.detect_lines(). Default = 2.\n    cont_samp : float\n        the number of samples across the spectrum used for continuum\n        subtraction. Parameter of arc.detect_lines().  Default = 10.\n    line_name : str\n        name of the lines to listed in the file.\n    file_root_name : str\n        name of the file where the identified lines will be stored.\n        The code automatically add '_lines.dat' at the end of the\n        root name.\n    iraf_frmt : bool\n        if True, the file is written in the IRAF format (i.e. wavelength,\n        ion name, amplitude).\n    convert_air_to_vac : bool\n        If True, convert the wavelengths of the created linelist from air to vacuum",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "95fb469aa6551870acd9961b6a5a6d92edbae4c28b447454e11fde9ad1f5c2dc",
            "fields": [
                {
                    "name": "wavelength",
                    "value": null,
                    "defaultValue": null,
                    "description": "    wavelength",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "spec",
                    "value": null,
                    "defaultValue": null,
                    "description": "    spectrum",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "fwhm",
                    "value": null,
                    "defaultValue": null,
                    "description": "float\n    fwhm in pixels used for filtering out arc lines that are too\n    wide and not considered in fits. Parameter of arc.detect_lines().",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "sigdetec",
                    "value": 2.0,
                    "defaultValue": 2.0,
                    "description": "float\n    sigma threshold above fluctuations for line detection. Parameter\n    of arc.detect_lines(). Default = 2.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "cont_samp",
                    "value": 10.0,
                    "defaultValue": 10.0,
                    "description": "float\n    the number of samples across the spectrum used for continuum\n    subtraction. Parameter of arc.detect_lines().  Default = 10.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "line_name",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    name of the lines to listed in the file.",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "file_root_name",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    name of the file where the identified lines will be stored.\n    The code automatically add '_lines.dat' at the end of the\n    root name.",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "iraf_frmt",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    if True, the file is written in the IRAF format (i.e. wavelength,\n    ion name, amplitude).",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "convert_air_to_vac",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool\n    If True, convert the wavelengths of the created linelist from air to vacuum",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.create_linelist",
                    "defaultValue": "pypeit.wavemodel.create_linelist",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "v1q6h4bc",
            "name": "h2o_lines",
            "description": "Reads in the H2O atmospheric spectrum\"\n    \n    Returns\n    -------\n    wavelength : `numpy.ndarray`_\n        Wavelength [in microns] of the H2O atmospheric spectrum.\n    flux : `numpy.ndarray`_\n        Flux of the H2O atmospheric spectrum.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e4211c23a97c358a33de2eca6653e8c4ff5595f8c0a8a6c68681f290d67a29cf",
            "fields": [
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.h2o_lines",
                    "defaultValue": "pypeit.wavemodel.h2o_lines",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "0x6derw6",
            "name": "iraf_datareader",
            "description": "Reads in a line identification database created with IRAF\n    identify. These are usually locate in a directory called 'database'.\n    This read pixel location and wavelength of the lines that\n    have been id with IRAF. Note that the first pixel in IRAF\n    is '1', while is '0' in python. The pixel location is thus\n    shifted of one pixel while reading the database.\n    \n    Parameters\n    ----------\n    database_dir : str\n        directory where the id files are located.\n    id_file : str\n        filename that is going to be read.\n    \n    Returns\n    -------\n    pixel : `numpy.ndarray`_\n        Position of the line in pixel of the line.  For IRAF output, these are\n        usually in Ang.\n    line_id : `numpy.ndarray`_\n        ID of the line.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d4b4a84f34ec3ff0d3279cf0930ccdd101cd889fd0be1bcf29994f999246a34b",
            "fields": [
                {
                    "name": "database_dir",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    directory where the id files are located.",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "id_file",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    filename that is going to be read.",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.iraf_datareader",
                    "defaultValue": "pypeit.wavemodel.iraf_datareader",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "ctm3g2ya",
            "name": "nearIR_modelsky",
            "description": "Generate a model sky in the near-IR. This includes a continuum model\n    to match to gemini broadband level, a black body at T_BB, OH lines, and \n    H2O lines (but only at lambda>WAVE_WATER). Everythins is smoothed at the\n    given resolution.\n    \n    Parameters\n    ----------\n    resolution : float\n        resolution of the spectrograph. The OH and H2O lines will have a \n        FWHM equal to:\n        fwhm_line = wl_line / resolution\n    waveminmax : tuple\n        wavelength range in microns to be covered by the model.\n        Default is: (0.8, 2.6)\n    dlam : \n        bin to be used to create the wavelength grid of the model.\n        If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n        it is a bin in linear space (microns).\n        Default is: 40.0 (with flgd='True')\n    flgd : bool\n        if flgd='True' (default) wavelengths are created with \n        equal steps in log space. If 'False', wavelengths will be\n        created wit equal steps in linear space.\n    nirsky_outfile : str\n        name of the fits file where the model sky spectrum will be stored.\n        default is 'None' (i.e., no file will be written).\n    T_BB : float \n        black body temperature in Kelvin. Default is set to:\n        T_BB = 250.\n    SCL_BB : float\n        scale factor for modelling the sky black body emssion.\n        Default: SCL_BB=1.\n    SCL_OH : float\n        scale factor for modelling the OH emssion.\n        Default: SCL_OH=1.\n    SCL_H2O : float\n        scale factor for modelling the H2O emssion.\n        Default: SCL_H2O=10.\n    WAVE_WATER : float\n        wavelength (in microns) at which the H2O are inclued.\n        Default: WAVE_WATER = 2.3\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    wave : `numpy.ndarray`_\n        Wavelength (in Ang.) of the final model of the sky.\n    sky_model : `numpy.ndarray`_\n        Flux of the final model of the sky.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d4d0ab51f6678ad9fdcde5d8232f25088315b77875b5f99d619c9ffa89f7f473",
            "fields": [
                {
                    "name": "resolution",
                    "value": null,
                    "defaultValue": null,
                    "description": "float\n    resolution of the spectrograph. The OH and H2O lines will have a \n    FWHM equal to:\n    fwhm_line = wl_line / resolution",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "waveminmax",
                    "value": [
                        0.8,
                        2.6
                    ],
                    "defaultValue": [
                        0.8,
                        2.6
                    ],
                    "description": "tuple\n    wavelength range in microns to be covered by the model.\n    Default",
                    "type": "Json",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dlam",
                    "value": 40.0,
                    "defaultValue": 40.0,
                    "description": "bin to be used to create the wavelength grid of the model.\n    If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n    it is a bin in linear space (microns).\n    Default",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "flgd",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool\n    if flgd='True' (default) wavelengths are created with \n    equal steps in log space. If 'False', wavelengths will be\n    created wit equal steps in linear space.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "nirsky_outfile",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    name of the fits file where the model sky spectrum will be stored.\n    default is 'None' (i.e., no file will be written).",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "T_BB",
                    "value": 250.0,
                    "defaultValue": 250.0,
                    "description": "float \n    black body temperature in Kelvin. Default is set to:\n    T_BB = 250.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "SCL_BB",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "float\n    scale factor for modelling the sky black body emssion.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "SCL_OH",
                    "value": 1.0,
                    "defaultValue": 1.0,
                    "description": "float\n    scale factor for modelling the OH emssion.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "SCL_H2O",
                    "value": 10.0,
                    "defaultValue": 10.0,
                    "description": "float\n    scale factor for modelling the H2O emssion.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "WAVE_WATER",
                    "value": 2.3,
                    "defaultValue": 2.3,
                    "description": "float\n    wavelength (in microns) at which the H2O are inclued.",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    If True will show debug plots",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.nearIR_modelsky",
                    "defaultValue": "pypeit.wavemodel.nearIR_modelsky",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "3vsy_n5w",
            "name": "oh_lines",
            "description": "Reads in the Rousselot (2000) OH line list\"\n    \n    Returns\n    -------\n    wavelength : `numpy.ndarray`_\n        Wavelength [in microns] of the OH lines.\n    amplitude : `numpy.ndarray`_\n        Amplitude of the OH lines.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "351c5f4708f46d7563816d07f581e7e2bdd8faa0fe2d3f24fd8e3598bc96a660",
            "fields": [
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.oh_lines",
                    "defaultValue": "pypeit.wavemodel.oh_lines",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "i61cik6a",
            "name": "optical_modelThAr",
            "description": "Generate a model of a ThAr lamp in the uvb/optical. This is based on the\n    Murphy et al. ThAr spectrum. Detailed information are here:\n    http://astronomy.swin.edu.au/~mmurphy/thar/index.html\n    Everythins is smoothed at the given resolution.\n    \n    Parameters\n    ----------\n    resolution : float\n        resolution of the spectrograph. The ThAr lines will have a \n        FWHM equal to:\n        fwhm_line = wl_line / resolution\n    waveminmax : tuple\n        wavelength range in angstrom to be covered by the model.\n        Default is: (3000.,10500.)\n    dlam : \n        bin to be used to create the wavelength grid of the model.\n        If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n        it is a bin in linear space (microns).\n        Default is: 40.0 (with flgd='True')\n    flgd : bool\n        if flgd='True' (default) wavelengths are created with \n        equal steps in log space. If 'False', wavelengths will be\n        created wit equal steps in linear space.\n    thar_outfile : str\n        name of the fits file where the model sky spectrum will be stored.\n        default is 'None' (i.e., no file will be written).\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    wave : `numpy.ndarray`_\n        Wavelength (in Ang.) of the final model of the ThAr lamp emission.\n    thar_model : `numpy.ndarray`_\n        Flux of the final model of the ThAr lamp emission.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "fb12a1f6ac02c5a8bc438fec192364abd79f77ed3b0049d276511045d9957038",
            "fields": [
                {
                    "name": "resolution",
                    "value": null,
                    "defaultValue": null,
                    "description": "float\n    resolution of the spectrograph. The ThAr lines will have a \n    FWHM equal to:\n    fwhm_line = wl_line / resolution",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "waveminmax",
                    "value": [
                        3000.0,
                        10500.0
                    ],
                    "defaultValue": [
                        3000.0,
                        10500.0
                    ],
                    "description": "tuple\n    wavelength range in angstrom to be covered by the model.\n    Default",
                    "type": "Json",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dlam",
                    "value": 40.0,
                    "defaultValue": 40.0,
                    "description": "bin to be used to create the wavelength grid of the model.\n    If flgd='True' it is a bin in velocity (km/s). If flgd='False'\n    it is a bin in linear space (microns).\n    Default",
                    "type": "Float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "flgd",
                    "value": true,
                    "defaultValue": true,
                    "description": "bool\n    if flgd='True' (default) wavelengths are created with \n    equal steps in log space. If 'False', wavelengths will be\n    created wit equal steps in linear space.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "thar_outfile",
                    "value": null,
                    "defaultValue": null,
                    "description": "str\n    name of the fits file where the model sky spectrum will be stored.\n    default is 'None' (i.e., no file will be written).",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    If True will show debug plots",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.optical_modelThAr",
                    "defaultValue": "pypeit.wavemodel.optical_modelThAr",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "jcva0p95",
            "name": "thar_lines",
            "description": "Reads in the H2O atmospheric spectrum\"\n    Detailed information are here: http://astronomy.swin.edu.au/~mmurphy/thar/index.html\n    \n    Returns\n    -------\n    wavelength : `numpy.ndarray`_\n        Wavelength [in microns] of the ThAr lamp spectrum.\n    flux : `numpy.ndarray`_\n        Flux of the ThAr lamp spectrum.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ff5c92cda1b7dddbb7e5fdd253ba51aab76d267deca7f56205f97cb5bb08e9db",
            "fields": [
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.thar_lines",
                    "defaultValue": "pypeit.wavemodel.thar_lines",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "llhu63ze",
            "name": "transparency",
            "description": "Interpolate the atmospheric transmission model in the IR over\n    a given wavelength (in microns) range.\n    \n    Parameters\n    ----------\n    wavelength : `numpy.ndarray`_\n        wavelength vector in microns\n    debug : bool\n        If True will show debug plots\n    \n    Returns\n    -------\n    transparency : `numpy.ndarray`_\n        Transmission of the sky over the considered wavelength range.  1. means\n        fully transparent and 0. fully opaque",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "85546668bff4f43b5e9af3e42d3e594d82381cbc9247ce5e3828aef1141e6641",
            "fields": [
                {
                    "name": "wavelength",
                    "value": null,
                    "defaultValue": null,
                    "description": "    wavelength vector in microns",
                    "type": "numpy.ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "debug",
                    "value": false,
                    "defaultValue": false,
                    "description": "bool\n    If True will show debug plots",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.wavemodel",
                    "defaultValue": "pypeit.wavemodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.wavemodel.transparency",
                    "defaultValue": "pypeit.wavemodel.transparency",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}