{
    "modelData": {
        "filePath": "pypeit_datamodel.palette",
        "fileType": "palette",
        "shortDescription": "",
        "detailedDescription": "Implements classes and function for the PypeIt data model.\n\n.. _data-container:\n\nDataContainer\n-------------\n\n:class:`DataContainer` objects provide a utility for\nenforcing a specific datamodel on an object, and provides convenience\nroutines for writing data to fits files. The class itself is an\nabstract base class that cannot be directly instantiated. As a base\nclass, :class:`DataContainer` objects are versatile, but they have\ntheir limitations.\n\nDerived classes must do the following:\n\n    - Define a class attribute called ``datamodel``. See the examples\n      below for their format.\n    - Provide an ``__init__`` method that defines the\n      instantiation calling sequence and passes the relevant\n      dictionary to this base-class instantiation.\n    - Provide a ``_validate`` method, if necessary, that\n      processes the data provided in the ``__init__`` into a complete\n      instantiation of the object. This method and the\n      ``__init__`` method are the *only* places where attributes\n      can be added to the class.\n    - Provide a :func:`_bundle` method that reorganizes the datamodel\n      into partitions that can be written to one or more fits\n      extensions. More details are provided in the description of\n      :func:`DataContainer._bundle`.\n    - Provide a :func:`_parse` method that parses information in one\n      or more fits extensions into the appropriate datamodel. More\n      details are provided in the description of\n      :func:`DataContainer._parse`.\n\n.. note::\n\n    The attributes of the class are *not required* to be a part of\n    the ``datamodel``; however, it makes the object simpler when they\n    are. Any attributes that are not part of the ``datamodel`` must\n    be defined in either the ``__init__`` or ``_validate``\n    methods; otherwise, the class with throw an ``AttributeError``.\n\nHere are some examples of how to and how not to use them.\n\nDefining the datamodel\n++++++++++++++++++++++\n\nThe format of the ``datamodel`` needed for each implementation of a\n:class:`DataContainer` derived class is as follows.\n\nThe datamodel itself is a class attribute (i.e., it is a member of\nthe class, not just of an instance of the class). The datamodel is a\ndictionary of dictionaries: Each key of the datamodel dictionary\nprovides the name of a given datamodel element, and the associated\nitem (dictionary) for the datamodel element provides the type and\ndescription information for that datamodel element. For each\ndatamodel element, the dictionary item must provide:\n\n    - ``otype``: This is the type of the object for this datamodel item. E.g.,\n      for a float or a `numpy.ndarray`_, you would set ``otype=float`` and\n      ``otype=np.ndarray``, respectively.  The ``otype`` can also be a tuple\n      with optional types.  Beware optional types that are themselves\n      DataContainers.  This works for\n      :class:`~pypeit.images.pypeitimage.PypeItImage`, but it likely needs more\n      testing.\n\n    - ``descr``: This provides a text description of the datamodel\n      element. This is used to construct the datamodel tables in the\n      pypeit documentation.\n\nIf the object type is a `numpy.ndarray`_, you should also provide the\n``atype`` keyword that sets the type of the data contained within the\narray. E.g., for a floating point array containing an image, your\ndatamodel could be simply::\n\n    datamodel = {'image' : dict(otype=np.ndarray, atype=float, descr='My image')}\n\nMore advanced examples are given below.\n\nBasic container\n+++++++++++++++\n\nHere's how to create a derived class for a basic container that\nholds two arrays and a metadata parameter::\n\n    import numpy as np\n    import inspect\n\n    from pypeit.datamodel import DataContainer\n\n    class BasicContainer(DataContainer):\n        datamodel = {'vec1': dict(otype=np.ndarray, atype=float, descr='Test'),\n                     'meta1': dict(otype=str, decr='test'),\n                     'arr1': dict(otype=np.ndarray, atype=float, descr='test')}\n\n        def __init__(self, vec1, meta1, arr1):\n            # All arguments are passed directly to the container\n            # instantiation\n            args, _, _, values = inspect.getargvalues(inspect.currentframe())\n            super(BasicContainer, self).__init__({k: values[k] for k in args[1:]}) \n\n        def _bundle(self):\n            # Use the base class _bundle Specify the extension\n            return super(BasicContainer, self)._bundle(ext='basic')\n\nWith this implementation:\n\n    - You can instantiate the container so that number of data table\n      rows would be the same (10)::\n\n        data = BasicContainer(np.arange(10), 'length=10', np.arange(30).reshape(10,3))\n\n    - After instantiating, access the data like this::\n\n        # Get the data model keys\n        keys = list(data.keys())\n\n        # Access the datamodel as attributes ...\n        print(data.vec1)\n        # ... or as items\n        print(data['meta1'])\n\n    - Attributes and items are case-sensitive::\n\n        # Faults because of case-sensitive attributes/items\n        print(data.Vec1)\n        print(data['MeTa1'])\n\n    - The attributes of the container can only be part of the\n      datamodel or added in either the :func:`DataContainer.__init__`\n      or :func:`DataContainer._validate` methods::\n\n        # Faults with KeyError\n        data['newvec'] = np.arange(10)\n        test = data['newvec']\n\n        # Faults with AttributeError\n        data.newvec = np.arange(10)\n        test = data.newvec\n\n    - The :class:`DataContainer` also enforces strict types for\n      members of the datamodel::\n\n        # Faults with TypeError\n        data.vec1 = 3\n        data.meta1 = 4.\n\n    - Read/Write the data from/to a fits file. In this instantiation,\n      the data is written to a `astropy.io.fits.BinTableHDU` object;\n      the table has 10 rows because the shape of the arrays match\n      this. The file I/O routines look like this::\n\n        # Write to a file\n        ofile = 'test.fits'\n        data.to_file(ofile)\n\n        # Write to a gzipped file\n        ofile = 'test.fits.gz'\n        data.to_file(ofile)\n\n        # Test written data against input\n        with fits.open(ofile) as hdu:\n            print(len(hdu))\n            # 2: The primary extension and a binary table with the data\n\n            print(hdu[1].name)\n            # BASIC: As set by the _bundle method\n            \n            print(len(hdu['BASIC'].data))\n            # 10: The length of the data table\n            \n            print(hdu['BASIC'].columns.names)\n            # ['vec1', 'arr1']: datamodel elements written to the table columns\n            \n            print(hdu['BASIC'].header['meta1'])\n            # 'length=10': int, float, or string datamodel components are written to headers\n\n    - If the shape of the first axis of the arrays (number of rows)\n      do not match, the arrays are written as single elements of a\n      table with one row::\n\n        # Number of rows are mismatched \n        data = BasicContainer(np.arange(10), 'length=1', np.arange(30).reshape(3,10))\n        data.to_file(ofile)\n\n        with fits.open(ofile) as hdu:\n            print(len(hdu))\n            # 2: The primary extension and a binary table with the data\n            print(len(hdu['BASIC'].data))\n            # 1: All of the data is put into a single row\n\nMixed Object Containers\n+++++++++++++++++++++++\n\n:class:`DataContainer` objects can also contain multiple arrays\nand/or `astropy.table.Table`_ objects. However, multiple Tables or\ncombinations of arrays and Tables cannot be bundled into individual\nextensions. Here are two implementations of a mixed container, a good\none and a bad one::\n\n    import numpy as np\n    import inspect\n\n    from astropy.table import Table\n\n    from pypeit.datamodel import DataContainer\n\n    class GoodMixedTypeContainer(DataContainer):\n        datamodel = {'tab1': dict(otype=Table, descr='Test'),\n                     'tab1len': dict(otype=int, descr='test'),\n                     'arr1': dict(otype=np.ndarray, descr='test'),\n                     'arr1shape': dict(otype=tuple, descr='test')}\n\n        def __init__(self, tab1, arr1):\n            # All arguments are passed directly to the container\n            # instantiation, but the list is incomplete\n            args, _, _, values = inspect.getargvalues(inspect.currentframe())\n            super(GoodMixedTypeContainer, self).__init__({k: values[k] for k in args[1:]}) \n\n        def _validate(self):\n            # Complete the instantiation\n            self.tab1len = len(self.tab1)\n            # NOTE: DataContainer does allow for tuples, but beware because\n            # they have to saved to the fits files by converting them to strings\n            # and writing them to the fits header.  So the tuples should be\n            # short!  See _bundle below, and in DataContainer.\n            self.arr1shape = self.arr1.shape\n\n        def _bundle(self):\n            # Bundle so there's only one Table and one Image per extension\n            return [{'tab1len': self.tab1len, 'tab1': self.tab1},\n                    {'arr1shape': str(self.arr1shape), 'arr1': self.arr1}]\n\n\n    class BadMixedTypeContainer(GoodMixedTypeContainer):\n        def _bundle(self):\n            # Use default _bundle method, which will try to put both tables\n            # in the same extension.  NOTE: Can't use super here because\n            # GoodMixedTypeContainer doesn't have an 'ext' argument\n            return DataContainer._bundle(self, ext='bad')\n\nWith this implementation:\n\n    - To instantiate::\n\n        x = np.arange(10)\n        y = np.arange(10)+5\n        z = np.arange(30).reshape(10,3)\n\n        arr1 = np.full((3,3,3), -1)\n        tab1 = Table(data=({'x':x,'y':y,'z':z}), meta={'test':'this'})\n\n        data = GoodMixedTypeContainer(tab1, arr1)\n\n    - Data access::\n\n        print(data.tab1.keys())\n        # ['x', 'y', 'z']\n        print(assert data.tab1.meta['test'])\n        # 'this'\n        print(data.arr1shape)\n        # (3,3,3)\n\n    - Construct an `astropy.io.fits.HDUList`::\n\n        hdu = data.to_hdu(add_primary=True)\n\n        print(len(hdu))\n        # 3: Includes the primary HDU, one with the table, and one with the array\n\n        print([h.name for h in hdu])\n        # ['PRIMARY', 'TAB1', 'ARR1']\n\n    - Tuples are converted to strings::\n\n        print(hdu['ARR1'].header['ARR1SHAPE'])\n        # '(3,3,3)'\n\n    - The tuples are converted back from strings when they're read\n      from the HDU::\n\n        _data = GoodMixedTypeContainer.from_hdu(hdu)\n        print(_data.arr1shape)\n        # (3,3,3)\n\n    - Table metadata is also written to the header, which can be\n      accessed with case-insensitive keys::\n\n        print(hdu['TAB1'].header['TEST'])\n        print(hdu['TAB1'].header['TesT'])\n        # Both print: 'this'\n\n    - However, it's important to note that the keyword case gets\n      mangled when you read it back in. This has to do with the\n      Table.read method and I'm not sure there's anything we can do\n      about it without the help of the astropy folks. We recommend\n      table metadata use keys that are in all caps::\n\n        # Fails because of the string case\n        print(_data.tab1.meta['test'])\n        # This is okay\n        print(_data.tab1.meta['TEST'])\n\n    - The difference between the implementation of\n      ``BadMixedTypeContainer`` and ``GoodMixedTypeContainer`` has to\n      do with how the data is bundled into HDU extensions. The\n      ``BadMixedTypeContainer`` will instantiate fine::\n\n        data = BadMixedTypeContainer(tab1, arr1)\n        print(data.tab1.keys())\n        # ['x', 'y', 'z']\n        print(data.tab1.meta['test'])\n        # 'this'\n\n    - But it will barf when you try to reformat/write the data\n      because you can't write both a Table and an array to a single\n      HDU::\n\n        # Fails\n        hdu = data.to_hdu()\n\nComplex Instantiation Methods\n+++++++++++++++++++++++++++++\n\nAll of the :class:`DataContainer` above have had simple instatiation\nmethods. :class:`DataContainer` can have more complex instantiation\nmethods, but there are significant limitations to keep in made.\nConsider::\n\n    class BadInitContainer(DataContainer):\n        datamodel = {'inp1': dict(otype=np.ndarray, descr='Test'),\n                     'inp2': dict(otype=np.ndarray, descr='test'),\n                     'out': dict(otype=np.ndarray, descr='test'),\n                     'alt': dict(otype=np.ndarray, descr='test')}\n\n        def __init__(self, inp1, inp2, func='add'):\n            args, _, _, values = inspect.getargvalues(inspect.currentframe())\n            super(BadInitContainer, self).__init__({k: values[k] for k in args[1:]}) \n\n\n    class DubiousInitContainer(DataContainer):\n        datamodel = {'inp1': dict(otype=np.ndarray, descr='Test'),\n                     'inp2': dict(otype=np.ndarray, descr='test'),\n                     'out': dict(otype=np.ndarray, descr='test'),\n                     'alt': dict(otype=np.ndarray, descr='test')}\n\n        def __init__(self, inp1, inp2, func='add'):\n            # If any of the arguments of the init method aren't actually\n            # part of the datamodel, you can't use the nominal two lines\n            # used in all the other examples above.  You have to be specific\n            # about what gets passed to super.__init__.  See the\n            # BadInitContainer example above and the test below.  WARNING:\n            # I'm not sure you would ever want to do this because it can\n            # lead to I/O issues; see the _validate function.\n            self.func = func\n            super(DubiousInitContainer, self).__init__({'inp1': inp1, 'inp2':inp2})\n\n        def _validate(self):\n            # Because func isn't part of the data model, it won't be part of\n            # self if the object is instantiated from a file.  So I have to\n            # add it here.  But I don't know what the value of the attribute\n            # was for the original object that was written to disk.  This is\n            # why you likely always want anything that's critical to setting\n            # up the object to be part of the datamodel so that it gets\n            # written to disk.  See the testing examples for when this will\n            # go haywire.\n            if not hasattr(self, 'func'):\n                self.func = None\n            if self.func not in [None, 'add', 'sub']:\n                raise ValueError('Function must be either 'add' or 'sub'.')\n\n            # This is here because I don't want to overwrite something that\n            # might have been read in from an HDU, particularly given that\n            # func will be None if reading from a file!\n            if self.out is None:\n                print('Assigning out!')\n                if self.func is None:\n                    raise ValueError('Do not know how to construct out attribute!')\n                self.out = self.inp1 + self.inp2 if self.func == 'add' else self.inp1 - self.inp2\n\n        # I'm not going to overwrite _bundle, so that the nominal approach\n        # is used.\n\n\n    class ComplexInitContainer(DataContainer):\n        datamodel = {'inp1': dict(otype=np.ndarray, descr='Test'),\n                     'inp2': dict(otype=np.ndarray, descr='test'),\n                     'out': dict(otype=np.ndarray, descr='test'),\n                     'alt': dict(otype=np.ndarray, descr='test'),\n                     'func': dict(otype=str, descr='test')}\n\n        def __init__(self, inp1, inp2, func='add'):\n            # Since func is part of the datamodel now, we can use the normal\n            # two intantiation lines.\n            args, _, _, values = inspect.getargvalues(inspect.currentframe())\n            super(ComplexInitContainer, self).__init__({k: values[k] for k in args[1:]}) \n\n        def _validate(self):\n            if self.func not in ['add', 'sub']:\n                raise ValueError('Function must be either 'add' or 'sub'.')\n            # This is here because I don't want to overwrite something that\n            # might have been read in from an HDU, even though they should\n            # nominally be the same!\n            if self.out is None:\n                print('Assigning out!')\n                if self.func is None:\n                    raise ValueError('Do not know how to construct out attribute!')\n                self.out = self.inp1 + self.inp2 if self.func == 'add' else self.inp1 - self.inp2\n\n\nWith this implementation:\n\n    - The instantiation of the ``BadInitContainer`` will fail because\n      the init arguments all need to be part of the datamodel for it\n      to work::\n\n        x = np.arange(10)\n        y = np.arange(10)+5\n\n        data = BadInitContainer(x,y)\n        # Fails with AttributeError\n\n    - The following instantiation is fine because\n      ``DubiousInitContainer`` handles the fact that some of the\n      arguments to ``__init__`` are not part of the datamodel::\n\n        data = DubiousInitContainer(x,y)\n        print(np.array_equal(data.out, data.inp1+data.inp2))\n        # True\n\n    - One component of the data model wasn't instantiated, so it will\n      be None::\n        \n        print(data.alt is None)\n        # True\n\n    - The problem with ``DubiousInitContainer`` is that it has\n      attributes that cannot be reinstantiated from what's written to\n      disk. That is, :class:`DataContainers` aren't really fully\n      formed objects unless all of its relevant attributes are\n      components of the data model::\n\n        _data = DubiousInitContainer.from_hdu(hdu)\n        print(_data.func == DubiousInitContainer(x,y).func)\n        # False\n    \n    - This is solved by adding func to the datamodel::\n    \n        data = ComplexInitContainer(x,y)\n        _data = ComplexInitContainer.from_hdu(data.to_hdu(add_primary=True))\n        print(data.func == _data.func)\n        # True\n\n.. include common links, assuming primary doc root is up one directory\n.. include:: ../include/links.rst",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE_test_repo",
        "eagleVersion": "",
        "eagleCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "pypeit",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "3f360d43b8db907034c37d58340ecd54d2bd43ea238d2ca8335f06088bdcef46",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1731409047.35461,
        "numLGNodes": 11
    },
    "nodeDataArray": [
        {
            "category": "PythonMemberFunction",
            "id": "v6g4o1e_",
            "name": "DataContainer.__init__",
            "description": "\nDefines an abstract class for holding and manipulating data.\n    \n    The primary utilities of the class are:\n    \n        - Attributes can be accessed normally or as expected for a :obj:`dict`\n        - Attributes and items are restricted to conform to a specified data model.\n    \n    This abstract class should only be used as a base class.\n    \n    Derived classes must do the following:\n    \n        - Define a datamodel\n        - Provide an ``__init__`` method that defines the\n          instantiation calling sequence and passes the relevant\n          dictionary to this base-class instantiation.\n        - Provide a ``_validate`` method, if necessary, that\n          processes the data provided in the ``__init__`` into a\n          complete instantiation of the object. This method and the\n          ``__init__`` method are the *only* places where\n          attributes can be added to the class.\n        - Provide a :func:`_bundle` method that reorganizes the\n          datamodel into partitions that can be written to one or\n          more fits extensions. More details are provided in the\n          description of :func:`_bundle`.\n        - Provide a :func:`_parse` method that parses information in\n          one or more fits extensions into the appropriate datamodel.\n          More details are provided in the description of\n          :func:`_parse`.\n    \n    .. note::\n    \n        The attributes of the class are *not required* to be a part\n        of the ``datamodel``; however, it makes the object simpler\n        when they are. Any attributes that are not part of the\n        ``datamodel`` must be defined in either the ``__init__``\n        or ``_validate`` methods; otherwise, the class with throw\n        an ``AttributeError``.\n    \n    .. todo::\n    \n        Add a copy method\n    \n    Args:\n        d (:obj:`dict`, optional):\n            Dictionary to copy to the internal attribute dictionary.\n            All of the keys in the dictionary *must* be elements of\n            the ``datamodel``. Any attributes that are not part of\n            the ``datamodel`` can be set in the ``__init__`` or\n            ``_validate`` methods of a derived class. If None,\n            the object is instantiated with all of the relevant data\n            model attributes but with all of those attributes set to\n            None.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0da6ec96dba1560178da6e3d5c46587554de9d642d7b81aedcbacdd05e459395",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to DataContainer object",
                    "type": "Object:pypeit.datamodel.DataContainer",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "d",
                    "value": null,
                    "defaultValue": null,
                    "description": "Dictionary to copy to the internal attribute dictionary. All of the keys in the dictionary *must* be elements of the ``datamodel``. Any attributes that are not part of the ``datamodel`` can be set in the ``__init__`` or ``_validate`` methods of a derived class. If None, the object is instantiated with all of the relevant data model attributes but with all of those attributes set to None.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.__init__",
                    "defaultValue": "pypeit.datamodel.DataContainer.__init__",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "4bkut1vx",
            "name": "DataContainer.check_populated",
            "description": "Check that a set of datamodel items are populated.\n    \n    Args:\n        dm_items (:obj:`list`, :obj:`str`):\n            One or more items in the datamodel to check.\n    \n    Returns:\n        :obj:`bool`: Flag that *all* the requested datamodel items are\n        populated (not None).",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cfe26df3adfbc6a0ead718a16f6bd6afca6f40422efb67a4f0542803f70254a3",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to DataContainer.check_populated object",
                    "type": "Object:pypeit.datamodel.DataContainer",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dm_items",
                    "value": null,
                    "defaultValue": null,
                    "description": "One or more items in the datamodel to check.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.check_populated",
                    "defaultValue": "pypeit.datamodel.DataContainer.check_populated",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "z7ihy2ev",
            "name": "DataContainer.confirm_class",
            "description": "Confirm that the provided name of a datamodel class matches the calling\n    class.\n    \n    Args:\n        name (:obj:`str`):\n            The name of the class to check against.\n        allow_subclasses (:obj:`bool`, optional):\n            Allow subclasses of the calling class to be included in the\n            check.\n    Returns:\n        :obj:`bool`: Class match confirmed if True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6a1302f990f417098e84c6bf12363e8dde82c3d5e218c18b13e45f159795aeb7",
            "fields": [
                {
                    "name": "name",
                    "value": null,
                    "defaultValue": null,
                    "description": "The name of the class to check against.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "allow_subclasses",
                    "value": false,
                    "defaultValue": false,
                    "description": "Allow subclasses of the calling class to be included in the check.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.confirm_class",
                    "defaultValue": "pypeit.datamodel.DataContainer.confirm_class",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "vvfc1c1h",
            "name": "DataContainer.from_dict",
            "description": "Instantiate from a dictionary.\n    \n    This is primarily to allow for instantiating classes from a\n    file where the data has already been parsed. E.g., see how\n    the :class:`~pypeit.tracepca.TracePCA` objects are\n    instantiated in\n    :class:`pypeit.edgetrace.EdgeTraceSet.from_hdu`. However,\n    note that this does the bare minimum to instantiate the\n    object. Any class-specific operations that are needed to\n    complete the instantiation should be done by ovewritting this\n    method; e.g., see :func:`pypeit.tracepca.TracePCA.from_dict`.\n    \n    Args:\n        d (:obj:`dict`, optional):\n            Dictionary with the data to use for instantiation.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "aea87a12e14e970ae90064811e28cc170898c5e3ad6c03da8835ccde46b3aa1d",
            "fields": [
                {
                    "name": "d",
                    "value": null,
                    "defaultValue": null,
                    "description": "Dictionary with the data to use for instantiation.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.from_dict",
                    "defaultValue": "pypeit.datamodel.DataContainer.from_dict",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "mjt9q13l",
            "name": "DataContainer.from_file",
            "description": "Instantiate the object from an extension in the specified fits file.\n    \n    This is a convenience wrapper for :func:`from_hdu`.\n    \n    Args:\n        ifile (:obj:`str`, `Path`_):\n            Fits file with the data to read\n        verbose (:obj:`bool`, optional):\n            Print informational messages\n        chk_version (:obj:`bool`, optional):\n            Passed to :func:`from_hdu`.\n        kwargs (:obj:`dict`, optional):\n            Arguments passed directly to :func:`from_hdu`.\n    \n    Raises:\n        FileNotFoundError:\n            Raised if the specified file does not exist.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5f327292d32617a92271d988abb205f003df09317c0f94e93df3c5c5c20b0890",
            "fields": [
                {
                    "name": "ifile",
                    "value": null,
                    "defaultValue": null,
                    "description": "Fits file with the data to read",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "Print informational messages",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "chk_version",
                    "value": true,
                    "defaultValue": true,
                    "description": "Passed to :func:`from_hdu`.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "kwargs",
                    "value": null,
                    "defaultValue": null,
                    "description": "Arguments passed directly to :func:`from_hdu`.",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.from_file",
                    "defaultValue": "pypeit.datamodel.DataContainer.from_file",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "o1gv38ok",
            "name": "DataContainer.from_hdu",
            "description": "Instantiate the object from an HDU extension.\n    \n    This is primarily a wrapper for :func:`_parse`.\n    \n    Args:\n        hdu (`astropy.io.fits.HDUList`_, `astropy.io.fits.ImageHDU`_, `astropy.io.fits.BinTableHDU`_):\n            The HDU(s) with the data to use for instantiation.\n        chk_version (:obj:`bool`, optional):\n            If True, raise an error if the datamodel version or\n            type check failed. If False, throw a warning only.\n        **kwargs:\n            Passed directly to :func:`_parse`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "776a8f1c17f2bff3ac276ea992c8591f63e32f938b63bd69b03e12e3411c69d3",
            "fields": [
                {
                    "name": "hdu",
                    "value": null,
                    "defaultValue": null,
                    "description": "The HDU(s) with the data to use for instantiation.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "chk_version",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, raise an error if the datamodel version or type check failed. If False, throw a warning only.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "kwargs",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.from_hdu",
                    "defaultValue": "pypeit.datamodel.DataContainer.from_hdu",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "w7784rw4",
            "name": "DataContainer.keys",
            "description": "Return the keys for the data objects only\n    \n    Returns:\n        :obj:`dict_keys`: The iterable with the data model keys.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e7b596736af2c7369ff392306b854f538f96e4d804ec5d0f688d165cddcc8cc1",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to DataContainer.keys object",
                    "type": "Object:pypeit.datamodel.DataContainer",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.keys",
                    "defaultValue": "pypeit.datamodel.DataContainer.keys",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "ldjipgh4",
            "name": "DataContainer.to_file",
            "description": "Write the data to a file.\n    \n    This is a convenience wrapper for :func:`to_hdu` and\n    :func:`pypeit.io.write_to_fits`.  The ``add_primary`` parameter of\n    :func:`to_hdu` is *always* true such that the first extension of the\n    written fits file is *always* an empty primary header.\n    \n    Args:\n        ofile (:obj:`str`, `Path`_):\n            Fits file for the data. File names with '.gz'\n            extensions will be gzipped; see\n            :func:`pypeit.io.write_to_fits`.\n        overwrite (:obj:`bool`, optional):\n            Flag to overwrite any existing file.\n        checksum (:obj:`bool`, optional):\n            Passed to `astropy.io.fits.HDUList.writeto`_ to add\n            the DATASUM and CHECKSUM keywords fits header(s).\n        kwargs (:obj:`dict`, optional):\n            Passed directly to :func:`to_hdu`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "33b0514edd1729a8db7ac30fde1677ca81bcc4a301765094fb1e1b79980bab4b",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to DataContainer.to_file object",
                    "type": "Object:pypeit.datamodel.DataContainer",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "ofile",
                    "value": null,
                    "defaultValue": null,
                    "description": "Fits file for the data. File names with '.gz' extensions will be gzipped; see :func:`pypeit.io.write_to_fits`.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "overwrite",
                    "value": false,
                    "defaultValue": false,
                    "description": "Flag to overwrite any existing file.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "checksum",
                    "value": true,
                    "defaultValue": true,
                    "description": "Passed to `astropy.io.fits.HDUList.writeto`_ to add the DATASUM and CHECKSUM keywords fits header(s).",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "kwargs",
                    "value": null,
                    "defaultValue": null,
                    "description": "Passed directly to :func:`to_hdu`.",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.to_file",
                    "defaultValue": "pypeit.datamodel.DataContainer.to_file",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonMemberFunction",
            "id": "srsp617a",
            "name": "DataContainer.to_hdu",
            "description": "Construct one or more HDU extensions with the data.\n    \n    The organization of the data into separate HDUs is performed\n    by :func:`_bundle`, which returns a list of objects. The type\n    of each element in the list determines how it is handled. If\n    the object is a dictionary with a single key/item pair, the\n    key is used as the extension header. Otherwise, the objects\n    are written to unnamed extensions. The object or dictionary\n    item is passed to :func:`pypeit.io.write_to_hdu` to construct\n    the HDU.\n    \n    Args:\n        hdr (`astropy.io.fits.Header`, optional):\n            Baseline header to add to all returned HDUs. If None,\n            set by :func:`pypeit.io.initialize_header()`.\n        add_primary (:obj:`bool`, optional):\n            If False, the returned object is a simple\n            :obj:`list`, with a list of HDU objects (either\n            `astropy.io.fits.ImageHDU`_ or\n            `astropy.io.fits.BinTableHDU`_). If true, the method\n            constructs an `astropy.io.fits.HDUList` with a\n            primary HDU, such that this call::\n    \n                hdr = io.initialize_header()\n                hdu = fits.HDUList([fits.PrimaryHDU(header=primary_hdr)] + self.to_hdu(hdr=hdr))\n    \n            and this call::\n    \n                hdu = self.to_hdu(add_primary=True)\n    \n            are identical.\n        primary_hdr (`astropy.io.fits.Header`, optional):\n            Header to add to the primary if add_primary=True\n        force_to_bintbl (:obj:`bool`, optional):\n            Force construction of a `astropy.io.fits.BinTableHDU`_ instead\n            of an `astropy.io.fits.ImageHDU`_ when either there are no\n            arrays or tables to write or only a single array is provided (as\n            needed for, e.g., :class:`~pypeit.specobj.SpecObj`).  See\n            :func:`~pypeit.io.write_to_hdu`.  \n        hdu_prefix (:obj:`str`, optional):\n            Prefix for the HDU names. If None, will use\n            :attr:`hdu_prefix`. If the latter is also None, no\n            prefix is added.\n    \n    Returns:\n        :obj:`list`, `astropy.io.fits.HDUList`_: A list of HDUs, where the\n        type depends on the value of ``add_primary``: If True, an\n        `astropy.io.fits.HDUList`_ is returned, otherwise a :obj:`list` is\n        returned.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "119742d7c88231a7fc4504f87dac08b0b4799c1c90c2fca0c68af4c72a5b68b3",
            "fields": [
                {
                    "name": "self",
                    "value": null,
                    "defaultValue": null,
                    "description": "Reference to DataContainer.to_hdu object",
                    "type": "Object:pypeit.datamodel.DataContainer",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "hdr",
                    "value": null,
                    "defaultValue": null,
                    "description": "Baseline header to add to all returned HDUs. If None, set by :func:`pypeit.io.initialize_header()`.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "add_primary",
                    "value": false,
                    "defaultValue": false,
                    "description": "If False, the returned object is a simple :obj:`list`, with a list of HDU objects (either `astropy.io.fits.ImageHDU`_ or `astropy.io.fits.BinTableHDU`_). If true, the method constructs an `astropy.io.fits.HDUList` with a",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "primary_hdr",
                    "value": null,
                    "defaultValue": null,
                    "description": "Header to add to the primary if add_primary=True",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "force_to_bintbl",
                    "value": false,
                    "defaultValue": false,
                    "description": "Force construction of a `astropy.io.fits.BinTableHDU`_ instead of an `astropy.io.fits.ImageHDU`_ when either there are no arrays or tables to write or only a single array is provided (as needed for, e.g., :class:`~pypeit.specobj.SpecObj`).  See :func:`~pypeit.io.write_to_hdu`.",
                    "type": "Boolean",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "hdu_prefix",
                    "value": null,
                    "defaultValue": null,
                    "description": "Prefix for the HDU names. If None, will use :attr:`hdu_prefix`. If the latter is also None, no prefix is added.",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.to_hdu",
                    "defaultValue": "pypeit.datamodel.DataContainer.to_hdu",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "woffau_7",
            "name": "DataContainer.valid_write_to_hdu_type",
            "description": "Check if the provided object can be written to an `astropy.io.fits.HDUList`_.\n    \n    This needs to be consistent with :func:`~pypeit.io.write_to_hdu`.\n    \n    Args:\n        obj (object):\n            Object to write\n    \n    Returns:\n        :obj:`bool`: Flag that object can be written.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "91a88d6f4dd07f1b9e0a3f1dbd8194728c84a942be41a62a10ebc51ce5b33b3c",
            "fields": [
                {
                    "name": "obj",
                    "value": null,
                    "defaultValue": null,
                    "description": "Object to write",
                    "type": "UNIDENTIFIED",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel.DataContainer",
                    "defaultValue": "pypeit.datamodel.DataContainer",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.DataContainer.valid_write_to_hdu_type",
                    "defaultValue": "pypeit.datamodel.DataContainer.valid_write_to_hdu_type",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "category": "PythonApp",
            "id": "c8s22815",
            "name": "obj_is_data_container",
            "description": "Simple method to check whether an object is a data container\n    \n    Args:\n        obj:\n    \n    Returns:\n        bool:  True if it is",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6aabf2d0868597a56a239fa28371a9d2a1026d52762d1108db6255051a3897a1",
            "fields": [
                {
                    "name": "obj",
                    "value": null,
                    "defaultValue": null,
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "base_name",
                    "value": "pypeit.datamodel",
                    "defaultValue": "pypeit.datamodel",
                    "description": "The base class for this member function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "pypeit.datamodel.obj_is_data_container",
                    "defaultValue": "pypeit.datamodel.obj_is_data_container",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}