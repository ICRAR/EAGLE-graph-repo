{
    "modelData": {
        "filePath": "numpy_matrixlib.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "Sub-package containing the matrix class and related functions.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.3",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "numpy",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "752b79046b49a5629fdb30e10fae5bde4fdf06130b62e08edc045f5e3b37df07",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755100237.113394,
        "numLGNodes": 4
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ciydw9vj",
            "name": "matrixlib.asmatrix",
            "description": "Interpret the input as a matrix.\n    \n    Unlike `matrix`, `asmatrix` does not make a copy if the input is already\n    a matrix or an ndarray.  Equivalent to ``matrix(data, copy=False)``.\n    \n    Parameters\n    ----------\n    data : array_like\n        Input data.\n    dtype : data-type\n       Data-type of the output matrix.\n    \n    Returns\n    -------\n    mat : matrix\n        `data` interpreted as a matrix.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> x = np.array([[1, 2], [3, 4]])\n    \n    >>> m = np.asmatrix(x)\n    \n    >>> x[0,0] = 5\n    \n    >>> m\n    matrix([[5, 2],\n            [3, 4]])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "45cb16dd1499b0c31ec42150f165e69f83ffe24979498af9b42113be0f3657b6",
            "fields": [
                {
                    "id": "30fufnzc",
                    "encoding": "",
                    "name": "data",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input data.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vne1vt3u",
                    "encoding": "",
                    "name": "dtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "Data-type of the output matrix.",
                    "type": "data-type",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fjcu67o8",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matrixlib.asmatrix",
                    "defaultValue": "numpy.matrixlib.asmatrix",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tu88egkr",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z9g1r3gn",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "p9hzljp7",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wenuq_o8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.matrixlib",
                    "defaultValue": "numpy.matrixlib",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uiltv3dh",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "474lhttj",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "_fwx4iue",
            "name": "matrixlib.bmat",
            "description": "Build a matrix object from a string, nested sequence, or array.\n    \n    Parameters\n    ----------\n    obj : str or array_like\n        Input data. If a string, variables in the current scope may be\n        referenced by name.\n    ldict : dict, optional\n        A dictionary that replaces local operands in current frame.\n        Ignored if `obj` is not a string or `gdict` is None.\n    gdict : dict, optional\n        A dictionary that replaces global operands in current frame.\n        Ignored if `obj` is not a string.\n    \n    Returns\n    -------\n    out : matrix\n        Returns a matrix object, which is a specialized 2-D array.\n    \n    See Also\n    --------\n    block :\n        A generalization of this function for N-d arrays, that returns normal\n        ndarrays.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> A = np.asmatrix('1 1; 1 1')\n    >>> B = np.asmatrix('2 2; 2 2')\n    >>> C = np.asmatrix('3 4; 5 6')\n    >>> D = np.asmatrix('7 8; 9 0')\n    \n    All the following expressions construct the same block matrix:\n    \n    >>> np.bmat([[A, B], [C, D]])\n    matrix([[1, 1, 2, 2],\n            [1, 1, 2, 2],\n            [3, 4, 7, 8],\n            [5, 6, 9, 0]])\n    >>> np.bmat(np.r_[np.c_[A, B], np.c_[C, D]])\n    matrix([[1, 1, 2, 2],\n            [1, 1, 2, 2],\n            [3, 4, 7, 8],\n            [5, 6, 9, 0]])\n    >>> np.bmat('A,B; C,D')\n    matrix([[1, 1, 2, 2],\n            [1, 1, 2, 2],\n            [3, 4, 7, 8],\n            [5, 6, 9, 0]])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5fb339f8f09eea351ea9f1c4fb90c57ab0ca97b20422df9646e52c101693d581",
            "fields": [
                {
                    "id": "hsr6su5l",
                    "encoding": "",
                    "name": "obj",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input data. If a string, variables in the current scope may be\nreferenced by name.",
                    "type": "str or arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mexqpvv8",
                    "encoding": "",
                    "name": "ldict",
                    "value": "",
                    "defaultValue": "",
                    "description": "A dictionary that replaces local operands in current frame.\nIgnored if `obj` is not a string or `gdict` is None.",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e117ofnu",
                    "encoding": "",
                    "name": "gdict",
                    "value": "",
                    "defaultValue": "",
                    "description": "A dictionary that replaces global operands in current frame.\nIgnored if `obj` is not a string.",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3pd558xf",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matrixlib.bmat",
                    "defaultValue": "numpy.matrixlib.bmat",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k3zrxcbn",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "my669ua8",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "q6g0s3eg",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ltxxqcwa",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.matrixlib",
                    "defaultValue": "numpy.matrixlib",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "joxksg0g",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t6dbgi1_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "_b57s3ov",
            "name": "defmatrix.asmatrix",
            "description": "Interpret the input as a matrix.\n    \n    Unlike `matrix`, `asmatrix` does not make a copy if the input is already\n    a matrix or an ndarray.  Equivalent to ``matrix(data, copy=False)``.\n    \n    Parameters\n    ----------\n    data : array_like\n        Input data.\n    dtype : data-type\n       Data-type of the output matrix.\n    \n    Returns\n    -------\n    mat : matrix\n        `data` interpreted as a matrix.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> x = np.array([[1, 2], [3, 4]])\n    \n    >>> m = np.asmatrix(x)\n    \n    >>> x[0,0] = 5\n    \n    >>> m\n    matrix([[5, 2],\n            [3, 4]])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4a9fb8b28f72f66e6bb19881eecadb31d56073d0f9142c8b2eda15cca1c23302",
            "fields": [
                {
                    "id": "yjxnb3ta",
                    "encoding": "",
                    "name": "data",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input data.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e_s35ftx",
                    "encoding": "",
                    "name": "dtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "Data-type of the output matrix.",
                    "type": "data-type",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n5smi9l0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matrixlib.defmatrix.asmatrix",
                    "defaultValue": "numpy.matrixlib.defmatrix.asmatrix",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v0qgxway",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gg2_p7uj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "4zfkl20j",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0lwebyt7",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.matrixlib.defmatrix",
                    "defaultValue": "numpy.matrixlib.defmatrix",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l58w1hzx",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c59ti365",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "yil84bdu",
            "name": "defmatrix.bmat",
            "description": "Build a matrix object from a string, nested sequence, or array.\n    \n    Parameters\n    ----------\n    obj : str or array_like\n        Input data. If a string, variables in the current scope may be\n        referenced by name.\n    ldict : dict, optional\n        A dictionary that replaces local operands in current frame.\n        Ignored if `obj` is not a string or `gdict` is None.\n    gdict : dict, optional\n        A dictionary that replaces global operands in current frame.\n        Ignored if `obj` is not a string.\n    \n    Returns\n    -------\n    out : matrix\n        Returns a matrix object, which is a specialized 2-D array.\n    \n    See Also\n    --------\n    block :\n        A generalization of this function for N-d arrays, that returns normal\n        ndarrays.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> A = np.asmatrix('1 1; 1 1')\n    >>> B = np.asmatrix('2 2; 2 2')\n    >>> C = np.asmatrix('3 4; 5 6')\n    >>> D = np.asmatrix('7 8; 9 0')\n    \n    All the following expressions construct the same block matrix:\n    \n    >>> np.bmat([[A, B], [C, D]])\n    matrix([[1, 1, 2, 2],\n            [1, 1, 2, 2],\n            [3, 4, 7, 8],\n            [5, 6, 9, 0]])\n    >>> np.bmat(np.r_[np.c_[A, B], np.c_[C, D]])\n    matrix([[1, 1, 2, 2],\n            [1, 1, 2, 2],\n            [3, 4, 7, 8],\n            [5, 6, 9, 0]])\n    >>> np.bmat('A,B; C,D')\n    matrix([[1, 1, 2, 2],\n            [1, 1, 2, 2],\n            [3, 4, 7, 8],\n            [5, 6, 9, 0]])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8066cba132ad6d69cc0239312353c4c015bfc6152db53b57296a34c64c720885",
            "fields": [
                {
                    "id": "9an_dtwj",
                    "encoding": "",
                    "name": "obj",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input data. If a string, variables in the current scope may be\nreferenced by name.",
                    "type": "str or arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jn2hvjwd",
                    "encoding": "",
                    "name": "ldict",
                    "value": "",
                    "defaultValue": "",
                    "description": "A dictionary that replaces local operands in current frame.\nIgnored if `obj` is not a string or `gdict` is None.",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_lxzq5cs",
                    "encoding": "",
                    "name": "gdict",
                    "value": "",
                    "defaultValue": "",
                    "description": "A dictionary that replaces global operands in current frame.\nIgnored if `obj` is not a string.",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ifxet2ai",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matrixlib.defmatrix.bmat",
                    "defaultValue": "numpy.matrixlib.defmatrix.bmat",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "53ifs7o1",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jm0qq9x4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "_37kytuf",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "urz8cchu",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.matrixlib.defmatrix",
                    "defaultValue": "numpy.matrixlib.defmatrix",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8u3qaybv",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3blclqoz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}