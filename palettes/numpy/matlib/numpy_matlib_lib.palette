{
    "modelData": {
        "filePath": "numpy_matlib_lib.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "``numpy.lib`` is mostly a space for implementing functions that don't\nbelong in core or in another NumPy submodule with a clear purpose\n(e.g. ``random``, ``fft``, ``linalg``, ``ma``).\n\n``numpy.lib``'s private submodules contain basic functions that are used by\nother public modules and are useful to have in the main name-space.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.3",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "matlib",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "79e194c30fc6bec2852bad3b1d404f2890ee9f3354a0e2c3d761cda3880ffff1",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755100315.066322,
        "numLGNodes": 56
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "lu08mz5w",
            "name": "scimath.arccos",
            "description": "Compute the inverse cosine of x.\n    \n    Return the \"principal value\" (for a description of this, see\n    `numpy.arccos`) of the inverse cosine of `x`. For real `x` such that\n    `abs(x) <= 1`, this is a real number in the closed interval\n    :math:`[0, \\pi]`.  Otherwise, the complex principle value is returned.\n    \n    Parameters\n    ----------\n    x : array_like or scalar\n       The value(s) whose arccos is (are) required.\n    \n    Returns\n    -------\n    out : ndarray or scalar\n       The inverse cosine(s) of the `x` value(s). If `x` was a scalar, so\n       is `out`, otherwise an array object is returned.\n    \n    See Also\n    --------\n    numpy.arccos\n    \n    Notes\n    -----\n    For an arccos() that returns ``NAN`` when real `x` is not in the\n    interval ``[-1,1]``, use `numpy.arccos`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> np.set_printoptions(precision=4)\n    \n    >>> np.emath.arccos(1) # a scalar is returned\n    0.0\n    \n    >>> np.emath.arccos([1,2])\n    array([0.-0.j   , 0.-1.317j])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "95d50325159f175d20032da8a709078155c9bb709075f301e21b972a5abb05ac",
            "fields": [
                {
                    "id": "kdi16zv2",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The value(s) whose arccos is (are) required.",
                    "type": "arraylike or scalar",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ipjppuby",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.arccos",
                    "defaultValue": "numpy.lib.scimath.arccos",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ujdbo3xm",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w5z1cpjb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ezuvyy7j",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vxnqce6i",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c10eybj3",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n50g4h58",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "8owbxw9q",
            "name": "scimath.arcsin",
            "description": "Compute the inverse sine of x.\n    \n    Return the \"principal value\" (for a description of this, see\n    `numpy.arcsin`) of the inverse sine of `x`. For real `x` such that\n    `abs(x) <= 1`, this is a real number in the closed interval\n    :math:`[-\\pi/2, \\pi/2]`.  Otherwise, the complex principle value is\n    returned.\n    \n    Parameters\n    ----------\n    x : array_like or scalar\n       The value(s) whose arcsin is (are) required.\n    \n    Returns\n    -------\n    out : ndarray or scalar\n       The inverse sine(s) of the `x` value(s). If `x` was a scalar, so\n       is `out`, otherwise an array object is returned.\n    \n    See Also\n    --------\n    numpy.arcsin\n    \n    Notes\n    -----\n    For an arcsin() that returns ``NAN`` when real `x` is not in the\n    interval ``[-1,1]``, use `numpy.arcsin`.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> np.set_printoptions(precision=4)\n    \n    >>> np.emath.arcsin(0)\n    0.0\n    \n    >>> np.emath.arcsin([0,1])\n    array([0.    , 1.5708])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7f5b41641b8b890b56422e5f911d12e277e465e48d9c5d3e704747ced89f243c",
            "fields": [
                {
                    "id": "gsm1xdeo",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The value(s) whose arcsin is (are) required.",
                    "type": "arraylike or scalar",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w0a89yw0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.arcsin",
                    "defaultValue": "numpy.lib.scimath.arcsin",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3eqe9lbr",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "flbybbo1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "_ier5pve",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "75eao8tv",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8qpng_jd",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h1rllntg",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "c1f77o9j",
            "name": "scimath.arctanh",
            "description": "Compute the inverse hyperbolic tangent of `x`.\n    \n    Return the \"principal value\" (for a description of this, see\n    `numpy.arctanh`) of ``arctanh(x)``. For real `x` such that\n    ``abs(x) < 1``, this is a real number.  If `abs(x) > 1`, or if `x` is\n    complex, the result is complex. Finally, `x = 1` returns``inf`` and\n    ``x=-1`` returns ``-inf``.\n    \n    Parameters\n    ----------\n    x : array_like\n       The value(s) whose arctanh is (are) required.\n    \n    Returns\n    -------\n    out : ndarray or scalar\n       The inverse hyperbolic tangent(s) of the `x` value(s). If `x` was\n       a scalar so is `out`, otherwise an array is returned.\n    \n    \n    See Also\n    --------\n    numpy.arctanh\n    \n    Notes\n    -----\n    For an arctanh() that returns ``NAN`` when real `x` is not in the\n    interval ``(-1,1)``, use `numpy.arctanh` (this latter, however, does\n    return +/-inf for ``x = +/-1``).\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> np.set_printoptions(precision=4)\n    \n    >>> np.emath.arctanh(0.5)\n    0.5493061443340549\n    \n    >>> from numpy.testing import suppress_warnings\n    >>> with suppress_warnings() as sup:\n    ...     sup.filter(RuntimeWarning)\n    ...     np.emath.arctanh(np.eye(2))\n    array([[inf,  0.],\n           [ 0., inf]])\n    >>> np.emath.arctanh([1j])\n    array([0.+0.7854j])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8807e5d5c0414b50a4db36102b00270a577cd4694cebab3a7e8835a0524a9da8",
            "fields": [
                {
                    "id": "3fo0mvxx",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The value(s) whose arctanh is (are) required.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y5zrf8oc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.arctanh",
                    "defaultValue": "numpy.lib.scimath.arctanh",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i6qk7onu",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ku10rwrc",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ddm_z6wv",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "07xh6ir3",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j3ur9u72",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4cq54m9n",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "7gz0733o",
            "name": "scimath.log",
            "description": "Compute the natural logarithm of `x`.\n    \n    Return the \"principal value\" (for a description of this, see `numpy.log`)\n    of :math:`log_e(x)`. For real `x > 0`, this is a real number (``log(0)``\n    returns ``-inf`` and ``log(np.inf)`` returns ``inf``). Otherwise, the\n    complex principle value is returned.\n    \n    Parameters\n    ----------\n    x : array_like\n       The value(s) whose log is (are) required.\n    \n    Returns\n    -------\n    out : ndarray or scalar\n       The log of the `x` value(s). If `x` was a scalar, so is `out`,\n       otherwise an array is returned.\n    \n    See Also\n    --------\n    numpy.log\n    \n    Notes\n    -----\n    For a log() that returns ``NAN`` when real `x < 0`, use `numpy.log`\n    (note, however, that otherwise `numpy.log` and this `log` are identical,\n    i.e., both return ``-inf`` for `x = 0`, ``inf`` for `x = inf`, and,\n    notably, the complex principle value if ``x.imag != 0``).\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> np.emath.log(np.exp(1))\n    1.0\n    \n    Negative arguments are handled \"correctly\" (recall that\n    ``exp(log(x)) == x`` does *not* hold for real ``x < 0``):\n    \n    >>> np.emath.log(-np.exp(1)) == (1 + np.pi * 1j)\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cd3af6a930fa8fdab640bfe43df69fb6bacc8d38fbd876df75af0b9ee2772e9c",
            "fields": [
                {
                    "id": "mcf5sgfu",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The value(s) whose log is (are) required.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i6ghund4",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.log",
                    "defaultValue": "numpy.lib.scimath.log",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nvct42w4",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v6ux2lkd",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "w6imra2x",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pwmkcr6i",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vn_f8uxt",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4433icje",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "nx1f4zlp",
            "name": "scimath.log10",
            "description": "Compute the logarithm base 10 of `x`.\n    \n    Return the \"principal value\" (for a description of this, see\n    `numpy.log10`) of :math:`log_{10}(x)`. For real `x > 0`, this\n    is a real number (``log10(0)`` returns ``-inf`` and ``log10(np.inf)``\n    returns ``inf``). Otherwise, the complex principle value is returned.\n    \n    Parameters\n    ----------\n    x : array_like or scalar\n       The value(s) whose log base 10 is (are) required.\n    \n    Returns\n    -------\n    out : ndarray or scalar\n       The log base 10 of the `x` value(s). If `x` was a scalar, so is `out`,\n       otherwise an array object is returned.\n    \n    See Also\n    --------\n    numpy.log10\n    \n    Notes\n    -----\n    For a log10() that returns ``NAN`` when real `x < 0`, use `numpy.log10`\n    (note, however, that otherwise `numpy.log10` and this `log10` are\n    identical, i.e., both return ``-inf`` for `x = 0`, ``inf`` for `x = inf`,\n    and, notably, the complex principle value if ``x.imag != 0``).\n    \n    Examples\n    --------\n    >>> import numpy as np\n    \n    (We set the printing precision so the example can be auto-tested)\n    \n    >>> np.set_printoptions(precision=4)\n    \n    >>> np.emath.log10(10**1)\n    1.0\n    \n    >>> np.emath.log10([-10**1, -10**2, 10**2])\n    array([1.+1.3644j, 2.+1.3644j, 2.+0.j    ])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4af9124825b244815fc62e22cad7edda8bc29f319050e7042f9ce54c192cd144",
            "fields": [
                {
                    "id": "4zs_t38j",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The value(s) whose log base 10 is (are) required.",
                    "type": "arraylike or scalar",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xrkun81v",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.log10",
                    "defaultValue": "numpy.lib.scimath.log10",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "53gnffhg",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uiwr1t4z",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "lch72xcx",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wwjcc1g5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m0ucm_tq",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0doy9_b7",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ayl8d0r2",
            "name": "scimath.log2",
            "description": "Compute the logarithm base 2 of `x`.\n    \n    Return the \"principal value\" (for a description of this, see\n    `numpy.log2`) of :math:`log_2(x)`. For real `x > 0`, this is\n    a real number (``log2(0)`` returns ``-inf`` and ``log2(np.inf)`` returns\n    ``inf``). Otherwise, the complex principle value is returned.\n    \n    Parameters\n    ----------\n    x : array_like\n       The value(s) whose log base 2 is (are) required.\n    \n    Returns\n    -------\n    out : ndarray or scalar\n       The log base 2 of the `x` value(s). If `x` was a scalar, so is `out`,\n       otherwise an array is returned.\n    \n    See Also\n    --------\n    numpy.log2\n    \n    Notes\n    -----\n    For a log2() that returns ``NAN`` when real `x < 0`, use `numpy.log2`\n    (note, however, that otherwise `numpy.log2` and this `log2` are\n    identical, i.e., both return ``-inf`` for `x = 0`, ``inf`` for `x = inf`,\n    and, notably, the complex principle value if ``x.imag != 0``).\n    \n    Examples\n    --------\n    \n    We set the printing precision so the example can be auto-tested:\n    \n    >>> np.set_printoptions(precision=4)\n    \n    >>> np.emath.log2(8)\n    3.0\n    >>> np.emath.log2([-4, -8, 8])\n    array([2.+4.5324j, 3.+4.5324j, 3.+0.j    ])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3b2089fad51dbd11d82a9121cea5a7ed2116dd4128b651b6456f3be1d8d17fc2",
            "fields": [
                {
                    "id": "bjxlags7",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The value(s) whose log base 2 is (are) required.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gzs3p9_n",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.log2",
                    "defaultValue": "numpy.lib.scimath.log2",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n7ucfeww",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gyi6_s3p",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "7kn4lyo_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ycp8xhju",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "90uuhh5_",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "muxuvyqm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "cqve0i6j",
            "name": "scimath.logn",
            "description": "Take log base n of x.\n    \n    If `x` contains negative inputs, the answer is computed and returned in the\n    complex domain.\n    \n    Parameters\n    ----------\n    n : array_like\n       The integer base(s) in which the log is taken.\n    x : array_like\n       The value(s) whose log base `n` is (are) required.\n    \n    Returns\n    -------\n    out : ndarray or scalar\n       The log base `n` of the `x` value(s). If `x` was a scalar, so is\n       `out`, otherwise an array is returned.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> np.set_printoptions(precision=4)\n    \n    >>> np.emath.logn(2, [4, 8])\n    array([2., 3.])\n    >>> np.emath.logn(2, [-4, -8, 8])\n    array([2.+4.5324j, 3.+4.5324j, 3.+0.j    ])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "180ec26c5510c1f2d698da1345b04af28f096df19fbaa40ae2eabc4f9e67f6b3",
            "fields": [
                {
                    "id": "8c8ce81d",
                    "encoding": "",
                    "name": "n",
                    "value": "",
                    "defaultValue": "",
                    "description": "The integer base(s) in which the log is taken.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7xt6zscx",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The value(s) whose log base `n` is (are) required.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l_euaj0s",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.logn",
                    "defaultValue": "numpy.lib.scimath.logn",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "htpejwp_",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dbgflti9",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "td6o0bcd",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a6i5ipd4",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tdleyzr5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s2jj09hq",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "vs58laui",
            "name": "scimath.power",
            "description": "Return x to the power p, (x**p).\n    \n    If `x` contains negative values, the output is converted to the\n    complex domain.\n    \n    Parameters\n    ----------\n    x : array_like\n        The input value(s).\n    p : array_like of ints\n        The power(s) to which `x` is raised. If `x` contains multiple values,\n        `p` has to either be a scalar, or contain the same number of values\n        as `x`. In the latter case, the result is\n        ``x[0]**p[0], x[1]**p[1], ...``.\n    \n    Returns\n    -------\n    out : ndarray or scalar\n        The result of ``x**p``. If `x` and `p` are scalars, so is `out`,\n        otherwise an array is returned.\n    \n    See Also\n    --------\n    numpy.power\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> np.set_printoptions(precision=4)\n    \n    >>> np.emath.power(2, 2)\n    4\n    \n    >>> np.emath.power([2, 4], 2)\n    array([ 4, 16])\n    \n    >>> np.emath.power([2, 4], -2)\n    array([0.25  ,  0.0625])\n    \n    >>> np.emath.power([-2, 4], 2)\n    array([ 4.-0.j, 16.+0.j])\n    \n    >>> np.emath.power([2, 4], [2, 4])\n    array([ 4, 256])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "7c400857e786d7a66941e2cafe582cf20596a832fc25abc3b3c658f81869e442",
            "fields": [
                {
                    "id": "rfjcd54s",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input value(s).",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xer5yynf",
                    "encoding": "",
                    "name": "p",
                    "value": "",
                    "defaultValue": "",
                    "description": "The power(s) to which `x` is raised. If `x` contains multiple values,\n`p` has to either be a scalar, or contain the same number of values\nas `x`. In the latter case, the result is\n``x[0]**p[0], x[1]**p[1], ...``.",
                    "type": "arraylike of ints",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hid9os6f",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.power",
                    "defaultValue": "numpy.lib.scimath.power",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mwkfylxg",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ugfcn62f",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "m6u4rkxu",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ra4i4s7u",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ofz_8i3e",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5lmd1tc4",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "m27mcg98",
            "name": "scimath.sqrt",
            "description": "Compute the square root of x.\n    \n    For negative input elements, a complex value is returned\n    (unlike `numpy.sqrt` which returns NaN).\n    \n    Parameters\n    ----------\n    x : array_like\n       The input value(s).\n    \n    Returns\n    -------\n    out : ndarray or scalar\n       The square root of `x`. If `x` was a scalar, so is `out`,\n       otherwise an array is returned.\n    \n    See Also\n    --------\n    numpy.sqrt\n    \n    Examples\n    --------\n    For real, non-negative inputs this works just like `numpy.sqrt`:\n    \n    >>> import numpy as np\n    \n    >>> np.emath.sqrt(1)\n    1.0\n    >>> np.emath.sqrt([1, 4])\n    array([1.,  2.])\n    \n    But it automatically handles negative inputs:\n    \n    >>> np.emath.sqrt(-1)\n    1j\n    >>> np.emath.sqrt([-1,4])\n    array([0.+1.j, 2.+0.j])\n    \n    Different results are expected because:\n    floating point 0.0 and -0.0 are distinct.\n    \n    For more control, explicitly use complex() as follows:\n    \n    >>> np.emath.sqrt(complex(-4.0, 0.0))\n    2j\n    >>> np.emath.sqrt(complex(-4.0, -0.0))\n    -2j",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ff032824261692ca064478722d53500bf572f658cd5edb7ab7d6dc8e1e9d20c6",
            "fields": [
                {
                    "id": "5sw4xnc_",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The input value(s).",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gr95gvcb",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.scimath.sqrt",
                    "defaultValue": "numpy.lib.scimath.sqrt",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d80n5hsb",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6pm7sjeu",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "s_9qpole",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_n4_0ug8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.scimath",
                    "defaultValue": "numpy.lib.scimath",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "76ccyjfi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hkyncdqv",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "sjc0xvnr",
            "name": "Arrayterator.__init__",
            "description": "\nBuffered iterator for big arrays.\n    \n    `Arrayterator` creates a buffered iterator for reading big arrays in small\n    contiguous blocks. The class is useful for objects stored in the\n    file system. It allows iteration over the object *without* reading\n    everything in memory; instead, small blocks are read and iterated over.\n    \n    `Arrayterator` can be used with any object that supports multidimensional\n    slices. This includes NumPy arrays, but also variables from\n    Scientific.IO.NetCDF or pynetcdf for example.\n    \n    Parameters\n    ----------\n    var : array_like\n        The object to iterate over.\n    buf_size : int, optional\n        The buffer size. If `buf_size` is supplied, the maximum amount of\n        data that will be read into memory is `buf_size` elements.\n        Default is None, which will read as many element as possible\n        into memory.\n    \n    Attributes\n    ----------\n    var\n    buf_size\n    start\n    stop\n    step\n    shape\n    flat\n    \n    See Also\n    --------\n    numpy.ndenumerate : Multidimensional array iterator.\n    numpy.flatiter : Flat array iterator.\n    numpy.memmap : Create a memory-map to an array stored\n                   in a binary file on disk.\n    \n    Notes\n    -----\n    The algorithm works by first finding a \"running dimension\", along which\n    the blocks will be extracted. Given an array of dimensions\n    ``(d1, d2, ..., dn)``, e.g. if `buf_size` is smaller than ``d1``, the\n    first dimension will be used. If, on the other hand,\n    ``d1 < buf_size < d1*d2`` the second dimension will be used, and so on.\n    Blocks are extracted along this dimension, and when the last block is\n    returned the process continues from the next dimension, until all\n    elements have been read.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> a = np.arange(3 * 4 * 5 * 6).reshape(3, 4, 5, 6)\n    >>> a_itor = np.lib.Arrayterator(a, 2)\n    >>> a_itor.shape\n    (3, 4, 5, 6)\n    \n    Now we can iterate over ``a_itor``, and it will return arrays of size\n    two. Since `buf_size` was smaller than any dimension, the first\n    dimension will be iterated over first:\n    \n    >>> for subarr in a_itor:\n    ...     if not subarr.all():\n    ...         print(subarr, subarr.shape) # doctest: +SKIP\n    >>> # [[[[0 1]]]] (1, 1, 1, 2)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f5e810d9f2db019c07f2420ca2508324d2cbf19c94f91c59ec8957a75d08ab32",
            "fields": [
                {
                    "id": "oo51numv",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to Arrayterator object",
                    "type": "Object:numpy.lib.Arrayterator",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u_34nio5",
                    "encoding": "",
                    "name": "var",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xo9aq41t",
                    "encoding": "",
                    "name": "buf_size",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ja1o4ynw",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.lib.Arrayterator.__init__",
                    "defaultValue": "numpy.matlib.numpy.lib.Arrayterator.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qdbkx5tp",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vyybyt8f",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "dfb9th5e",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5zppw9ni",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.Arrayterator",
                    "defaultValue": "numpy.lib.Arrayterator",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gzu5hpbg",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pnx0n7zc",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "u898q55h",
            "name": "NumpyVersion.__init__",
            "description": "\nParse and compare numpy version strings.\n    \n    NumPy has the following versioning scheme (numbers given are examples; they\n    can be > 9 in principle):\n    \n    - Released version: '1.8.0', '1.8.1', etc.\n    - Alpha: '1.8.0a1', '1.8.0a2', etc.\n    - Beta: '1.8.0b1', '1.8.0b2', etc.\n    - Release candidates: '1.8.0rc1', '1.8.0rc2', etc.\n    - Development versions: '1.8.0.dev-f1234afa' (git commit hash appended)\n    - Development versions after a1: '1.8.0a1.dev-f1234afa',\n                                     '1.8.0b2.dev-f1234afa',\n                                     '1.8.1rc1.dev-f1234afa', etc.\n    - Development versions (no git hash available): '1.8.0.dev-Unknown'\n    \n    Comparing needs to be done against a valid version string or other\n    `NumpyVersion` instance. Note that all development versions of the same\n    (pre-)release compare equal.\n    \n    Parameters\n    ----------\n    vstring : str\n        NumPy version string (``np.__version__``).\n    \n    Examples\n    --------\n    >>> from numpy.lib import NumpyVersion\n    >>> if NumpyVersion(np.__version__) < '1.7.0':\n    ...     print('skip')\n    >>> # skip\n    \n    >>> NumpyVersion('1.7')  # raises ValueError, add \".0\"\n    Traceback (most recent call last):\n        ...\n    ValueError: Not a valid numpy version string",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "740d5b1d8033e5244ee8c6270d78191f35485f1c7b6810872e20b1b2a17cf8e7",
            "fields": [
                {
                    "id": "bxldd3fi",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to NumpyVersion object",
                    "type": "Object:numpy.lib.NumpyVersion",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "14xuwred",
                    "encoding": "",
                    "name": "vstring",
                    "value": "",
                    "defaultValue": "",
                    "description": "NumPy version string (``np.__version__``).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wx1l5gv9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.lib.NumpyVersion.__init__",
                    "defaultValue": "numpy.matlib.numpy.lib.NumpyVersion.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_m7xlinm",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "diuygcio",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "53fv8vhh",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "191pibwx",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.NumpyVersion",
                    "defaultValue": "numpy.lib.NumpyVersion",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8vn_1e5a",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2h4tcdnm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "1czn1x82",
            "name": "lib.add_docstring",
            "description": "Add a docstring to a built-in obj if possible.\nIf the obj already has a docstring raise a RuntimeError\nIf this routine does not know how to add a docstring to the object\nraise a TypeError",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "98edc75fc4fc0b12f522f4ed2a6ffed1b952e8a0d3b6a77eadac6bbae6b05d0b",
            "fields": [
                {
                    "id": "junjxl9o",
                    "encoding": "",
                    "name": "obj",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_0y8kd_e",
                    "encoding": "",
                    "name": "docstring",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "frm995zp",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.add_docstring",
                    "defaultValue": "numpy.lib.add_docstring",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lfcbpu7i",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "30j645wp",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "yc5lhxv_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y5zh4lqb",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib",
                    "defaultValue": "numpy.lib",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j60dswop",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8b0vica0",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "e64rqgyj",
            "name": "lib.add_newdoc",
            "description": "Add documentation to an existing object, typically one defined in C\n    \n    The purpose is to allow easier editing of the docstrings without requiring\n    a re-compile. This exists primarily for internal use within numpy itself.\n    \n    Parameters\n    ----------\n    place : str\n        The absolute name of the module to import from\n    obj : str or None\n        The name of the object to add documentation to, typically a class or\n        function name.\n    doc : {str, Tuple[str, str], List[Tuple[str, str]]}\n        If a string, the documentation to apply to `obj`\n    \n        If a tuple, then the first element is interpreted as an attribute\n        of `obj` and the second as the docstring to apply -\n        ``(method, docstring)``\n    \n        If a list, then each element of the list should be a tuple of length\n        two - ``[(method1, docstring1), (method2, docstring2), ...]``\n    warn_on_python : bool\n        If True, the default, emit `UserWarning` if this is used to attach\n        documentation to a pure-python object.\n    \n    Notes\n    -----\n    This routine never raises an error if the docstring can't be written, but\n    will raise an error if the object being documented does not exist.\n    \n    This routine cannot modify read-only docstrings, as appear\n    in new-style classes or built-in functions. Because this\n    routine never raises an error the caller must check manually\n    that the docstrings were changed.\n    \n    Since this function grabs the ``char *`` from a c-level str object and puts\n    it into the ``tp_doc`` slot of the type of `obj`, it violates a number of\n    C-API best-practices, by:\n    \n    - modifying a `PyTypeObject` after calling `PyType_Ready`\n    - calling `Py_INCREF` on the str and losing the reference, so the str\n      will never be released\n    \n    If possible it should be avoided.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "59326a8a70f381dab43082498507743d428601038486312350d63ffc5501f0e8",
            "fields": [
                {
                    "id": "c61kpqr_",
                    "encoding": "",
                    "name": "place",
                    "value": "",
                    "defaultValue": "",
                    "description": "The absolute name of the module to import from",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qj5bpt_2",
                    "encoding": "",
                    "name": "obj",
                    "value": "",
                    "defaultValue": "",
                    "description": "The name of the object to add documentation to, typically a class or\nfunction name.",
                    "type": "str or None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hmspv8bz",
                    "encoding": "",
                    "name": "doc",
                    "value": "",
                    "defaultValue": "",
                    "description": "If a string, the documentation to apply to `obj`\n\nIf a tuple, then the first element is interpreted as an attribute\nof `obj` and the second as the docstring to apply -\n``(method, docstring)``\n\nIf a list, then each element of the list should be a tuple of length\ntwo - ``[(method1, docstring1), (method2, docstring2), ...]``",
                    "type": "{str, Tuple[str, str], List[Tuple[str, str]]}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8u3yyz59",
                    "encoding": "",
                    "name": "warn_on_python",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, the default, emit `UserWarning` if this is used to attach\ndocumentation to a pure-python object.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jtubqm9i",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.add_newdoc",
                    "defaultValue": "numpy.lib.add_newdoc",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e5tgbfwi",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2bq9ingd",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "b3ai9xi5",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "unuzl4nd",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib",
                    "defaultValue": "numpy.lib",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0qu5m5tz",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9jxrvoao",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "td3qzvf_",
            "name": "array_utils.byte_bounds",
            "description": "Returns pointers to the end-points of an array.\n    \n    Parameters\n    ----------\n    a : ndarray\n        Input array. It must conform to the Python-side of the array\n        interface.\n    \n    Returns\n    -------\n    (low, high) : tuple of 2 integers\n        The first integer is the first byte of the array, the second\n        integer is just past the last byte of the array.  If `a` is not\n        contiguous it will not use every byte between the (`low`, `high`)\n        values.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> I = np.eye(2, dtype='f'); I.dtype\n    dtype('float32')\n    >>> low, high = np.lib.array_utils.byte_bounds(I)\n    >>> high - low == I.size*I.itemsize\n    True\n    >>> I = np.eye(2); I.dtype\n    dtype('float64')\n    >>> low, high = np.lib.array_utils.byte_bounds(I)\n    >>> high - low == I.size*I.itemsize\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "73c895307a80affdfff18674fbfa261f8fb7f714a706b2c81e3eec3c71cf3d1e",
            "fields": [
                {
                    "id": "1c9mzx8m",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array. It must conform to the Python-side of the array\ninterface.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cavtyudb",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.array_utils.byte_bounds",
                    "defaultValue": "numpy.lib.array_utils.byte_bounds",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5xs6tcer",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ne7jryvp",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "jqcbxmo7",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "itx6y9_s",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.array_utils",
                    "defaultValue": "numpy.lib.array_utils",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ge2e0b3k",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h3venmtz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "wmlzd7is",
            "name": "array_utils.normalize_axis_index",
            "description": "Normalizes an axis index, `axis`, such that is a valid positive index into\nthe shape of array with `ndim` dimensions. Raises an AxisError with an\nappropriate message if this is not possible.\n\nUsed internally by all axis-checking logic.\n\nParameters\n----------\naxis : int\n    The un-normalized index of the axis. Can be negative\nndim : int\n    The number of dimensions of the array that `axis` should be normalized\n    against\nmsg_prefix : str\n    A prefix to put before the message, typically the name of the argument\n\nReturns\n-------\nnormalized_axis : int\n    The normalized axis index, such that `0 <= normalized_axis < ndim`\n\nRaises\n------\nAxisError\n    If the axis index is invalid, when `-ndim <= axis < ndim` is false.\n\nExamples\n--------\n>>> import numpy as np\n>>> from numpy.lib.array_utils import normalize_axis_index\n>>> normalize_axis_index(0, ndim=3)\n0\n>>> normalize_axis_index(1, ndim=3)\n1\n>>> normalize_axis_index(-1, ndim=3)\n2\n\n>>> normalize_axis_index(3, ndim=3)\nTraceback (most recent call last):\n...\nnumpy.exceptions.AxisError: axis 3 is out of bounds for array ...\n>>> normalize_axis_index(-4, ndim=3, msg_prefix='axes_arg')\nTraceback (most recent call last):\n...\nnumpy.exceptions.AxisError: axes_arg: axis -4 is out of bounds ...",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b42fba68bf73a67e36a407984822f2c251aa02e21e3adb8363753f088f867d66",
            "fields": [
                {
                    "id": "0fskxlbr",
                    "encoding": "",
                    "name": "axis",
                    "value": "",
                    "defaultValue": "",
                    "description": "The un-normalized index of the axis. Can be negative",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ea5i30tg",
                    "encoding": "",
                    "name": "ndim",
                    "value": "",
                    "defaultValue": "",
                    "description": "The number of dimensions of the array that `axis` should be normalized\nagainst",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r82e9lwo",
                    "encoding": "",
                    "name": "msg_prefix",
                    "value": "None",
                    "defaultValue": "None",
                    "description": "A prefix to put before the message, typically the name of the argument",
                    "type": "typing.Any",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "grfm04cn",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.array_utils.normalize_axis_index",
                    "defaultValue": "numpy.lib.array_utils.normalize_axis_index",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9j99ch8k",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ecqniukh",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "z3g6t83i",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3isvkz_n",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.array_utils",
                    "defaultValue": "numpy.lib.array_utils",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "egf9hjjq",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rpi4qhm8",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "36uy9dh9",
            "name": "array_utils.normalize_axis_tuple",
            "description": "Normalizes an axis argument into a tuple of non-negative integer axes.\n    \n    This handles shorthands such as ``1`` and converts them to ``(1,)``,\n    as well as performing the handling of negative indices covered by\n    `normalize_axis_index`.\n    \n    By default, this forbids axes from being specified multiple times.\n    \n    Used internally by multi-axis-checking logic.\n    \n    Parameters\n    ----------\n    axis : int, iterable of int\n        The un-normalized index or indices of the axis.\n    ndim : int\n        The number of dimensions of the array that `axis` should be normalized\n        against.\n    argname : str, optional\n        A prefix to put before the error message, typically the name of the\n        argument.\n    allow_duplicate : bool, optional\n        If False, the default, disallow an axis from being specified twice.\n    \n    Returns\n    -------\n    normalized_axes : tuple of int\n        The normalized axis index, such that `0 <= normalized_axis < ndim`\n    \n    Raises\n    ------\n    AxisError\n        If any axis provided is out of range\n    ValueError\n        If an axis is repeated\n    \n    See also\n    --------\n    normalize_axis_index : normalizing a single scalar axis",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "175f675bbd3c5e7258b0e64a01ea20a8f1621ee5766fcd4ee376bd901e45bf43",
            "fields": [
                {
                    "id": "u_isqswo",
                    "encoding": "",
                    "name": "axis",
                    "value": "",
                    "defaultValue": "",
                    "description": "The un-normalized index or indices of the axis.",
                    "type": "int, iterable of int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w0xspfqo",
                    "encoding": "",
                    "name": "ndim",
                    "value": "",
                    "defaultValue": "",
                    "description": "The number of dimensions of the array that `axis` should be normalized\nagainst.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kpi0dhf5",
                    "encoding": "",
                    "name": "argname",
                    "value": "",
                    "defaultValue": "",
                    "description": "A prefix to put before the error message, typically the name of the\nargument.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qivpwjvi",
                    "encoding": "",
                    "name": "allow_duplicate",
                    "value": false,
                    "defaultValue": false,
                    "description": "If False, the default, disallow an axis from being specified twice.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rfzmrjin",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.array_utils.normalize_axis_tuple",
                    "defaultValue": "numpy.lib.array_utils.normalize_axis_tuple",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lkwalwp7",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_tahx81q",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "3dhcc6_3",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "834gqgps",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.array_utils",
                    "defaultValue": "numpy.lib.array_utils",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k5spfdvl",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "is8jwib2",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "e54sf1hy",
            "name": "introspect.opt_func_info",
            "description": "Returns a dictionary containing the currently supported CPU dispatched\n    features for all optimized functions.\n    \n    Parameters\n    ----------\n    func_name : str (optional)\n        Regular expression to filter by function name.\n    \n    signature : str (optional)\n        Regular expression to filter by data type.\n    \n    Returns\n    -------\n    dict\n        A dictionary where keys are optimized function names and values are\n        nested dictionaries indicating supported targets based on data types.\n    \n    Examples\n    --------\n    Retrieve dispatch information for functions named 'add' or 'sub' and\n    data types 'float64' or 'float32':\n    \n    >>> import numpy as np\n    >>> dict = np.lib.introspect.opt_func_info(\n    ...     func_name=\"add|abs\", signature=\"float64|complex64\"\n    ... )\n    >>> import json\n    >>> print(json.dumps(dict, indent=2))\n        {\n          \"absolute\": {\n            \"dd\": {\n              \"current\": \"SSE41\",\n              \"available\": \"SSE41 baseline(SSE SSE2 SSE3)\"\n            },\n            \"Ff\": {\n              \"current\": \"FMA3__AVX2\",\n              \"available\": \"AVX512F FMA3__AVX2 baseline(SSE SSE2 SSE3)\"\n            },\n            \"Dd\": {\n              \"current\": \"FMA3__AVX2\",\n              \"available\": \"AVX512F FMA3__AVX2 baseline(SSE SSE2 SSE3)\"\n            }\n          },\n          \"add\": {\n            \"ddd\": {\n              \"current\": \"FMA3__AVX2\",\n              \"available\": \"FMA3__AVX2 baseline(SSE SSE2 SSE3)\"\n            },\n            \"FFF\": {\n              \"current\": \"FMA3__AVX2\",\n              \"available\": \"FMA3__AVX2 baseline(SSE SSE2 SSE3)\"\n            }\n          }\n        }",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e83c53192779bbd223fb05c449aa84e5fe09bb348937e1baed18d7040a20db44",
            "fields": [
                {
                    "id": "tadfc83y",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.introspect.opt_func_info",
                    "defaultValue": "numpy.lib.introspect.opt_func_info",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "km8xak_r",
                    "encoding": "",
                    "name": "signature",
                    "value": "",
                    "defaultValue": "",
                    "description": "Regular expression to filter by data type.",
                    "type": "str ",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dh9twlwc",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9j6h11_x",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6cubx1jm",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ovaq6qzj",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.introspect",
                    "defaultValue": "numpy.lib.introspect",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j2g_aagw",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6fftn6jv",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "texag771",
            "name": "NDArrayOperatorsMixin.__init__",
            "description": "\nMixin defining all operator special methods using __array_ufunc__.\n    \n    This class implements the special methods for almost all of Python's\n    builtin operators defined in the `operator` module, including comparisons\n    (``==``, ``>``, etc.) and arithmetic (``+``, ``*``, ``-``, etc.), by\n    deferring to the ``__array_ufunc__`` method, which subclasses must\n    implement.\n    \n    It is useful for writing classes that do not inherit from `numpy.ndarray`,\n    but that should support arithmetic and numpy universal functions like\n    arrays as described in :external+neps:doc:`nep-0013-ufunc-overrides`.\n    \n    As an trivial example, consider this implementation of an ``ArrayLike``\n    class that simply wraps a NumPy array and ensures that the result of any\n    arithmetic operation is also an ``ArrayLike`` object:\n    \n        >>> import numbers\n        >>> class ArrayLike(np.lib.mixins.NDArrayOperatorsMixin):\n        ...     def __init__(self, value):\n        ...         self.value = np.asarray(value)\n        ...\n        ...     # One might also consider adding the built-in list type to this\n        ...     # list, to support operations like np.add(array_like, list)\n        ...     _HANDLED_TYPES = (np.ndarray, numbers.Number)\n        ...\n        ...     def __array_ufunc__(self, ufunc, method, *inputs, **kwargs):\n        ...         out = kwargs.get('out', ())\n        ...         for x in inputs + out:\n        ...             # Only support operations with instances of\n        ...             # _HANDLED_TYPES. Use ArrayLike instead of type(self)\n        ...             # for isinstance to allow subclasses that don't\n        ...             # override __array_ufunc__ to handle ArrayLike objects.\n        ...             if not isinstance(\n        ...                 x, self._HANDLED_TYPES + (ArrayLike,)\n        ...             ):\n        ...                 return NotImplemented\n        ...\n        ...         # Defer to the implementation of the ufunc\n        ...         # on unwrapped values.\n        ...         inputs = tuple(x.value if isinstance(x, ArrayLike) else x\n        ...                     for x in inputs)\n        ...         if out:\n        ...             kwargs['out'] = tuple(\n        ...                 x.value if isinstance(x, ArrayLike) else x\n        ...                 for x in out)\n        ...         result = getattr(ufunc, method)(*inputs, **kwargs)\n        ...\n        ...         if type(result) is tuple:\n        ...             # multiple return values\n        ...             return tuple(type(self)(x) for x in result)\n        ...         elif method == 'at':\n        ...             # no return value\n        ...             return None\n        ...         else:\n        ...             # one return value\n        ...             return type(self)(result)\n        ...\n        ...     def __repr__(self):\n        ...         return '%s(%r)' % (type(self).__name__, self.value)\n    \n    In interactions between ``ArrayLike`` objects and numbers or numpy arrays,\n    the result is always another ``ArrayLike``:\n    \n        >>> x = ArrayLike([1, 2, 3])\n        >>> x - 1\n        ArrayLike(array([0, 1, 2]))\n        >>> 1 - x\n        ArrayLike(array([ 0, -1, -2]))\n        >>> np.arange(3) - x\n        ArrayLike(array([-1, -1, -1]))\n        >>> x - np.arange(3)\n        ArrayLike(array([1, 1, 1]))\n    \n    Note that unlike ``numpy.ndarray``, ``ArrayLike`` does not allow operations\n    with arbitrary, unrecognized types. This ensures that interactions with\n    ArrayLike preserve a well-defined casting hierarchy.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0764e6b5d1a2229ba9f9892e7ffb26ed4a17642d02767b5f0769df57ed80acaa",
            "fields": [
                {
                    "id": "ct4b6okx",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to NDArrayOperatorsMixin object",
                    "type": "Object:numpy.lib.mixins.NDArrayOperatorsMixin",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": true
                },
                {
                    "id": "_t6lj8w_",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u8e4pl95",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8pfglp7o",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.mixins.NDArrayOperatorsMixin.__init__",
                    "defaultValue": "numpy.lib.mixins.NDArrayOperatorsMixin.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zxefb7du",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xjsstq4o",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wixxfdlz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nodfzozb",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.mixins.NDArrayOperatorsMixin",
                    "defaultValue": "numpy.lib.mixins.NDArrayOperatorsMixin",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kqcuejot",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v9dgdtys",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "zoynqvf7",
            "name": "DataSource.__init__",
            "description": "Create a DataSource with a local path at destpath.\nDataSource(destpath='.')\n    \n    A generic data source file (file, http, ftp, ...).\n    \n    DataSources can be local files or remote files/URLs.  The files may\n    also be compressed or uncompressed. DataSource hides some of the\n    low-level details of downloading the file, allowing you to simply pass\n    in a valid file path (or URL) and obtain a file object.\n    \n    Parameters\n    ----------\n    destpath : str or None, optional\n        Path to the directory where the source file gets downloaded to for\n        use.  If `destpath` is None, a temporary directory will be created.\n        The default path is the current directory.\n    \n    Notes\n    -----\n    URLs require a scheme string (``http://``) to be used, without it they\n    will fail::\n    \n        >>> repos = np.lib.npyio.DataSource()\n        >>> repos.exists('www.google.com/index.html')\n        False\n        >>> repos.exists('http://www.google.com/index.html')\n        True\n    \n    Temporary directories are deleted when the DataSource is deleted.\n    \n    Examples\n    --------\n    ::\n    \n        >>> ds = np.lib.npyio.DataSource('/home/guido')\n        >>> urlname = 'http://www.google.com/'\n        >>> gfile = ds.open('http://www.google.com/')\n        >>> ds.abspath(urlname)\n        '/home/guido/www.google.com/index.html'\n    \n        >>> ds = np.lib.npyio.DataSource(None)  # use with temporary file\n        >>> ds.open('/home/guido/foobar.txt')\n        <open file '/home/guido.foobar.txt', mode 'r' at 0x91d4430>\n        >>> ds.abspath('/home/guido/foobar.txt')\n        '/tmp/.../home/guido/foobar.txt'",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6b0379a7fe42ade93956756bc834dec492d58b505dbaf1ab1e9e04f8e53751a6",
            "fields": [
                {
                    "id": "f8tj8gjq",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.DataSource.__init__ object",
                    "type": "Object:numpy.lib.npyio.DataSource",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qoo2tsv4",
                    "encoding": "",
                    "name": "destpath",
                    "value": ".",
                    "defaultValue": ".",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r1xvie8i",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.DataSource.__init__",
                    "defaultValue": "numpy.lib.npyio.DataSource.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9g8t91fk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "irwu4zc4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "jlv9vrjb",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mlln_ga1",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.DataSource",
                    "defaultValue": "numpy.lib.npyio.DataSource",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xoo2l1dv",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rr5nsbwp",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "ud0n6i3z",
            "name": "DataSource.abspath",
            "description": "Return absolute path of file in the DataSource directory.\n    \n    If `path` is an URL, then `abspath` will return either the location\n    the file exists locally or the location it would exist when opened\n    using the `open` method.\n    \n    Parameters\n    ----------\n    path : str or pathlib.Path\n        Can be a local file or a remote URL.\n    \n    Returns\n    -------\n    out : str\n        Complete path, including the `DataSource` destination directory.\n    \n    Notes\n    -----\n    The functionality is based on `os.path.abspath`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b82a607433b0a4a832d86fac6b427a8ff8da29d3d765a9f6ae08624406d1a240",
            "fields": [
                {
                    "id": "c_h2p23q",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.DataSource.abspath object",
                    "type": "Object:numpy.lib.npyio.DataSource",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ae9_q50m",
                    "encoding": "",
                    "name": "path",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can be a local file or a remote URL.",
                    "type": "str or pathlib.Path",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wgvouqi8",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.DataSource.abspath",
                    "defaultValue": "numpy.lib.npyio.DataSource.abspath",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xdx0k0j_",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "767e43cb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "bc14pijx",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cring2ny",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.DataSource",
                    "defaultValue": "numpy.lib.npyio.DataSource",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f8d5lrhr",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jdkqyag1",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "1cd6f5ti",
            "name": "DataSource.exists",
            "description": "Test if path exists.\n    \n    Test if `path` exists as (and in this order):\n    \n    - a local file.\n    - a remote URL that has been downloaded and stored locally in the\n      `DataSource` directory.\n    - a remote URL that has not been downloaded, but is valid and\n      accessible.\n    \n    Parameters\n    ----------\n    path : str or pathlib.Path\n        Can be a local file or a remote URL.\n    \n    Returns\n    -------\n    out : bool\n        True if `path` exists.\n    \n    Notes\n    -----\n    When `path` is an URL, `exists` will return True if it's either\n    stored locally in the `DataSource` directory, or is a valid remote\n    URL.  `DataSource` does not discriminate between the two, the file\n    is accessible if it exists in either location.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "68676c90cac987a83496b207065ef2daac4f369923d83d30d7a5e49c0e4328dd",
            "fields": [
                {
                    "id": "zh4kk_7o",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.DataSource.exists object",
                    "type": "Object:numpy.lib.npyio.DataSource",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ho26__ox",
                    "encoding": "",
                    "name": "path",
                    "value": "",
                    "defaultValue": "",
                    "description": "Can be a local file or a remote URL.",
                    "type": "str or pathlib.Path",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0wwfzzfs",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.DataSource.exists",
                    "defaultValue": "numpy.lib.npyio.DataSource.exists",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h6k97w_l",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tn432klj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "xuk9dkxh",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2dy6qr54",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.DataSource",
                    "defaultValue": "numpy.lib.npyio.DataSource",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ybrreriz",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u1i46rpz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "tsjmp4kg",
            "name": "DataSource.open",
            "description": "Open and return file-like object.\n    \n    If `path` is an URL, it will be downloaded, stored in the\n    `DataSource` directory and opened from there.\n    \n    Parameters\n    ----------\n    path : str or pathlib.Path\n        Local file path or URL to open.\n    mode : {'r', 'w', 'a'}, optional\n        Mode to open `path`.  Mode 'r' for reading, 'w' for writing,\n        'a' to append. Available modes depend on the type of object\n        specified by `path`. Default is 'r'.\n    encoding : {None, str}, optional\n        Open text file with given encoding. The default encoding will be\n        what `open` uses.\n    newline : {None, str}, optional\n        Newline to use when reading text file.\n    \n    Returns\n    -------\n    out : file object\n        File object.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b5e8cdd90e33a9db53b413acc8927613417879cb721fffd3d1ab6d801c4f3436",
            "fields": [
                {
                    "id": "_c0drog6",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.DataSource.open object",
                    "type": "Object:numpy.lib.npyio.DataSource",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5kw8l3ck",
                    "encoding": "",
                    "name": "path",
                    "value": "",
                    "defaultValue": "",
                    "description": "Local file path or URL to open.",
                    "type": "str or pathlib.Path",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e_1vh7mu",
                    "encoding": "",
                    "name": "mode",
                    "value": "r",
                    "defaultValue": "r",
                    "description": "Mode to open `path`.  Mode 'r' for reading, 'w' for writing,\n'a' to append. Available modes depend on the type of object\nspecified by `path`. Default is 'r'.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "89coq_wr",
                    "encoding": "",
                    "name": "encoding",
                    "value": "",
                    "defaultValue": "",
                    "description": "Open text file with given encoding. The default encoding will be\nwhat `open` uses.",
                    "type": "{None, str}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d_47unc9",
                    "encoding": "",
                    "name": "newline",
                    "value": "",
                    "defaultValue": "",
                    "description": "Newline to use when reading text file.",
                    "type": "{None, str}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q60emgxu",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.DataSource.open",
                    "defaultValue": "numpy.lib.npyio.DataSource.open",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "oa93uuw1",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_w25cwhm",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wal1u0uk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4be7ja13",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.DataSource",
                    "defaultValue": "numpy.lib.npyio.DataSource",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gd3m38m4",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rjhrgk76",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "8ob4hpwp",
            "name": "NpzFile.__init__",
            "description": "\nNpzFile(fid)\n    \n    A dictionary-like object with lazy-loading of files in the zipped\n    archive provided on construction.\n    \n    `NpzFile` is used to load files in the NumPy ``.npz`` data archive\n    format. It assumes that files in the archive have a ``.npy`` extension,\n    other files are ignored.\n    \n    The arrays and file strings are lazily loaded on either\n    getitem access using ``obj['key']`` or attribute lookup using\n    ``obj.f.key``. A list of all files (without ``.npy`` extensions) can\n    be obtained with ``obj.files`` and the ZipFile object itself using\n    ``obj.zip``.\n    \n    Attributes\n    ----------\n    files : list of str\n        List of all files in the archive with a ``.npy`` extension.\n    zip : ZipFile instance\n        The ZipFile object initialized with the zipped archive.\n    f : BagObj instance\n        An object on which attribute can be performed as an alternative\n        to getitem access on the `NpzFile` instance itself.\n    allow_pickle : bool, optional\n        Allow loading pickled data. Default: False\n    pickle_kwargs : dict, optional\n        Additional keyword arguments to pass on to pickle.load.\n        These are only useful when loading object arrays saved on\n        Python 2.\n    max_header_size : int, optional\n        Maximum allowed size of the header.  Large headers may not be safe\n        to load securely and thus require explicitly passing a larger value.\n        See :py:func:`ast.literal_eval()` for details.\n        This option is ignored when `allow_pickle` is passed.  In that case\n        the file is by definition trusted and the limit is unnecessary.\n    \n    Parameters\n    ----------\n    fid : file, str, or pathlib.Path\n        The zipped archive to open. This is either a file-like object\n        or a string containing the path to the archive.\n    own_fid : bool, optional\n        Whether NpzFile should close the file handle.\n        Requires that `fid` is a file-like object.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from tempfile import TemporaryFile\n    >>> outfile = TemporaryFile()\n    >>> x = np.arange(10)\n    >>> y = np.sin(x)\n    >>> np.savez(outfile, x=x, y=y)\n    >>> _ = outfile.seek(0)\n    \n    >>> npz = np.load(outfile)\n    >>> isinstance(npz, np.lib.npyio.NpzFile)\n    True\n    >>> npz\n    NpzFile 'object' with keys: x, y\n    >>> sorted(npz.files)\n    ['x', 'y']\n    >>> npz['x']  # getitem access\n    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n    >>> npz.f.x  # attribute lookup\n    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8e95a3fe8b8ef1d676631992d0af66f14244e2c4eacb99096baac3cabab1b370",
            "fields": [
                {
                    "id": "vp9_gyv1",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to NpzFile object",
                    "type": "Object:numpy.lib.npyio.NpzFile",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x_397rcm",
                    "encoding": "",
                    "name": "fid",
                    "value": "",
                    "defaultValue": "",
                    "description": "The zipped archive to open. This is either a file-like object\nor a string containing the path to the archive.",
                    "type": "file, str, or pathlib.Path",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5vum0so8",
                    "encoding": "",
                    "name": "own_fid",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether NpzFile should close the file handle.\nRequires that `fid` is a file-like object.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m6kyvxu3",
                    "encoding": "",
                    "name": "allow_pickle",
                    "value": false,
                    "defaultValue": false,
                    "description": "Allow loading pickled data. Default: False",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vx0ujsl7",
                    "encoding": "",
                    "name": "pickle_kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "Additional keyword arguments to pass on to pickle.load.\nThese are only useful when loading object arrays saved on\nPython 2.",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v_4bz72s",
                    "encoding": "",
                    "name": "max_header_size",
                    "value": 10000,
                    "defaultValue": 10000,
                    "description": "Maximum allowed size of the header.  Large headers may not be safe\nto load securely and thus require explicitly passing a larger value.\nSee :py:func:`ast.literal_eval()` for details.\nThis option is ignored when `allow_pickle` is passed.  In that case\nthe file is by definition trusted and the limit is unnecessary.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4ln2rxnj",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.NpzFile.__init__",
                    "defaultValue": "numpy.lib.npyio.NpzFile.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d692mqcw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3kc24fpw",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "mdyav9xz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zk07w4w_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.NpzFile",
                    "defaultValue": "numpy.lib.npyio.NpzFile",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u50z0w8u",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g9atv2i6",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "5i_niuci",
            "name": "NpzFile.close",
            "description": "Close the file.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ce3f79ef86f3ed0f1165da161268d22337599d7ee75ccb9073a32bf22862645e",
            "fields": [
                {
                    "id": "9pjycwoy",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.NpzFile.close object",
                    "type": "Object:numpy.lib.npyio.NpzFile",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4jay4eei",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.NpzFile.close",
                    "defaultValue": "numpy.lib.npyio.NpzFile.close",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kw87n270",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ypwytk8c",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "123izlgb",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nedwp2ro",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.NpzFile",
                    "defaultValue": "numpy.lib.npyio.NpzFile",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hn8inn9f",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cw0xlpnd",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "p42tlrfv",
            "name": "NpzFile.get",
            "description": "D.get(k,[,d]) returns D[k] if k in D, else d.  d defaults to None.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8db8b1cfb96fe9b57fb51f3b7094ecb95eff77772b2bdaca29a470a6e70101bb",
            "fields": [
                {
                    "id": "qtny2zvg",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.NpzFile.get object",
                    "type": "Object:numpy.lib.npyio.NpzFile",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": true
                },
                {
                    "id": "g_34i_1b",
                    "encoding": "",
                    "name": "key",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": true
                },
                {
                    "id": "y0jr0dsw",
                    "encoding": "",
                    "name": "default",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": true
                },
                {
                    "id": "1e53i4be",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.NpzFile.get",
                    "defaultValue": "numpy.lib.npyio.NpzFile.get",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wyrendof",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5kga5ms1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "et7x7gge",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "puf4nk_d",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.NpzFile",
                    "defaultValue": "numpy.lib.npyio.NpzFile",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fhxd7bqo",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ai8vh793",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "6cf5qd0a",
            "name": "NpzFile.items",
            "description": "D.items() returns a set-like object providing a view on the items",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "1ac411f882c2d03a05f34ad9b267577a346b58d329ebb8eb8d4e37b11189e6ec",
            "fields": [
                {
                    "id": "8ymv8p2y",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.NpzFile.items object",
                    "type": "Object:numpy.lib.npyio.NpzFile",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xwf6bzbi",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.NpzFile.items",
                    "defaultValue": "numpy.lib.npyio.NpzFile.items",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "46_9e3we",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b65t2s3i",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "96nvz7lc",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "px5urnvf",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.NpzFile",
                    "defaultValue": "numpy.lib.npyio.NpzFile",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yjb3d0rv",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "crqg6fjl",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "814gshng",
            "name": "NpzFile.keys",
            "description": "D.keys() returns a set-like object providing a view on the keys",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b576166d163ea08bf13b30878f511aa51109160eae728b3d7c179c6cd2229b8e",
            "fields": [
                {
                    "id": "ptzswa2a",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.NpzFile.keys object",
                    "type": "Object:numpy.lib.npyio.NpzFile",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iudjat7n",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.NpzFile.keys",
                    "defaultValue": "numpy.lib.npyio.NpzFile.keys",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hje8oavd",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "woculgud",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "caq1nk6q",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v2hp2l5m",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.NpzFile",
                    "defaultValue": "numpy.lib.npyio.NpzFile",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v0aooj14",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9v6kl4ge",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "jrr95pyo",
            "name": "NpzFile.values",
            "description": "D.values() returns a set-like object providing a view on the values",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e2e1ffaa98ed4cc9950c557c2d34de668748a12001417f7cd99a0159289d9e2a",
            "fields": [
                {
                    "id": "dzez7ezq",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.lib.npyio.NpzFile.values object",
                    "type": "Object:numpy.lib.npyio.NpzFile",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kos2yrys",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.npyio.NpzFile.values",
                    "defaultValue": "numpy.lib.npyio.NpzFile.values",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x4np_3kf",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ehvc39r3",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "4lirkog_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7clmg4ro",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.npyio.NpzFile",
                    "defaultValue": "numpy.lib.npyio.NpzFile",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fj9xyf8y",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0hx4w50s",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "nlyx31_6",
            "name": "stride_tricks.as_strided",
            "description": "Create a view into the array with the given shape and strides.\n    \n    .. warning:: This function has to be used with extreme care, see notes.\n    \n    Parameters\n    ----------\n    x : ndarray\n        Array to create a new.\n    shape : sequence of int, optional\n        The shape of the new array. Defaults to ``x.shape``.\n    strides : sequence of int, optional\n        The strides of the new array. Defaults to ``x.strides``.\n    subok : bool, optional\n        If True, subclasses are preserved.\n    writeable : bool, optional\n        If set to False, the returned array will always be readonly.\n        Otherwise it will be writable if the original array was. It\n        is advisable to set this to False if possible (see Notes).\n    \n    Returns\n    -------\n    view : ndarray\n    \n    See also\n    --------\n    broadcast_to : broadcast an array to a given shape.\n    reshape : reshape an array.\n    lib.stride_tricks.sliding_window_view :\n        userfriendly and safe function for a creation of sliding window views.\n    \n    Notes\n    -----\n    ``as_strided`` creates a view into the array given the exact strides\n    and shape. This means it manipulates the internal data structure of\n    ndarray and, if done incorrectly, the array elements can point to\n    invalid memory and can corrupt results or crash your program.\n    It is advisable to always use the original ``x.strides`` when\n    calculating new strides to avoid reliance on a contiguous memory\n    layout.\n    \n    Furthermore, arrays created with this function often contain self\n    overlapping memory, so that two elements are identical.\n    Vectorized write operations on such arrays will typically be\n    unpredictable. They may even give different results for small, large,\n    or transposed arrays.\n    \n    Since writing to these arrays has to be tested and done with great\n    care, you may want to use ``writeable=False`` to avoid accidental write\n    operations.\n    \n    For these reasons it is advisable to avoid ``as_strided`` when\n    possible.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f2e8be22ea906699b853ebe4c61e7dba4d3d7ddefa5b2c1b43de97dc4d719dee",
            "fields": [
                {
                    "id": "wxoe0ouf",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Array to create a new.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7qssff2d",
                    "encoding": "",
                    "name": "shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "The shape of the new array. Defaults to ``x.shape``.",
                    "type": "sequence of int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ffxbmdk5",
                    "encoding": "",
                    "name": "strides",
                    "value": "",
                    "defaultValue": "",
                    "description": "The strides of the new array. Defaults to ``x.strides``.",
                    "type": "sequence of int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ai7n5zvs",
                    "encoding": "",
                    "name": "subok",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, subclasses are preserved.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ovbqstap",
                    "encoding": "",
                    "name": "writeable",
                    "value": true,
                    "defaultValue": true,
                    "description": "If set to False, the returned array will always be readonly.\nOtherwise it will be writable if the original array was. It\nis advisable to set this to False if possible (see Notes).",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7ahtmkrk",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.stride_tricks.as_strided",
                    "defaultValue": "numpy.lib.stride_tricks.as_strided",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vsta12wr",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "76rqb5ma",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "_pq1oigq",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ltszgioh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.stride_tricks",
                    "defaultValue": "numpy.lib.stride_tricks",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1hkb7lad",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rohruhi_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fkpk8swd",
            "name": "stride_tricks.sliding_window_view",
            "description": "Create a sliding window view into the array with the given window shape.\n    \n    Also known as rolling or moving window, the window slides across all\n    dimensions of the array and extracts subsets of the array at all window\n    positions.\n    \n    .. versionadded:: 1.20.0\n    \n    Parameters\n    ----------\n    x : array_like\n        Array to create the sliding window view from.\n    window_shape : int or tuple of int\n        Size of window over each axis that takes part in the sliding window.\n        If `axis` is not present, must have same length as the number of input\n        array dimensions. Single integers `i` are treated as if they were the\n        tuple `(i,)`.\n    axis : int or tuple of int, optional\n        Axis or axes along which the sliding window is applied.\n        By default, the sliding window is applied to all axes and\n        `window_shape[i]` will refer to axis `i` of `x`.\n        If `axis` is given as a `tuple of int`, `window_shape[i]` will refer to\n        the axis `axis[i]` of `x`.\n        Single integers `i` are treated as if they were the tuple `(i,)`.\n    subok : bool, optional\n        If True, sub-classes will be passed-through, otherwise the returned\n        array will be forced to be a base-class array (default).\n    writeable : bool, optional\n        When true, allow writing to the returned view. The default is false,\n        as this should be used with caution: the returned view contains the\n        same memory location multiple times, so writing to one location will\n        cause others to change.\n    \n    Returns\n    -------\n    view : ndarray\n        Sliding window view of the array. The sliding window dimensions are\n        inserted at the end, and the original dimensions are trimmed as\n        required by the size of the sliding window.\n        That is, ``view.shape = x_shape_trimmed + window_shape``, where\n        ``x_shape_trimmed`` is ``x.shape`` with every entry reduced by one less\n        than the corresponding window size.\n    \n    See Also\n    --------\n    lib.stride_tricks.as_strided: A lower-level and less safe routine for\n        creating arbitrary views from custom shape and strides.\n    broadcast_to: broadcast an array to a given shape.\n    \n    Notes\n    -----\n    For many applications using a sliding window view can be convenient, but\n    potentially very slow. Often specialized solutions exist, for example:\n    \n    - `scipy.signal.fftconvolve`\n    \n    - filtering functions in `scipy.ndimage`\n    \n    - moving window functions provided by\n      `bottleneck <https://github.com/pydata/bottleneck>`_.\n    \n    As a rough estimate, a sliding window approach with an input size of `N`\n    and a window size of `W` will scale as `O(N*W)` where frequently a special\n    algorithm can achieve `O(N)`. That means that the sliding window variant\n    for a window size of 100 can be a 100 times slower than a more specialized\n    version.\n    \n    Nevertheless, for small window sizes, when no custom algorithm exists, or\n    as a prototyping and developing tool, this function can be a good solution.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib.stride_tricks import sliding_window_view\n    >>> x = np.arange(6)\n    >>> x.shape\n    (6,)\n    >>> v = sliding_window_view(x, 3)\n    >>> v.shape\n    (4, 3)\n    >>> v\n    array([[0, 1, 2],\n           [1, 2, 3],\n           [2, 3, 4],\n           [3, 4, 5]])\n    \n    This also works in more dimensions, e.g.\n    \n    >>> i, j = np.ogrid[:3, :4]\n    >>> x = 10*i + j\n    >>> x.shape\n    (3, 4)\n    >>> x\n    array([[ 0,  1,  2,  3],\n           [10, 11, 12, 13],\n           [20, 21, 22, 23]])\n    >>> shape = (2,2)\n    >>> v = sliding_window_view(x, shape)\n    >>> v.shape\n    (2, 3, 2, 2)\n    >>> v\n    array([[[[ 0,  1],\n             [10, 11]],\n            [[ 1,  2],\n             [11, 12]],\n            [[ 2,  3],\n             [12, 13]]],\n           [[[10, 11],\n             [20, 21]],\n            [[11, 12],\n             [21, 22]],\n            [[12, 13],\n             [22, 23]]]])\n    \n    The axis can be specified explicitly:\n    \n    >>> v = sliding_window_view(x, 3, 0)\n    >>> v.shape\n    (1, 4, 3)\n    >>> v\n    array([[[ 0, 10, 20],\n            [ 1, 11, 21],\n            [ 2, 12, 22],\n            [ 3, 13, 23]]])\n    \n    The same axis can be used several times. In that case, every use reduces\n    the corresponding original dimension:\n    \n    >>> v = sliding_window_view(x, (2, 3), (1, 1))\n    >>> v.shape\n    (3, 1, 2, 3)\n    >>> v\n    array([[[[ 0,  1,  2],\n             [ 1,  2,  3]]],\n           [[[10, 11, 12],\n             [11, 12, 13]]],\n           [[[20, 21, 22],\n             [21, 22, 23]]]])\n    \n    Combining with stepped slicing (`::step`), this can be used to take sliding\n    views which skip elements:\n    \n    >>> x = np.arange(7)\n    >>> sliding_window_view(x, 5)[:, ::2]\n    array([[0, 2, 4],\n           [1, 3, 5],\n           [2, 4, 6]])\n    \n    or views which move by multiple elements\n    \n    >>> x = np.arange(7)\n    >>> sliding_window_view(x, 3)[::2, :]\n    array([[0, 1, 2],\n           [2, 3, 4],\n           [4, 5, 6]])\n    \n    A common application of `sliding_window_view` is the calculation of running\n    statistics. The simplest example is the\n    `moving average <https://en.wikipedia.org/wiki/Moving_average>`_:\n    \n    >>> x = np.arange(6)\n    >>> x.shape\n    (6,)\n    >>> v = sliding_window_view(x, 3)\n    >>> v.shape\n    (4, 3)\n    >>> v\n    array([[0, 1, 2],\n           [1, 2, 3],\n           [2, 3, 4],\n           [3, 4, 5]])\n    >>> moving_average = v.mean(axis=-1)\n    >>> moving_average\n    array([1., 2., 3., 4.])\n    \n    Note that a sliding window approach is often **not** optimal (see Notes).",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c26d48a019e9d1ed4ea0512fec86bf64b09b74d22d5b6846c9ed30bdc745853c",
            "fields": [
                {
                    "id": "40smd3g9",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "Array to create the sliding window view from.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7iier14d",
                    "encoding": "",
                    "name": "window_shape",
                    "value": "",
                    "defaultValue": "",
                    "description": "Size of window over each axis that takes part in the sliding window.\nIf `axis` is not present, must have same length as the number of input\narray dimensions. Single integers `i` are treated as if they were the\ntuple `(i,)`.",
                    "type": "int or tuple of int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fli_emc3",
                    "encoding": "",
                    "name": "axis",
                    "value": "",
                    "defaultValue": "",
                    "description": "Axis or axes along which the sliding window is applied.\nBy default, the sliding window is applied to all axes and\n`window_shape[i]` will refer to axis `i` of `x`.\nIf `axis` is given as a `tuple of int`, `window_shape[i]` will refer to\nthe axis `axis[i]` of `x`.\nSingle integers `i` are treated as if they were the tuple `(i,)`.",
                    "type": "int or tuple of int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ef7bwfx7",
                    "encoding": "",
                    "name": "subok",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, sub-classes will be passed-through, otherwise the returned\narray will be forced to be a base-class array (default).",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2b0y_jm9",
                    "encoding": "",
                    "name": "writeable",
                    "value": false,
                    "defaultValue": false,
                    "description": "When true, allow writing to the returned view. The default is false,\nas this should be used with caution: the returned view contains the\nsame memory location multiple times, so writing to one location will\ncause others to change.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xd_pmpb8",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.stride_tricks.sliding_window_view",
                    "defaultValue": "numpy.lib.stride_tricks.sliding_window_view",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qbdrt1iy",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dhzt6kv2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "9erx4c6d",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n85mvyjc",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.stride_tricks",
                    "defaultValue": "numpy.lib.stride_tricks",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jfyb00br",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vf0w2teq",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "k5cwwv96",
            "name": "recfunctions.append_fields",
            "description": "Add new fields to an existing array.\n    \n    The names of the fields are given with the `names` arguments,\n    the corresponding values with the `data` arguments.\n    If a single field is appended, `names`, `data` and `dtypes` do not have\n    to be lists but just values.\n    \n    Parameters\n    ----------\n    base : array\n        Input array to extend.\n    names : string, sequence\n        String or sequence of strings corresponding to the names\n        of the new fields.\n    data : array or sequence of arrays\n        Array or sequence of arrays storing the fields to add to the base.\n    dtypes : sequence of datatypes, optional\n        Datatype or sequence of datatypes.\n        If None, the datatypes are estimated from the `data`.\n    fill_value : {float}, optional\n        Filling value used to pad missing data on the shorter arrays.\n    usemask : {False, True}, optional\n        Whether to return a masked array or not.\n    asrecarray : {False, True}, optional\n        Whether to return a recarray (MaskedRecords) or not.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "377f6b9137045b9e55f1bc8291fbd233310a0d57c9d1948982fa2ec202ae692e",
            "fields": [
                {
                    "id": "ke_2x0xk",
                    "encoding": "",
                    "name": "base",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array to extend.",
                    "type": "array",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_dizmi0d",
                    "encoding": "",
                    "name": "names",
                    "value": "",
                    "defaultValue": "",
                    "description": "String or sequence of strings corresponding to the names\nof the new fields.",
                    "type": "string, sequence",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_9jmwtd1",
                    "encoding": "",
                    "name": "data",
                    "value": "",
                    "defaultValue": "",
                    "description": "Array or sequence of arrays storing the fields to add to the base.",
                    "type": "array or sequence of arrays",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uoe41r_t",
                    "encoding": "",
                    "name": "dtypes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Datatype or sequence of datatypes.\nIf None, the datatypes are estimated from the `data`.",
                    "type": "sequence of datatypes",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qp3muu75",
                    "encoding": "",
                    "name": "fill_value",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Filling value used to pad missing data on the shorter arrays.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "419abcq2",
                    "encoding": "",
                    "name": "usemask",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether to return a masked array or not.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xkn72v_9",
                    "encoding": "",
                    "name": "asrecarray",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to return a recarray (MaskedRecords) or not.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "waqw8xz6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.append_fields",
                    "defaultValue": "numpy.lib.recfunctions.append_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uy7p94d1",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sz7z_jmj",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "iry6rj83",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9lptj999",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y_jlghff",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8cbdeqsh",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "431li5yj",
            "name": "recfunctions.apply_along_fields",
            "description": "Apply function 'func' as a reduction across fields of a structured array.\n    \n    This is similar to `numpy.apply_along_axis`, but treats the fields of a\n    structured array as an extra axis. The fields are all first cast to a\n    common type following the type-promotion rules from `numpy.result_type`\n    applied to the field's dtypes.\n    \n    Parameters\n    ----------\n    func : function\n       Function to apply on the \"field\" dimension. This function must\n       support an `axis` argument, like `numpy.mean`, `numpy.sum`, etc.\n    arr : ndarray\n       Structured array for which to apply func.\n    \n    Returns\n    -------\n    out : ndarray\n       Result of the reduction operation\n    \n    Examples\n    --------\n    >>> import numpy as np\n    \n    >>> from numpy.lib import recfunctions as rfn\n    >>> b = np.array([(1, 2, 5), (4, 5, 7), (7, 8 ,11), (10, 11, 12)],\n    ...              dtype=[('x', 'i4'), ('y', 'f4'), ('z', 'f8')])\n    >>> rfn.apply_along_fields(np.mean, b)\n    array([ 2.66666667,  5.33333333,  8.66666667, 11.        ])\n    >>> rfn.apply_along_fields(np.mean, b[['x', 'z']])\n    array([ 3. ,  5.5,  9. , 11. ])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c2235bf20422642c65aee7f8771d22eeb69237c6be123446b1a61d785af2fe31",
            "fields": [
                {
                    "id": "jc5ghq8v",
                    "encoding": "",
                    "name": "func",
                    "value": "",
                    "defaultValue": "",
                    "description": "Function to apply on the \"field\" dimension. This function must\nsupport an `axis` argument, like `numpy.mean`, `numpy.sum`, etc.",
                    "type": "function",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_y3uzlcm",
                    "encoding": "",
                    "name": "arr",
                    "value": "",
                    "defaultValue": "",
                    "description": "Structured array for which to apply func.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uxdbbpw7",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.apply_along_fields",
                    "defaultValue": "numpy.lib.recfunctions.apply_along_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wc6akepq",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gd8f6_6r",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "u8sz14c6",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h_y3byx2",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "erarqo9m",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zmnua2mp",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "04bct4wo",
            "name": "recfunctions.assign_fields_by_name",
            "description": "Assigns values from one structured array to another by field name.\n    \n    Normally in numpy >= 1.14, assignment of one structured array to another\n    copies fields \"by position\", meaning that the first field from the src is\n    copied to the first field of the dst, and so on, regardless of field name.\n    \n    This function instead copies \"by field name\", such that fields in the dst\n    are assigned from the identically named field in the src. This applies\n    recursively for nested structures. This is how structure assignment worked\n    in numpy >= 1.6 to <= 1.13.\n    \n    Parameters\n    ----------\n    dst : ndarray\n    src : ndarray\n        The source and destination arrays during assignment.\n    zero_unassigned : bool, optional\n        If True, fields in the dst for which there was no matching\n        field in the src are filled with the value 0 (zero). This\n        was the behavior of numpy <= 1.13. If False, those fields\n        are not modified.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0539b90fd1b3e8f7b3a06ca4d43a23638ba068e49cfd2048c81c02b29209b3bc",
            "fields": [
                {
                    "id": "w4k8hl5x",
                    "encoding": "",
                    "name": "dst",
                    "value": "",
                    "defaultValue": "",
                    "description": null,
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dxmgh23u",
                    "encoding": "",
                    "name": "src",
                    "value": "",
                    "defaultValue": "",
                    "description": "The source and destination arrays during assignment.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e7nqs78s",
                    "encoding": "",
                    "name": "zero_unassigned",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, fields in the dst for which there was no matching\nfield in the src are filled with the value 0 (zero). This\nwas the behavior of numpy <= 1.13. If False, those fields\nare not modified.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_6fkhwu3",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.assign_fields_by_name",
                    "defaultValue": "numpy.lib.recfunctions.assign_fields_by_name",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s9rbcxzi",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2ygq49yp",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wr6fdnzz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k2nobp8i",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "un_amyah",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dovy1l0c",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "wne_ylda",
            "name": "recfunctions.drop_fields",
            "description": "Return a new array with fields in `drop_names` dropped.\n    \n    Nested fields are supported.\n    \n    Parameters\n    ----------\n    base : array\n        Input array\n    drop_names : string or sequence\n        String or sequence of strings corresponding to the names of the\n        fields to drop.\n    usemask : {False, True}, optional\n        Whether to return a masked array or not.\n    asrecarray : string or sequence, optional\n        Whether to return a recarray or a mrecarray (`asrecarray=True`) or\n        a plain ndarray or masked array with flexible dtype. The default\n        is False.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> a = np.array([(1, (2, 3.0)), (4, (5, 6.0))],\n    ...   dtype=[('a', np.int64), ('b', [('ba', np.double), ('bb', np.int64)])])\n    >>> rfn.drop_fields(a, 'a')\n    array([((2., 3),), ((5., 6),)],\n          dtype=[('b', [('ba', '<f8'), ('bb', '<i8')])])\n    >>> rfn.drop_fields(a, 'ba')\n    array([(1, (3,)), (4, (6,))], dtype=[('a', '<i8'), ('b', [('bb', '<i8')])])\n    >>> rfn.drop_fields(a, ['ba', 'bb'])\n    array([(1,), (4,)], dtype=[('a', '<i8')])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "0d0173c514f17cad823bed5f85bedfb00c648d00b714fc93b6dead3cc5abfa6e",
            "fields": [
                {
                    "id": "hlm8sxnp",
                    "encoding": "",
                    "name": "base",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array",
                    "type": "array",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b2m7k8q_",
                    "encoding": "",
                    "name": "drop_names",
                    "value": "",
                    "defaultValue": "",
                    "description": "String or sequence of strings corresponding to the names of the\nfields to drop.",
                    "type": "string or sequence",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ld2pa3nu",
                    "encoding": "",
                    "name": "usemask",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether to return a masked array or not.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gwdfo20r",
                    "encoding": "",
                    "name": "asrecarray",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to return a recarray or a mrecarray (`asrecarray=True`) or\na plain ndarray or masked array with flexible dtype. The default\nis False.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "douszftt",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.drop_fields",
                    "defaultValue": "numpy.lib.recfunctions.drop_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2j7xngnq",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ji41n07t",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ouv8hlzx",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k1ly279_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vq4_rde_",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5sdszjxm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "7nr1n6d0",
            "name": "recfunctions.find_duplicates",
            "description": "Find the duplicates in a structured array along a given key\n    \n    Parameters\n    ----------\n    a : array-like\n        Input array\n    key : {string, None}, optional\n        Name of the fields along which to check the duplicates.\n        If None, the search is performed by records\n    ignoremask : {True, False}, optional\n        Whether masked data should be discarded or considered as duplicates.\n    return_index : {False, True}, optional\n        Whether to return the indices of the duplicated values.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> ndtype = [('a', int)]\n    >>> a = np.ma.array([1, 1, 1, 2, 2, 3, 3],\n    ...         mask=[0, 0, 1, 0, 0, 0, 1]).view(ndtype)\n    >>> rfn.find_duplicates(a, ignoremask=True, return_index=True)\n    (masked_array(data=[(1,), (1,), (2,), (2,)],\n                 mask=[(False,), (False,), (False,), (False,)],\n           fill_value=(999999,),\n                dtype=[('a', '<i8')]), array([0, 1, 3, 4]))",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "eb1b6849a237cbcb80c5b67d9f22841c7d48b2f6a4ab7a58bad8f5e0869ef139",
            "fields": [
                {
                    "id": "dq74jv_v",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array",
                    "type": "array-like",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wnwdleny",
                    "encoding": "",
                    "name": "key",
                    "value": "",
                    "defaultValue": "",
                    "description": "Name of the fields along which to check the duplicates.\nIf None, the search is performed by records",
                    "type": "{string, None}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9bghb8qh",
                    "encoding": "",
                    "name": "ignoremask",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether masked data should be discarded or considered as duplicates.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1660tflv",
                    "encoding": "",
                    "name": "return_index",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to return the indices of the duplicated values.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yzjwnoh2",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.find_duplicates",
                    "defaultValue": "numpy.lib.recfunctions.find_duplicates",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d30uwq2f",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pzc3r05z",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ftlr00on",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ecreex06",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9fpkqu1x",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s57dkj38",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "vkzbtmqx",
            "name": "recfunctions.flatten_descr",
            "description": "Flatten a structured data-type description.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> ndtype = np.dtype([('a', '<i4'), ('b', [('ba', '<f8'), ('bb', '<i4')])])\n    >>> rfn.flatten_descr(ndtype)\n    (('a', dtype('int32')), ('ba', dtype('float64')), ('bb', dtype('int32')))",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a20fa34a048a970f23ebd778c35a010d50362f43e6f8771eea86581dbd337a5a",
            "fields": [
                {
                    "id": "ymtzhxt9",
                    "encoding": "",
                    "name": "ndtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p2pfrc4t",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.flatten_descr",
                    "defaultValue": "numpy.lib.recfunctions.flatten_descr",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gugb4yc9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2osuvfwy",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kl981_6v",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "odnbdkcc",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4nrhggq8",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9bq2mcaz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "c825ikj0",
            "name": "recfunctions.get_fieldstructure",
            "description": "Returns a dictionary with fields indexing lists of their parent fields.\n    \n    This function is used to simplify access to fields nested in other fields.\n    \n    Parameters\n    ----------\n    adtype : np.dtype\n        Input datatype\n    lastname : optional\n        Last processed field name (used internally during recursion).\n    parents : dictionary\n        Dictionary of parent fields (used internally during recursion).\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> ndtype =  np.dtype([('A', int),\n    ...                     ('B', [('BA', int),\n    ...                            ('BB', [('BBA', int), ('BBB', int)])])])\n    >>> rfn.get_fieldstructure(ndtype)\n    ... # XXX: possible regression, order of BBA and BBB is swapped\n    {'A': [], 'B': [], 'BA': ['B'], 'BB': ['B'], 'BBA': ['B', 'BB'], 'BBB': ['B', 'BB']}",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "780e5565c813d2ec7c7dce09f681005919583794ce63b597c53313d65f06311c",
            "fields": [
                {
                    "id": "zehab84b",
                    "encoding": "",
                    "name": "adtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input datatype",
                    "type": "np.dtype",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vmtn7npi",
                    "encoding": "",
                    "name": "lastname",
                    "value": "",
                    "defaultValue": "",
                    "description": "Last processed field name (used internally during recursion).",
                    "type": "optional",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fpu6f9ki",
                    "encoding": "",
                    "name": "parents",
                    "value": "",
                    "defaultValue": "",
                    "description": "Dictionary of parent fields (used internally during recursion).",
                    "type": "dictionary",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "up8by6_v",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.get_fieldstructure",
                    "defaultValue": "numpy.lib.recfunctions.get_fieldstructure",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mr6ff3qz",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7or9ez7f",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "2ypctjxs",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m7sy_kyt",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "30gtnson",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v24o6y8y",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "1dzpw472",
            "name": "recfunctions.get_names",
            "description": "Returns the field names of the input datatype as a tuple. Input datatype\n    must have fields otherwise error is raised.\n    \n    Parameters\n    ----------\n    adtype : dtype\n        Input datatype\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> rfn.get_names(np.empty((1,), dtype=[('A', int)]).dtype)\n    ('A',)\n    >>> rfn.get_names(np.empty((1,), dtype=[('A',int), ('B', float)]).dtype)\n    ('A', 'B')\n    >>> adtype = np.dtype([('a', int), ('b', [('ba', int), ('bb', int)])])\n    >>> rfn.get_names(adtype)\n    ('a', ('b', ('ba', 'bb')))",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "d671baaad5e42a0b9df1d7d2b9aa65c9011895249d139f08d3319bc2a82c4625",
            "fields": [
                {
                    "id": "fjxb8kx9",
                    "encoding": "",
                    "name": "adtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input datatype",
                    "type": "dtype",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "il0ixwhz",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.get_names",
                    "defaultValue": "numpy.lib.recfunctions.get_names",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0dgbnu44",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mezsfxwy",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "e3qln365",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rrjolgne",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eligam3m",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "12l9aitq",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "cyyxi52j",
            "name": "recfunctions.get_names_flat",
            "description": "Returns the field names of the input datatype as a tuple. Input datatype\n    must have fields otherwise error is raised.\n    Nested structure are flattened beforehand.\n    \n    Parameters\n    ----------\n    adtype : dtype\n        Input datatype\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> rfn.get_names_flat(np.empty((1,), dtype=[('A', int)]).dtype) is None\n    False\n    >>> rfn.get_names_flat(np.empty((1,), dtype=[('A',int), ('B', str)]).dtype)\n    ('A', 'B')\n    >>> adtype = np.dtype([('a', int), ('b', [('ba', int), ('bb', int)])])\n    >>> rfn.get_names_flat(adtype)\n    ('a', 'b', 'ba', 'bb')",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2afa828b6094597b21e160375c2455e9e604e18622288160bd493ddc828f0faf",
            "fields": [
                {
                    "id": "clydg1x7",
                    "encoding": "",
                    "name": "adtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input datatype",
                    "type": "dtype",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "chpjq2w7",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.get_names_flat",
                    "defaultValue": "numpy.lib.recfunctions.get_names_flat",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zqf8wg8i",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "313urrsb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "j6r__663",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0dlkd6xn",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ktueccty",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cdpsv5xd",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "p6ba2m8h",
            "name": "recfunctions.join_by",
            "description": "Join arrays `r1` and `r2` on key `key`.\n    \n    The key should be either a string or a sequence of string corresponding\n    to the fields used to join the array.  An exception is raised if the\n    `key` field cannot be found in the two input arrays.  Neither `r1` nor\n    `r2` should have any duplicates along `key`: the presence of duplicates\n    will make the output quite unreliable. Note that duplicates are not\n    looked for by the algorithm.\n    \n    Parameters\n    ----------\n    key : {string, sequence}\n        A string or a sequence of strings corresponding to the fields used\n        for comparison.\n    r1, r2 : arrays\n        Structured arrays.\n    jointype : {'inner', 'outer', 'leftouter'}, optional\n        If 'inner', returns the elements common to both r1 and r2.\n        If 'outer', returns the common elements as well as the elements of\n        r1 not in r2 and the elements of not in r2.\n        If 'leftouter', returns the common elements and the elements of r1\n        not in r2.\n    r1postfix : string, optional\n        String appended to the names of the fields of r1 that are present\n        in r2 but absent of the key.\n    r2postfix : string, optional\n        String appended to the names of the fields of r2 that are present\n        in r1 but absent of the key.\n    defaults : {dictionary}, optional\n        Dictionary mapping field names to the corresponding default values.\n    usemask : {True, False}, optional\n        Whether to return a MaskedArray (or MaskedRecords is\n        `asrecarray==True`) or a ndarray.\n    asrecarray : {False, True}, optional\n        Whether to return a recarray (or MaskedRecords if `usemask==True`)\n        or just a flexible-type ndarray.\n    \n    Notes\n    -----\n    * The output is sorted along the key.\n    * A temporary array is formed by dropping the fields not in the key for\n      the two arrays and concatenating the result. This array is then\n      sorted, and the common entries selected. The output is constructed by\n      filling the fields with the selected entries. Matching is not\n      preserved if there are some duplicates...",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "5d3bf2afc276abad554fe97a93750588f50cad00806cb13b50a50db2554d7a01",
            "fields": [
                {
                    "id": "6oie6vzb",
                    "encoding": "",
                    "name": "key",
                    "value": "",
                    "defaultValue": "",
                    "description": "A string or a sequence of strings corresponding to the fields used\nfor comparison.",
                    "type": "{string, sequence}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1v9p8vn8",
                    "encoding": "",
                    "name": "r1",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3ibvoue9",
                    "encoding": "",
                    "name": "r2",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hzxacr9x",
                    "encoding": "",
                    "name": "jointype",
                    "value": "inner",
                    "defaultValue": "inner",
                    "description": "If 'inner', returns the elements common to both r1 and r2.\nIf 'outer', returns the common elements as well as the elements of\nr1 not in r2 and the elements of not in r2.\nIf 'leftouter', returns the common elements and the elements of r1\nnot in r2.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "04pzd9y8",
                    "encoding": "",
                    "name": "r1postfix",
                    "value": "1",
                    "defaultValue": "1",
                    "description": "String appended to the names of the fields of r1 that are present\nin r2 but absent of the key.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ji6tbxr",
                    "encoding": "",
                    "name": "r2postfix",
                    "value": "2",
                    "defaultValue": "2",
                    "description": "String appended to the names of the fields of r2 that are present\nin r1 but absent of the key.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2taitmyf",
                    "encoding": "",
                    "name": "defaults",
                    "value": "",
                    "defaultValue": "",
                    "description": "Dictionary mapping field names to the corresponding default values.",
                    "type": "{dictionary}",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7sp3ybyz",
                    "encoding": "",
                    "name": "usemask",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether to return a MaskedArray (or MaskedRecords is\n`asrecarray==True`) or a ndarray.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "e31cr_jd",
                    "encoding": "",
                    "name": "asrecarray",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to return a recarray (or MaskedRecords if `usemask==True`)\nor just a flexible-type ndarray.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ljl6qkcc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.join_by",
                    "defaultValue": "numpy.lib.recfunctions.join_by",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3zclflhs",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b8zx07k8",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wdovkdmu",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7z470pux",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2n3fddaf",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7w3hgmss",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "16wvok_r",
            "name": "recfunctions.merge_arrays",
            "description": "Merge arrays field by field.\n    \n    Parameters\n    ----------\n    seqarrays : sequence of ndarrays\n        Sequence of arrays\n    fill_value : {float}, optional\n        Filling value used to pad missing data on the shorter arrays.\n    flatten : {False, True}, optional\n        Whether to collapse nested fields.\n    usemask : {False, True}, optional\n        Whether to return a masked array or not.\n    asrecarray : {False, True}, optional\n        Whether to return a recarray (MaskedRecords) or not.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> rfn.merge_arrays((np.array([1, 2]), np.array([10., 20., 30.])))\n    array([( 1, 10.), ( 2, 20.), (-1, 30.)],\n          dtype=[('f0', '<i8'), ('f1', '<f8')])\n    \n    >>> rfn.merge_arrays((np.array([1, 2], dtype=np.int64),\n    ...         np.array([10., 20., 30.])), usemask=False)\n     array([(1, 10.0), (2, 20.0), (-1, 30.0)],\n             dtype=[('f0', '<i8'), ('f1', '<f8')])\n    >>> rfn.merge_arrays((np.array([1, 2]).view([('a', np.int64)]),\n    ...               np.array([10., 20., 30.])),\n    ...              usemask=False, asrecarray=True)\n    rec.array([( 1, 10.), ( 2, 20.), (-1, 30.)],\n              dtype=[('a', '<i8'), ('f1', '<f8')])\n    \n    Notes\n    -----\n    * Without a mask, the missing value will be filled with something,\n      depending on what its corresponding type:\n    \n      * ``-1``      for integers\n      * ``-1.0``    for floating point numbers\n      * ``'-'``     for characters\n      * ``'-1'``    for strings\n      * ``True``    for boolean values\n    * XXX: I just obtained these values empirically",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "fbf4e5d613cc0febcc8a1be4e793d24cd2e3281bd0cc46b987897830a2d4a06d",
            "fields": [
                {
                    "id": "4_u6rmxv",
                    "encoding": "",
                    "name": "seqarrays",
                    "value": "",
                    "defaultValue": "",
                    "description": "Sequence of arrays",
                    "type": "sequence of ndarrays",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6ix2vkpt",
                    "encoding": "",
                    "name": "fill_value",
                    "value": -1,
                    "defaultValue": -1,
                    "description": "Filling value used to pad missing data on the shorter arrays.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3v2n_kje",
                    "encoding": "",
                    "name": "flatten",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to collapse nested fields.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kqke48cv",
                    "encoding": "",
                    "name": "usemask",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to return a masked array or not.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2zni7rtg",
                    "encoding": "",
                    "name": "asrecarray",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to return a recarray (MaskedRecords) or not.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dbyl5elq",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.merge_arrays",
                    "defaultValue": "numpy.lib.recfunctions.merge_arrays",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hd1mbn_5",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gpvxecp1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ib4oibcx",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ai71pkie",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gr8kwsl5",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2ng2679h",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "k9nsqdgd",
            "name": "recfunctions.rec_append_fields",
            "description": "Add new fields to an existing array.\n    \n    The names of the fields are given with the `names` arguments,\n    the corresponding values with the `data` arguments.\n    If a single field is appended, `names`, `data` and `dtypes` do not have\n    to be lists but just values.\n    \n    Parameters\n    ----------\n    base : array\n        Input array to extend.\n    names : string, sequence\n        String or sequence of strings corresponding to the names\n        of the new fields.\n    data : array or sequence of arrays\n        Array or sequence of arrays storing the fields to add to the base.\n    dtypes : sequence of datatypes, optional\n        Datatype or sequence of datatypes.\n        If None, the datatypes are estimated from the `data`.\n    \n    See Also\n    --------\n    append_fields\n    \n    Returns\n    -------\n    appended_array : np.recarray",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "974377799654e3e1771c7f5eb980c220d08708b1f07fa220b8b23a4897087e29",
            "fields": [
                {
                    "id": "atjh2pd4",
                    "encoding": "",
                    "name": "base",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array to extend.",
                    "type": "array",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j9bhape_",
                    "encoding": "",
                    "name": "names",
                    "value": "",
                    "defaultValue": "",
                    "description": "String or sequence of strings corresponding to the names\nof the new fields.",
                    "type": "string, sequence",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7mk4a2b1",
                    "encoding": "",
                    "name": "data",
                    "value": "",
                    "defaultValue": "",
                    "description": "Array or sequence of arrays storing the fields to add to the base.",
                    "type": "array or sequence of arrays",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ik0ql440",
                    "encoding": "",
                    "name": "dtypes",
                    "value": "",
                    "defaultValue": "",
                    "description": "Datatype or sequence of datatypes.\nIf None, the datatypes are estimated from the `data`.",
                    "type": "sequence of datatypes",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "itdqk0ib",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.rec_append_fields",
                    "defaultValue": "numpy.lib.recfunctions.rec_append_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q2izg81j",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_8qk5gxx",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "tkpdv9oj",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3t0oqz2j",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3spq3y79",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hkxdjv7e",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "9hsix2sl",
            "name": "recfunctions.rec_drop_fields",
            "description": "Returns a new numpy.recarray with fields in `drop_names` dropped.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "842bb6ca3cf57bdb4eac8436c8bac5e1ea8c83c0993c871b154e0f779dd4aa4c",
            "fields": [
                {
                    "id": "_s6eufui",
                    "encoding": "",
                    "name": "base",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kvdb2zqx",
                    "encoding": "",
                    "name": "drop_names",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zjhjjl3m",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.rec_drop_fields",
                    "defaultValue": "numpy.lib.recfunctions.rec_drop_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3ecz9_c8",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jv6krrc9",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5chec14j",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9kxtb_tk",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2901go55",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "axnduugu",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "2am5jqen",
            "name": "recfunctions.rec_join",
            "description": "Join arrays `r1` and `r2` on keys.\n    Alternative to join_by, that always returns a np.recarray.\n    \n    See Also\n    --------\n    join_by : equivalent function",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "228e65f9011aa61ae01fc72a8d90f09c10b145a07815c4769984cfb568e9719b",
            "fields": [
                {
                    "id": "f40q3v8p",
                    "encoding": "",
                    "name": "key",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_rkt93xt",
                    "encoding": "",
                    "name": "r1",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "436tkumw",
                    "encoding": "",
                    "name": "r2",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kp3ni1pf",
                    "encoding": "",
                    "name": "jointype",
                    "value": "inner",
                    "defaultValue": "inner",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7qqfwstk",
                    "encoding": "",
                    "name": "r1postfix",
                    "value": "1",
                    "defaultValue": "1",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lhgefxpo",
                    "encoding": "",
                    "name": "r2postfix",
                    "value": "2",
                    "defaultValue": "2",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7r17axxn",
                    "encoding": "",
                    "name": "defaults",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7l6v7kyx",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.rec_join",
                    "defaultValue": "numpy.lib.recfunctions.rec_join",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tjkt17oj",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4ztjasqb",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "cw_p3ygs",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "22v_vtsu",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "evx725ze",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sszzy8d8",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "y2ll5yyk",
            "name": "recfunctions.recursive_fill_fields",
            "description": "Fills fields from output with fields from input,\n    with support for nested structures.\n    \n    Parameters\n    ----------\n    input : ndarray\n        Input array.\n    output : ndarray\n        Output array.\n    \n    Notes\n    -----\n    * `output` should be at least the same size as `input`\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> a = np.array([(1, 10.), (2, 20.)], dtype=[('A', np.int64), ('B', np.float64)])\n    >>> b = np.zeros((3,), dtype=a.dtype)\n    >>> rfn.recursive_fill_fields(a, b)\n    array([(1, 10.), (2, 20.), (0,  0.)], dtype=[('A', '<i8'), ('B', '<f8')])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "436583bab97a3eedbae2fa00d8ddd542069775e84988ff440f5bcd6942cc56d5",
            "fields": [
                {
                    "id": "5v4v1aqg",
                    "encoding": "",
                    "name": "input",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "m3_trfcu",
                    "encoding": "",
                    "name": "output",
                    "value": "",
                    "defaultValue": "",
                    "description": "Output array.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vb_p5tmq",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.recursive_fill_fields",
                    "defaultValue": "numpy.lib.recfunctions.recursive_fill_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j58mfgrk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pbyq5j80",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wirti53a",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f36gj8dr",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ek9e08nb",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bq6_nn25",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "lb4oynuy",
            "name": "recfunctions.rename_fields",
            "description": "Rename the fields from a flexible-datatype ndarray or recarray.\n    \n    Nested fields are supported.\n    \n    Parameters\n    ----------\n    base : ndarray\n        Input array whose fields must be modified.\n    namemapper : dictionary\n        Dictionary mapping old field names to their new version.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> a = np.array([(1, (2, [3.0, 30.])), (4, (5, [6.0, 60.]))],\n    ...   dtype=[('a', int),('b', [('ba', float), ('bb', (float, 2))])])\n    >>> rfn.rename_fields(a, {'a':'A', 'bb':'BB'})\n    array([(1, (2., [ 3., 30.])), (4, (5., [ 6., 60.]))],\n          dtype=[('A', '<i8'), ('b', [('ba', '<f8'), ('BB', '<f8', (2,))])])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "03d9190b84bfbc07e0019f6bb70923be3eabd16b4c089def13ed006cff793d23",
            "fields": [
                {
                    "id": "f76zjvr2",
                    "encoding": "",
                    "name": "base",
                    "value": "",
                    "defaultValue": "",
                    "description": "Input array whose fields must be modified.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5f1yha45",
                    "encoding": "",
                    "name": "namemapper",
                    "value": "",
                    "defaultValue": "",
                    "description": "Dictionary mapping old field names to their new version.",
                    "type": "dictionary",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1cdiemq4",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.rename_fields",
                    "defaultValue": "numpy.lib.recfunctions.rename_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6qb02des",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mr3iu4ns",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "jnwdkijl",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qoa474iy",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_92pf2nd",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "js2m45_t",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "ju1fzi_j",
            "name": "recfunctions.repack_fields",
            "description": "Re-pack the fields of a structured array or dtype in memory.\n    \n    The memory layout of structured datatypes allows fields at arbitrary\n    byte offsets. This means the fields can be separated by padding bytes,\n    their offsets can be non-monotonically increasing, and they can overlap.\n    \n    This method removes any overlaps and reorders the fields in memory so they\n    have increasing byte offsets, and adds or removes padding bytes depending\n    on the `align` option, which behaves like the `align` option to\n    `numpy.dtype`.\n    \n    If `align=False`, this method produces a \"packed\" memory layout in which\n    each field starts at the byte the previous field ended, and any padding\n    bytes are removed.\n    \n    If `align=True`, this methods produces an \"aligned\" memory layout in which\n    each field's offset is a multiple of its alignment, and the total itemsize\n    is a multiple of the largest alignment, by adding padding bytes as needed.\n    \n    Parameters\n    ----------\n    a : ndarray or dtype\n       array or dtype for which to repack the fields.\n    align : boolean\n       If true, use an \"aligned\" memory layout, otherwise use a \"packed\" layout.\n    recurse : boolean\n       If True, also repack nested structures.\n    \n    Returns\n    -------\n    repacked : ndarray or dtype\n       Copy of `a` with fields repacked, or `a` itself if no repacking was\n       needed.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    \n    >>> from numpy.lib import recfunctions as rfn\n    >>> def print_offsets(d):\n    ...     print(\"offsets:\", [d.fields[name][1] for name in d.names])\n    ...     print(\"itemsize:\", d.itemsize)\n    ...\n    >>> dt = np.dtype('u1, <i8, <f8', align=True)\n    >>> dt\n    dtype({'names': ['f0', 'f1', 'f2'], 'formats': ['u1', '<i8', '<f8'], 'offsets': [0, 8, 16], 'itemsize': 24}, align=True)\n    >>> print_offsets(dt)\n    offsets: [0, 8, 16]\n    itemsize: 24\n    >>> packed_dt = rfn.repack_fields(dt)\n    >>> packed_dt\n    dtype([('f0', 'u1'), ('f1', '<i8'), ('f2', '<f8')])\n    >>> print_offsets(packed_dt)\n    offsets: [0, 1, 9]\n    itemsize: 17",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "87a4cb78e2f6c4b2037d3e30ad4eb1c8576ca96d21293bd6c556eb1c7eabe6f3",
            "fields": [
                {
                    "id": "0jupgo_m",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "array or dtype for which to repack the fields.",
                    "type": "ndarray or dtype",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a6ixeafp",
                    "encoding": "",
                    "name": "align",
                    "value": false,
                    "defaultValue": false,
                    "description": "If true, use an \"aligned\" memory layout, otherwise use a \"packed\" layout.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qvhhtrse",
                    "encoding": "",
                    "name": "recurse",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, also repack nested structures.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2tmy5dis",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.repack_fields",
                    "defaultValue": "numpy.lib.recfunctions.repack_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fgn9hgup",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p00u_9vq",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6el3km27",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dmifdhs_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "df36_2va",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ljgua0z",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "difc9uva",
            "name": "recfunctions.require_fields",
            "description": "Casts a structured array to a new dtype using assignment by field-name.\n    \n    This function assigns from the old to the new array by name, so the\n    value of a field in the output array is the value of the field with the\n    same name in the source array. This has the effect of creating a new\n    ndarray containing only the fields \"required\" by the required_dtype.\n    \n    If a field name in the required_dtype does not exist in the\n    input array, that field is created and set to 0 in the output array.\n    \n    Parameters\n    ----------\n    a : ndarray\n       array to cast\n    required_dtype : dtype\n       datatype for output array\n    \n    Returns\n    -------\n    out : ndarray\n        array with the new dtype, with field values copied from the fields in\n        the input array with the same name\n    \n    Examples\n    --------\n    >>> import numpy as np\n    \n    >>> from numpy.lib import recfunctions as rfn\n    >>> a = np.ones(4, dtype=[('a', 'i4'), ('b', 'f8'), ('c', 'u1')])\n    >>> rfn.require_fields(a, [('b', 'f4'), ('c', 'u1')])\n    array([(1., 1), (1., 1), (1., 1), (1., 1)],\n      dtype=[('b', '<f4'), ('c', 'u1')])\n    >>> rfn.require_fields(a, [('b', 'f4'), ('newf', 'u1')])\n    array([(1., 0), (1., 0), (1., 0), (1., 0)],\n      dtype=[('b', '<f4'), ('newf', 'u1')])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a6cdac43e3cc16c7da86dd79a7cb09d02637e66bd200c54f6716e88be4a4ca7f",
            "fields": [
                {
                    "id": "w_7ome09",
                    "encoding": "",
                    "name": "array",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ij541g70",
                    "encoding": "",
                    "name": "required_dtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "datatype for output array",
                    "type": "dtype",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ufb50df7",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.require_fields",
                    "defaultValue": "numpy.lib.recfunctions.require_fields",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "otps6e33",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "38e6cp7c",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "pm9r_920",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ayji1wbh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_iu0sx67",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "80qrn2ij",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "eb5g89fq",
            "name": "recfunctions.stack_arrays",
            "description": "Superposes arrays fields by fields\n    \n    Parameters\n    ----------\n    arrays : array or sequence\n        Sequence of input arrays.\n    defaults : dictionary, optional\n        Dictionary mapping field names to the corresponding default values.\n    usemask : {True, False}, optional\n        Whether to return a MaskedArray (or MaskedRecords is\n        `asrecarray==True`) or a ndarray.\n    asrecarray : {False, True}, optional\n        Whether to return a recarray (or MaskedRecords if `usemask==True`)\n        or just a flexible-type ndarray.\n    autoconvert : {False, True}, optional\n        Whether automatically cast the type of the field to the maximum.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    >>> from numpy.lib import recfunctions as rfn\n    >>> x = np.array([1, 2,])\n    >>> rfn.stack_arrays(x) is x\n    True\n    >>> z = np.array([('A', 1), ('B', 2)], dtype=[('A', '|S3'), ('B', float)])\n    >>> zz = np.array([('a', 10., 100.), ('b', 20., 200.), ('c', 30., 300.)],\n    ...   dtype=[('A', '|S3'), ('B', np.double), ('C', np.double)])\n    >>> test = rfn.stack_arrays((z,zz))\n    >>> test\n    masked_array(data=[(b'A', 1.0, --), (b'B', 2.0, --), (b'a', 10.0, 100.0),\n                       (b'b', 20.0, 200.0), (b'c', 30.0, 300.0)],\n                 mask=[(False, False,  True), (False, False,  True),\n                       (False, False, False), (False, False, False),\n                       (False, False, False)],\n           fill_value=(b'N/A', 1e+20, 1e+20),\n                dtype=[('A', 'S3'), ('B', '<f8'), ('C', '<f8')])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8ca374e4112f8df54af81d68ddb4afcad49aa738b0b9aac94b7e2838126e6778",
            "fields": [
                {
                    "id": "z9gqzaub",
                    "encoding": "",
                    "name": "arrays",
                    "value": "",
                    "defaultValue": "",
                    "description": "Sequence of input arrays.",
                    "type": "array or sequence",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l4222vq6",
                    "encoding": "",
                    "name": "defaults",
                    "value": "",
                    "defaultValue": "",
                    "description": "Dictionary mapping field names to the corresponding default values.",
                    "type": "dictionary",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wu13jlk4",
                    "encoding": "",
                    "name": "usemask",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether to return a MaskedArray (or MaskedRecords is\n`asrecarray==True`) or a ndarray.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "94dnegd2",
                    "encoding": "",
                    "name": "asrecarray",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to return a recarray (or MaskedRecords if `usemask==True`)\nor just a flexible-type ndarray.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_1ynre3l",
                    "encoding": "",
                    "name": "autoconvert",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether automatically cast the type of the field to the maximum.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "il3in5ep",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.stack_arrays",
                    "defaultValue": "numpy.lib.recfunctions.stack_arrays",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l5soa7rl",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0b6r8ho1",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "iv38pk2y",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d6kp6seh",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o3742vgf",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "attu479m",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fgegw_i8",
            "name": "recfunctions.structured_to_unstructured",
            "description": "Converts an n-D structured array into an (n+1)-D unstructured array.\n    \n    The new array will have a new last dimension equal in size to the\n    number of field-elements of the input array. If not supplied, the output\n    datatype is determined from the numpy type promotion rules applied to all\n    the field datatypes.\n    \n    Nested fields, as well as each element of any subarray fields, all count\n    as a single field-elements.\n    \n    Parameters\n    ----------\n    arr : ndarray\n       Structured array or dtype to convert. Cannot contain object datatype.\n    dtype : dtype, optional\n       The dtype of the output unstructured array.\n    copy : bool, optional\n        If true, always return a copy. If false, a view is returned if\n        possible, such as when the `dtype` and strides of the fields are\n        suitable and the array subtype is one of `numpy.ndarray`,\n        `numpy.recarray` or `numpy.memmap`.\n    \n        .. versionchanged:: 1.25.0\n            A view can now be returned if the fields are separated by a\n            uniform stride.\n    \n    casting : {'no', 'equiv', 'safe', 'same_kind', 'unsafe'}, optional\n        See casting argument of `numpy.ndarray.astype`. Controls what kind of\n        data casting may occur.\n    \n    Returns\n    -------\n    unstructured : ndarray\n       Unstructured array with one more dimension.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    \n    >>> from numpy.lib import recfunctions as rfn\n    >>> a = np.zeros(4, dtype=[('a', 'i4'), ('b', 'f4,u2'), ('c', 'f4', 2)])\n    >>> a\n    array([(0, (0., 0), [0., 0.]), (0, (0., 0), [0., 0.]),\n           (0, (0., 0), [0., 0.]), (0, (0., 0), [0., 0.])],\n          dtype=[('a', '<i4'), ('b', [('f0', '<f4'), ('f1', '<u2')]), ('c', '<f4', (2,))])\n    >>> rfn.structured_to_unstructured(a)\n    array([[0., 0., 0., 0., 0.],\n           [0., 0., 0., 0., 0.],\n           [0., 0., 0., 0., 0.],\n           [0., 0., 0., 0., 0.]])\n    \n    >>> b = np.array([(1, 2, 5), (4, 5, 7), (7, 8 ,11), (10, 11, 12)],\n    ...              dtype=[('x', 'i4'), ('y', 'f4'), ('z', 'f8')])\n    >>> np.mean(rfn.structured_to_unstructured(b[['x', 'z']]), axis=-1)\n    array([ 3. ,  5.5,  9. , 11. ])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c1c7b540a71b1e71c12a451caabe2c2bccc4b5d5f6c0c95acdbceb8a58c45d93",
            "fields": [
                {
                    "id": "hhlszbg6",
                    "encoding": "",
                    "name": "arr",
                    "value": "",
                    "defaultValue": "",
                    "description": "Structured array or dtype to convert. Cannot contain object datatype.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qnm3xy1w",
                    "encoding": "",
                    "name": "dtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "The dtype of the output unstructured array.",
                    "type": "dtype",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cg1ejd_z",
                    "encoding": "",
                    "name": "copy",
                    "value": false,
                    "defaultValue": false,
                    "description": "If true, always return a copy. If false, a view is returned if\npossible, such as when the `dtype` and strides of the fields are\nsuitable and the array subtype is one of `numpy.ndarray`,\n`numpy.recarray` or `numpy.memmap`.\n\n.. versionchanged:: 1.25.0\n    A view can now be returned if the fields are separated by a\n    uniform stride.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pxql78dw",
                    "encoding": "",
                    "name": "casting",
                    "value": "unsafe",
                    "defaultValue": "unsafe",
                    "description": "See casting argument of `numpy.ndarray.astype`. Controls what kind of\ndata casting may occur.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "a65250c5",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.structured_to_unstructured",
                    "defaultValue": "numpy.lib.recfunctions.structured_to_unstructured",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c9m2xvkx",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mkq6wqdr",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "wj3fvtq6",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qtrit7v_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9dto5b8c",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_5cltnn8",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "cmyfxwy7",
            "name": "recfunctions.unstructured_to_structured",
            "description": "Converts an n-D unstructured array into an (n-1)-D structured array.\n    \n    The last dimension of the input array is converted into a structure, with\n    number of field-elements equal to the size of the last dimension of the\n    input array. By default all output fields have the input array's dtype, but\n    an output structured dtype with an equal number of fields-elements can be\n    supplied instead.\n    \n    Nested fields, as well as each element of any subarray fields, all count\n    towards the number of field-elements.\n    \n    Parameters\n    ----------\n    arr : ndarray\n       Unstructured array or dtype to convert.\n    dtype : dtype, optional\n       The structured dtype of the output array\n    names : list of strings, optional\n       If dtype is not supplied, this specifies the field names for the output\n       dtype, in order. The field dtypes will be the same as the input array.\n    align : boolean, optional\n       Whether to create an aligned memory layout.\n    copy : bool, optional\n        See copy argument to `numpy.ndarray.astype`. If true, always return a\n        copy. If false, and `dtype` requirements are satisfied, a view is\n        returned.\n    casting : {'no', 'equiv', 'safe', 'same_kind', 'unsafe'}, optional\n        See casting argument of `numpy.ndarray.astype`. Controls what kind of\n        data casting may occur.\n    \n    Returns\n    -------\n    structured : ndarray\n       Structured array with fewer dimensions.\n    \n    Examples\n    --------\n    >>> import numpy as np\n    \n    >>> from numpy.lib import recfunctions as rfn\n    >>> dt = np.dtype([('a', 'i4'), ('b', 'f4,u2'), ('c', 'f4', 2)])\n    >>> a = np.arange(20).reshape((4,5))\n    >>> a\n    array([[ 0,  1,  2,  3,  4],\n           [ 5,  6,  7,  8,  9],\n           [10, 11, 12, 13, 14],\n           [15, 16, 17, 18, 19]])\n    >>> rfn.unstructured_to_structured(a, dt)\n    array([( 0, ( 1.,  2), [ 3.,  4.]), ( 5, ( 6.,  7), [ 8.,  9.]),\n           (10, (11., 12), [13., 14.]), (15, (16., 17), [18., 19.])],\n          dtype=[('a', '<i4'), ('b', [('f0', '<f4'), ('f1', '<u2')]), ('c', '<f4', (2,))])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ae790617decfba9b7510b8048870669494397d73ce80dfb8aad94683c8c39fac",
            "fields": [
                {
                    "id": "llh_f5_g",
                    "encoding": "",
                    "name": "arr",
                    "value": "",
                    "defaultValue": "",
                    "description": "Unstructured array or dtype to convert.",
                    "type": "ndarray",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dhw0muvv",
                    "encoding": "",
                    "name": "dtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "The structured dtype of the output array",
                    "type": "dtype",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jm44kaw_",
                    "encoding": "",
                    "name": "names",
                    "value": "",
                    "defaultValue": "",
                    "description": "If dtype is not supplied, this specifies the field names for the output\ndtype, in order. The field dtypes will be the same as the input array.",
                    "type": "list of strings",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "71vnp25n",
                    "encoding": "",
                    "name": "align",
                    "value": false,
                    "defaultValue": false,
                    "description": "Whether to create an aligned memory layout.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ym7aee0y",
                    "encoding": "",
                    "name": "copy",
                    "value": false,
                    "defaultValue": false,
                    "description": "See copy argument to `numpy.ndarray.astype`. If true, always return a\ncopy. If false, and `dtype` requirements are satisfied, a view is\nreturned.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dd1eiokl",
                    "encoding": "",
                    "name": "casting",
                    "value": "unsafe",
                    "defaultValue": "unsafe",
                    "description": "See casting argument of `numpy.ndarray.astype`. Controls what kind of\ndata casting may occur.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zof52yvp",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.recfunctions.unstructured_to_structured",
                    "defaultValue": "numpy.lib.recfunctions.unstructured_to_structured",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "34afwcav",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6hqnqwuo",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "pplqusvm",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yvox2rqa",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.recfunctions",
                    "defaultValue": "numpy.lib.recfunctions",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dvqmhvch",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xuv5akyw",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "n6l2g6iv",
            "name": "container.__init__",
            "description": "\ncontainer(data, dtype=None, copy=True)\n    \n    Standard container-class for easy multiple-inheritance.\n    \n    Methods\n    -------\n    copy\n    byteswap\n    astype",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "030f33e944c1c01cc08367ee5d5114f0123febb4b28ea53a6f34a9df6dbcb8dd",
            "fields": [
                {
                    "id": "jfcux6oj",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to container object",
                    "type": "Object:numpy.lib.user_array.container",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5dpc6izk",
                    "encoding": "",
                    "name": "data",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ipcuv7qn",
                    "encoding": "",
                    "name": "dtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1c9y80il",
                    "encoding": "",
                    "name": "copy",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_ghwf0my",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.user_array.container.__init__",
                    "defaultValue": "numpy.lib.user_array.container.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bjvv_y89",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q2aecj5n",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "3xtgspq1",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g8ie_4ts",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.user_array.container",
                    "defaultValue": "numpy.lib.user_array.container",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9vvtpgki",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hqd7sg61",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "m6tdixob",
            "name": "container.astype",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "53da1fd30667314566974edddbee7ae8d246f44f892b25ef04a8152a2e4c01ce",
            "fields": [
                {
                    "id": "qp0x0hny",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:numpy.lib.user_array.container",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8hy7xm5l",
                    "encoding": "",
                    "name": "typecode",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i527bgei",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.user_array.container.astype",
                    "defaultValue": "numpy.lib.user_array.container.astype",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h09ddpyf",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rkhylqur",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "todrpwvo",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "58o078p5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.user_array.container",
                    "defaultValue": "numpy.lib.user_array.container",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2n2mdw4e",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kp3c1u2m",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "sy5k92uy",
            "name": "container.byteswap",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "a71dc7a2a4c6ba6e8c7c8c6abd6efecf9c51082e33e8bd26053be04ff78dad41",
            "fields": [
                {
                    "id": "x6j2aouy",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:numpy.lib.user_array.container",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hup3qf07",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.user_array.container.byteswap",
                    "defaultValue": "numpy.lib.user_array.container.byteswap",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xcaq8_pd",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xtu2au2w",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "rmuqahua",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h0gvbo8y",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.user_array.container",
                    "defaultValue": "numpy.lib.user_array.container",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kmp3hy00",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xrt7a8yc",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "6iycqgjo",
            "name": "container.copy",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "faa44da00d5ec285fa3d34820715c0df5edcf82e26e737b6bece07067ca24f9b",
            "fields": [
                {
                    "id": "hhctkvxb",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:numpy.lib.user_array.container",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d4rt03f8",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.user_array.container.copy",
                    "defaultValue": "numpy.lib.user_array.container.copy",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4u_0ahye",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9x9giior",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "hc3i8vvn",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nf2eqo4z",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.user_array.container",
                    "defaultValue": "numpy.lib.user_array.container",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6o8_efbh",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6f5r51if",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "9roix1nw",
            "name": "container.tobytes",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "131f5bbe4aee3a3c2eaab9a0fb8fdf9290c91e8cb7557109aa13e781354bac96",
            "fields": [
                {
                    "id": "81sox1l9",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:numpy.lib.user_array.container",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "obl65g7d",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.lib.user_array.container.tobytes",
                    "defaultValue": "numpy.lib.user_array.container.tobytes",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sczj3z8v",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ak11_8df",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "82y8a23_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_phplelp",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.lib.user_array.container",
                    "defaultValue": "numpy.lib.user_array.container",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_or0b79r",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q3hgdyve",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}