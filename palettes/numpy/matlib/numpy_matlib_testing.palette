{
    "modelData": {
        "filePath": "numpy_matlib_testing.palette",
        "fileType": "Palette",
        "shortDescription": "",
        "detailedDescription": "Common test support for all numpy test scripts.\n\nThis single module should provide all the common functionality for numpy tests\nin a single location, so that test scripts can just import it and work right\naway.",
        "repoService": "",
        "repoBranch": "",
        "repo": "",
        "generatorName": "dlg_paletteGen",
        "generatorVersion": "0.6.3",
        "generatorCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "matlib",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "9a074ca49de004b2b231d6dcae43507a62dfc902301aad2bda284b6f735bac84",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1755100315.11414,
        "numLGNodes": 48
    },
    "nodeDataArray": [
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "9fplakby",
            "name": "IgnoreException.add_note",
            "description": "Exception.add_note(note) --\nadd a note to the exception",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "962a17a4f964338d8b0826956ab7e86d3efce4a8214086d2d1dfe4a65a8764ae",
            "fields": [
                {
                    "id": "7jwum5xb",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.testing._private.utils.IgnoreException.add_note object",
                    "type": "Object:numpy.testing._private.utils.IgnoreException",
                    "parameterType": "ComponentParameter",
                    "usage": "InputOutput",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eqg78vsi",
                    "encoding": "",
                    "name": "note",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2wuxeox6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.testing._private.utils.IgnoreException.add_note",
                    "defaultValue": "numpy.matlib.numpy.testing._private.utils.IgnoreException.add_note",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r33twwrn",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gtbjf8va",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "eadid854",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v88roy9k",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing._private.utils.IgnoreException",
                    "defaultValue": "numpy.testing._private.utils.IgnoreException",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kbt1813f",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i4rkh84b",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "e31e56nj",
            "name": "IgnoreException.with_traceback",
            "description": "Exception.with_traceback(tb) --\nset self.__traceback__ to tb and return self.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "31a2c3d60f9977d8b6ae2883df6f3115486d06ec2ae82c5268c42ddd782e6adf",
            "fields": [
                {
                    "id": "t1xrsjc2",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.testing._private.utils.IgnoreException.with_traceback object",
                    "type": "Object:numpy.testing._private.utils.IgnoreException",
                    "parameterType": "ComponentParameter",
                    "usage": "InputOutput",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mdx0rjl6",
                    "encoding": "",
                    "name": "tb",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l1tjp044",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.testing._private.utils.IgnoreException.with_traceback",
                    "defaultValue": "numpy.matlib.numpy.testing._private.utils.IgnoreException.with_traceback",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_mj0who0",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dsk29_mo",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "j8z4i13a",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x8p_l93p",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing._private.utils.IgnoreException",
                    "defaultValue": "numpy.testing._private.utils.IgnoreException",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iv6i66y_",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "09oq8mf5",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "1ija2lzz",
            "name": "KnownFailureException.add_note",
            "description": "Exception.add_note(note) --\nadd a note to the exception",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "871ba96b1bbe8aa7a2d04df7d3eb5a206dfa7d035cc07929708c591d988c46bc",
            "fields": [
                {
                    "id": "pudyqxbf",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.testing._private.utils.KnownFailureException.add_note object",
                    "type": "Object:numpy.testing._private.utils.KnownFailureException",
                    "parameterType": "ComponentParameter",
                    "usage": "InputOutput",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l9zeso43",
                    "encoding": "",
                    "name": "note",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nwvwoe9y",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.testing._private.utils.KnownFailureException.add_note",
                    "defaultValue": "numpy.matlib.numpy.testing._private.utils.KnownFailureException.add_note",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3cd2fd42",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "txz1u8h2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ejjukfph",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fdpsle6c",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing._private.utils.KnownFailureException",
                    "defaultValue": "numpy.testing._private.utils.KnownFailureException",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t9yutezx",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zsljgsuq",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "80ckteg9",
            "name": "KnownFailureException.with_traceback",
            "description": "Exception.with_traceback(tb) --\nset self.__traceback__ to tb and return self.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "369759fc50069baf4c3dfa64df85e729cb32b8054a09998f292a2d2aac6ebb0e",
            "fields": [
                {
                    "id": "j5qr1t_l",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.testing._private.utils.KnownFailureException.with_traceback object",
                    "type": "Object:numpy.testing._private.utils.KnownFailureException",
                    "parameterType": "ComponentParameter",
                    "usage": "InputOutput",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bjcwk65t",
                    "encoding": "",
                    "name": "tb",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "elcbraol",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.testing._private.utils.KnownFailureException.with_traceback",
                    "defaultValue": "numpy.matlib.numpy.testing._private.utils.KnownFailureException.with_traceback",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pncms9ff",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kfr4z1mg",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "prm01lr9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kbal2x2y",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing._private.utils.KnownFailureException",
                    "defaultValue": "numpy.testing._private.utils.KnownFailureException",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yypz7zru",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rfp76vbq",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "j2ga31rj",
            "name": "testing.assert_",
            "description": "Assert that works in release mode.\n    Accepts callable msg to allow deferring evaluation until failure.\n    \n    The Python built-in ``assert`` does not work when executing code in\n    optimized mode (the ``-O`` flag) - no byte-code is generated for it.\n    \n    For documentation on usage, refer to the Python documentation.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4f5c746b70b2a7b96913c441b075a996e781c48478636110700d25acffdc6cc6",
            "fields": [
                {
                    "id": "fov_7cvx",
                    "encoding": "",
                    "name": "val",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zvr_ihdb",
                    "encoding": "",
                    "name": "msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zynnjcyu",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_",
                    "defaultValue": "numpy.testing.assert_",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bpzksq49",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7son9ik9",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ztfvr619",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bkco_zil",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p997k8ni",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kgmutp1q",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "citt3h4z",
            "name": "testing.assert_allclose",
            "description": "Raises an AssertionError if two objects are not equal up to desired\n    tolerance.\n    \n    Given two array_like objects, check that their shapes and all elements\n    are equal (but see the Notes for the special handling of a scalar). An\n    exception is raised if the shapes mismatch or any values conflict. In\n    contrast to the standard usage in numpy, NaNs are compared like numbers,\n    no assertion is raised if both objects have NaNs in the same positions.\n    \n    The test is equivalent to ``allclose(actual, desired, rtol, atol)`` (note\n    that ``allclose`` has different default values). It compares the difference\n    between `actual` and `desired` to ``atol + rtol * abs(desired)``.\n    \n    Parameters\n    ----------\n    actual : array_like\n        Array obtained.\n    desired : array_like\n        Array desired.\n    rtol : float, optional\n        Relative tolerance.\n    atol : float, optional\n        Absolute tolerance.\n    equal_nan : bool, optional.\n        If True, NaNs will compare equal.\n    err_msg : str, optional\n        The error message to be printed in case of failure.\n    verbose : bool, optional\n        If True, the conflicting values are appended to the error message.\n    strict : bool, optional\n        If True, raise an ``AssertionError`` when either the shape or the data\n        type of the arguments does not match. The special handling of scalars\n        mentioned in the Notes section is disabled.\n    \n        .. versionadded:: 2.0.0\n    \n    Raises\n    ------\n    AssertionError\n        If actual and desired are not equal up to specified precision.\n    \n    See Also\n    --------\n    assert_array_almost_equal_nulp, assert_array_max_ulp\n    \n    Notes\n    -----\n    When one of `actual` and `desired` is a scalar and the other is\n    array_like, the function performs the comparison as if the scalar were\n    broadcasted to the shape of the array.\n    This behaviour can be disabled with the `strict` parameter.\n    \n    Examples\n    --------\n    >>> x = [1e-5, 1e-3, 1e-1]\n    >>> y = np.arccos(np.cos(x))\n    >>> np.testing.assert_allclose(x, y, rtol=1e-5, atol=0)\n    \n    As mentioned in the Notes section, `assert_allclose` has special\n    handling for scalars. Here, the test checks that the value of `numpy.sin`\n    is nearly zero at integer multiples of \u03c0.\n    \n    >>> x = np.arange(3) * np.pi\n    >>> np.testing.assert_allclose(np.sin(x), 0, atol=1e-15)\n    \n    Use `strict` to raise an ``AssertionError`` when comparing an array\n    with one or more dimensions against a scalar.\n    \n    >>> np.testing.assert_allclose(np.sin(x), 0, atol=1e-15, strict=True)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Not equal to tolerance rtol=1e-07, atol=1e-15\n    <BLANKLINE>\n    (shapes (3,), () mismatch)\n     ACTUAL: array([ 0.000000e+00,  1.224647e-16, -2.449294e-16])\n     DESIRED: array(0)\n    \n    The `strict` parameter also ensures that the array data types match:\n    \n    >>> y = np.zeros(3, dtype=np.float32)\n    >>> np.testing.assert_allclose(np.sin(x), y, atol=1e-15, strict=True)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Not equal to tolerance rtol=1e-07, atol=1e-15\n    <BLANKLINE>\n    (dtypes float64, float32 mismatch)\n     ACTUAL: array([ 0.000000e+00,  1.224647e-16, -2.449294e-16])\n     DESIRED: array([0., 0., 0.], dtype=float32)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "abb962d6dc5566a47d0a892af01bf3fff487fa47b49886fb2fe6d0375d0073c0",
            "fields": [
                {
                    "id": "g8cf7nxk",
                    "encoding": "",
                    "name": "actual",
                    "value": "",
                    "defaultValue": "",
                    "description": "Array obtained.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3u_kyspd",
                    "encoding": "",
                    "name": "desired",
                    "value": "",
                    "defaultValue": "",
                    "description": "Array desired.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nwexlyty",
                    "encoding": "",
                    "name": "rtol",
                    "value": 1e-07,
                    "defaultValue": 1e-07,
                    "description": "Relative tolerance.",
                    "type": "float",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ztmr05y7",
                    "encoding": "",
                    "name": "atol",
                    "value": 0,
                    "defaultValue": 0,
                    "description": "Absolute tolerance.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5eufs8i2",
                    "encoding": "",
                    "name": "equal_nan",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, NaNs will compare equal.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s7ibggb4",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "The error message to be printed in case of failure.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2oib85e8",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, the conflicting values are appended to the error message.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o436_qk9",
                    "encoding": "",
                    "name": "strict",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, raise an ``AssertionError`` when either the shape or the data\ntype of the arguments does not match. The special handling of scalars\nmentioned in the Notes section is disabled.\n\n.. versionadded:: 2.0.0",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bupks2ts",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_allclose",
                    "defaultValue": "numpy.testing.assert_allclose",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9nwx2dg9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ebm_3h8x",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "n8_k6_04",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "089djh46",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xsclq3ch",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8qu8cq32",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "n1py68sg",
            "name": "testing.assert_almost_equal",
            "description": "Raises an AssertionError if two items are not equal up to desired\n    precision.\n    \n    .. note:: It is recommended to use one of `assert_allclose`,\n              `assert_array_almost_equal_nulp` or `assert_array_max_ulp`\n              instead of this function for more consistent floating point\n              comparisons.\n    \n    The test verifies that the elements of `actual` and `desired` satisfy::\n    \n        abs(desired-actual) < float64(1.5 * 10**(-decimal))\n    \n    That is a looser test than originally documented, but agrees with what the\n    actual implementation in `assert_array_almost_equal` did up to rounding\n    vagaries. An exception is raised at conflicting values. For ndarrays this\n    delegates to assert_array_almost_equal\n    \n    Parameters\n    ----------\n    actual : array_like\n        The object to check.\n    desired : array_like\n        The expected object.\n    decimal : int, optional\n        Desired precision, default is 7.\n    err_msg : str, optional\n        The error message to be printed in case of failure.\n    verbose : bool, optional\n        If True, the conflicting values are appended to the error message.\n    \n    Raises\n    ------\n    AssertionError\n      If actual and desired are not equal up to specified precision.\n    \n    See Also\n    --------\n    assert_allclose: Compare two array_like objects for equality with desired\n                     relative and/or absolute precision.\n    assert_array_almost_equal_nulp, assert_array_max_ulp, assert_equal\n    \n    Examples\n    --------\n    >>> from numpy.testing import assert_almost_equal\n    >>> assert_almost_equal(2.3333333333333, 2.33333334)\n    >>> assert_almost_equal(2.3333333333333, 2.33333334, decimal=10)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not almost equal to 10 decimals\n     ACTUAL: 2.3333333333333\n     DESIRED: 2.33333334\n    \n    >>> assert_almost_equal(np.array([1.0,2.3333333333333]),\n    ...                     np.array([1.0,2.33333334]), decimal=9)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not almost equal to 9 decimals\n    <BLANKLINE>\n    Mismatched elements: 1 / 2 (50%)\n    Max absolute difference among violations: 6.66669964e-09\n    Max relative difference among violations: 2.85715698e-09\n     ACTUAL: array([1.         , 2.333333333])\n     DESIRED: array([1.        , 2.33333334])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "47781f9f804462ec15c8a8df834c87e7fc65b179e4450103a1ee72a824289803",
            "fields": [
                {
                    "id": "h451f446",
                    "encoding": "",
                    "name": "actual",
                    "value": "",
                    "defaultValue": "",
                    "description": "The object to check.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dtjla5pa",
                    "encoding": "",
                    "name": "desired",
                    "value": "",
                    "defaultValue": "",
                    "description": "The expected object.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o0z0d05r",
                    "encoding": "",
                    "name": "decimal",
                    "value": 7,
                    "defaultValue": 7,
                    "description": "Desired precision, default is 7.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c1hsi6dd",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "The error message to be printed in case of failure.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d6gupvrt",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, the conflicting values are appended to the error message.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d8i6zd_e",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_almost_equal",
                    "defaultValue": "numpy.testing.assert_almost_equal",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4b9to65e",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pyoycbb4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "gbxjsgay",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "knzo9umf",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jspas8sd",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5va1_4t8",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "4taiwddt",
            "name": "testing.assert_approx_equal",
            "description": "Raises an AssertionError if two items are not equal up to significant\n    digits.\n    \n    .. note:: It is recommended to use one of `assert_allclose`,\n              `assert_array_almost_equal_nulp` or `assert_array_max_ulp`\n              instead of this function for more consistent floating point\n              comparisons.\n    \n    Given two numbers, check that they are approximately equal.\n    Approximately equal is defined as the number of significant digits\n    that agree.\n    \n    Parameters\n    ----------\n    actual : scalar\n        The object to check.\n    desired : scalar\n        The expected object.\n    significant : int, optional\n        Desired precision, default is 7.\n    err_msg : str, optional\n        The error message to be printed in case of failure.\n    verbose : bool, optional\n        If True, the conflicting values are appended to the error message.\n    \n    Raises\n    ------\n    AssertionError\n      If actual and desired are not equal up to specified precision.\n    \n    See Also\n    --------\n    assert_allclose: Compare two array_like objects for equality with desired\n                     relative and/or absolute precision.\n    assert_array_almost_equal_nulp, assert_array_max_ulp, assert_equal\n    \n    Examples\n    --------\n    >>> np.testing.assert_approx_equal(0.12345677777777e-20, 0.1234567e-20)\n    >>> np.testing.assert_approx_equal(0.12345670e-20, 0.12345671e-20,\n    ...                                significant=8)\n    >>> np.testing.assert_approx_equal(0.12345670e-20, 0.12345672e-20,\n    ...                                significant=8)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Items are not equal to 8 significant digits:\n     ACTUAL: 1.234567e-21\n     DESIRED: 1.2345672e-21\n    \n    the evaluated condition that raises the exception is\n    \n    >>> abs(0.12345670e-20/1e-21 - 0.12345672e-20/1e-21) >= 10**-(8-1)\n    True",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cbe49184751288a487fc56734fbb3c4e8f001de35a0cf4c8bb2a806816e8f040",
            "fields": [
                {
                    "id": "84v88rs3",
                    "encoding": "",
                    "name": "actual",
                    "value": "",
                    "defaultValue": "",
                    "description": "The object to check.",
                    "type": "scalar",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rdvk50il",
                    "encoding": "",
                    "name": "desired",
                    "value": "",
                    "defaultValue": "",
                    "description": "The expected object.",
                    "type": "scalar",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ntev7zmy",
                    "encoding": "",
                    "name": "significant",
                    "value": 7,
                    "defaultValue": 7,
                    "description": "Desired precision, default is 7.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hqtzdtw8",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "The error message to be printed in case of failure.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "881ny3hb",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, the conflicting values are appended to the error message.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4kkviuk0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_approx_equal",
                    "defaultValue": "numpy.testing.assert_approx_equal",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zdcnfz9_",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "92au_cw8",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "h5oqrk84",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j5mj8pcf",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ijmv9937",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pst8mtjm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "5dhrmca3",
            "name": "testing.assert_array_almost_equal",
            "description": "Raises an AssertionError if two objects are not equal up to desired\n    precision.\n    \n    .. note:: It is recommended to use one of `assert_allclose`,\n              `assert_array_almost_equal_nulp` or `assert_array_max_ulp`\n              instead of this function for more consistent floating point\n              comparisons.\n    \n    The test verifies identical shapes and that the elements of ``actual`` and\n    ``desired`` satisfy::\n    \n        abs(desired-actual) < 1.5 * 10**(-decimal)\n    \n    That is a looser test than originally documented, but agrees with what the\n    actual implementation did up to rounding vagaries. An exception is raised\n    at shape mismatch or conflicting values. In contrast to the standard usage\n    in numpy, NaNs are compared like numbers, no assertion is raised if both\n    objects have NaNs in the same positions.\n    \n    Parameters\n    ----------\n    actual : array_like\n        The actual object to check.\n    desired : array_like\n        The desired, expected object.\n    decimal : int, optional\n        Desired precision, default is 6.\n    err_msg : str, optional\n      The error message to be printed in case of failure.\n    verbose : bool, optional\n        If True, the conflicting values are appended to the error message.\n    \n    Raises\n    ------\n    AssertionError\n        If actual and desired are not equal up to specified precision.\n    \n    See Also\n    --------\n    assert_allclose: Compare two array_like objects for equality with desired\n                     relative and/or absolute precision.\n    assert_array_almost_equal_nulp, assert_array_max_ulp, assert_equal\n    \n    Examples\n    --------\n    the first assert does not raise an exception\n    \n    >>> np.testing.assert_array_almost_equal([1.0,2.333,np.nan],\n    ...                                      [1.0,2.333,np.nan])\n    \n    >>> np.testing.assert_array_almost_equal([1.0,2.33333,np.nan],\n    ...                                      [1.0,2.33339,np.nan], decimal=5)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not almost equal to 5 decimals\n    <BLANKLINE>\n    Mismatched elements: 1 / 3 (33.3%)\n    Max absolute difference among violations: 6.e-05\n    Max relative difference among violations: 2.57136612e-05\n     ACTUAL: array([1.     , 2.33333,     nan])\n     DESIRED: array([1.     , 2.33339,     nan])\n    \n    >>> np.testing.assert_array_almost_equal([1.0,2.33333,np.nan],\n    ...                                      [1.0,2.33333, 5], decimal=5)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not almost equal to 5 decimals\n    <BLANKLINE>\n    nan location mismatch:\n     ACTUAL: array([1.     , 2.33333,     nan])\n     DESIRED: array([1.     , 2.33333, 5.     ])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "599c6f6a2152180764d3b8b424f06c6acc93b80ea4a9bf3dda948ced8da98ed9",
            "fields": [
                {
                    "id": "46wsv4bo",
                    "encoding": "",
                    "name": "actual",
                    "value": "",
                    "defaultValue": "",
                    "description": "The actual object to check.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9isnsyzb",
                    "encoding": "",
                    "name": "desired",
                    "value": "",
                    "defaultValue": "",
                    "description": "The desired, expected object.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j0a_grlt",
                    "encoding": "",
                    "name": "decimal",
                    "value": 6,
                    "defaultValue": 6,
                    "description": "Desired precision, default is 6.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k4npma2j",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "The error message to be printed in case of failure.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lfu4fczi",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, the conflicting values are appended to the error message.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k7o9iyhp",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_array_almost_equal",
                    "defaultValue": "numpy.testing.assert_array_almost_equal",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g79i0sv9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2rpd0k7t",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "bs450cr_",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6vhxqb08",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7e544o1v",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "92g4zx7h",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "vg26sau8",
            "name": "testing.assert_array_almost_equal_nulp",
            "description": "Compare two arrays relatively to their spacing.\n    \n    This is a relatively robust method to compare two arrays whose amplitude\n    is variable.\n    \n    Parameters\n    ----------\n    x, y : array_like\n        Input arrays.\n    nulp : int, optional\n        The maximum number of unit in the last place for tolerance (see Notes).\n        Default is 1.\n    \n    Returns\n    -------\n    None\n    \n    Raises\n    ------\n    AssertionError\n        If the spacing between `x` and `y` for one or more elements is larger\n        than `nulp`.\n    \n    See Also\n    --------\n    assert_array_max_ulp : Check that all items of arrays differ in at most\n        N Units in the Last Place.\n    spacing : Return the distance between x and the nearest adjacent number.\n    \n    Notes\n    -----\n    An assertion is raised if the following condition is not met::\n    \n        abs(x - y) <= nulp * spacing(maximum(abs(x), abs(y)))\n    \n    Examples\n    --------\n    >>> x = np.array([1., 1e-10, 1e-20])\n    >>> eps = np.finfo(x.dtype).eps\n    >>> np.testing.assert_array_almost_equal_nulp(x, x*eps/2 + x)\n    \n    >>> np.testing.assert_array_almost_equal_nulp(x, x*eps + x)\n    Traceback (most recent call last):\n      ...\n    AssertionError: Arrays are not equal to 1 ULP (max is 2)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "32f2115bb068d1364ed7ae7c32c63987781ffdc18917a9bad6463c474d2c23aa",
            "fields": [
                {
                    "id": "u3ug2ua3",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "23at7vn6",
                    "encoding": "",
                    "name": "y",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c4_g2joe",
                    "encoding": "",
                    "name": "nulp",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "The maximum number of unit in the last place for tolerance (see Notes).\nDefault is 1.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "91sgnh3_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_array_almost_equal_nulp",
                    "defaultValue": "numpy.testing.assert_array_almost_equal_nulp",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w26pw7gi",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rugpa3jq",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "61xws0ia",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ejxr9u8l",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "frwt7rkl",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8352ekbr",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "j_gsi31i",
            "name": "testing.assert_array_compare",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "4eff665853feceaa4a42fbc9380286bc07b758c0feaee7f4d728d9af3d894210",
            "fields": [
                {
                    "id": "0_et_nrl",
                    "encoding": "",
                    "name": "comparison",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "37n8lzpz",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "twb4b2lr",
                    "encoding": "",
                    "name": "y",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1dm1idpe",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "41j6tprs",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hlt9z4n_",
                    "encoding": "",
                    "name": "header",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3t4a1kut",
                    "encoding": "",
                    "name": "precision",
                    "value": 6,
                    "defaultValue": 6,
                    "description": "",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4mtlq7uw",
                    "encoding": "",
                    "name": "equal_nan",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6o4xoi64",
                    "encoding": "",
                    "name": "equal_inf",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uir2e1z8",
                    "encoding": "",
                    "name": "strict",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "df0nkk6j",
                    "encoding": "",
                    "name": "names",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rygc0mhu",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_array_compare",
                    "defaultValue": "numpy.testing.assert_array_compare",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dtewduw2",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lp92h8nm",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "ot74mg7x",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "71vdts2j",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nh442rks",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "if605u1w",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "dnnotami",
            "name": "testing.assert_array_equal",
            "description": "Raises an AssertionError if two array_like objects are not equal.\n    \n    Given two array_like objects, check that the shape is equal and all\n    elements of these objects are equal (but see the Notes for the special\n    handling of a scalar). An exception is raised at shape mismatch or\n    conflicting values. In contrast to the standard usage in numpy, NaNs\n    are compared like numbers, no assertion is raised if both objects have\n    NaNs in the same positions.\n    \n    The usual caution for verifying equality with floating point numbers is\n    advised.\n    \n    .. note:: When either `actual` or `desired` is already an instance of\n        `numpy.ndarray` and `desired` is not a ``dict``, the behavior of\n        ``assert_equal(actual, desired)`` is identical to the behavior of this\n        function. Otherwise, this function performs `np.asanyarray` on the\n        inputs before comparison, whereas `assert_equal` defines special\n        comparison rules for common Python types. For example, only\n        `assert_equal` can be used to compare nested Python lists. In new code,\n        consider using only `assert_equal`, explicitly converting either\n        `actual` or `desired` to arrays if the behavior of `assert_array_equal`\n        is desired.\n    \n    Parameters\n    ----------\n    actual : array_like\n        The actual object to check.\n    desired : array_like\n        The desired, expected object.\n    err_msg : str, optional\n        The error message to be printed in case of failure.\n    verbose : bool, optional\n        If True, the conflicting values are appended to the error message.\n    strict : bool, optional\n        If True, raise an AssertionError when either the shape or the data\n        type of the array_like objects does not match. The special\n        handling for scalars mentioned in the Notes section is disabled.\n    \n        .. versionadded:: 1.24.0\n    \n    Raises\n    ------\n    AssertionError\n        If actual and desired objects are not equal.\n    \n    See Also\n    --------\n    assert_allclose: Compare two array_like objects for equality with desired\n                     relative and/or absolute precision.\n    assert_array_almost_equal_nulp, assert_array_max_ulp, assert_equal\n    \n    Notes\n    -----\n    When one of `actual` and `desired` is a scalar and the other is array_like,\n    the function checks that each element of the array_like object is equal to\n    the scalar. This behaviour can be disabled with the `strict` parameter.\n    \n    Examples\n    --------\n    The first assert does not raise an exception:\n    \n    >>> np.testing.assert_array_equal([1.0,2.33333,np.nan],\n    ...                               [np.exp(0),2.33333, np.nan])\n    \n    Assert fails with numerical imprecision with floats:\n    \n    >>> np.testing.assert_array_equal([1.0,np.pi,np.nan],\n    ...                               [1, np.sqrt(np.pi)**2, np.nan])\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not equal\n    <BLANKLINE>\n    Mismatched elements: 1 / 3 (33.3%)\n    Max absolute difference among violations: 4.4408921e-16\n    Max relative difference among violations: 1.41357986e-16\n     ACTUAL: array([1.      , 3.141593,      nan])\n     DESIRED: array([1.      , 3.141593,      nan])\n    \n    Use `assert_allclose` or one of the nulp (number of floating point values)\n    functions for these cases instead:\n    \n    >>> np.testing.assert_allclose([1.0,np.pi,np.nan],\n    ...                            [1, np.sqrt(np.pi)**2, np.nan],\n    ...                            rtol=1e-10, atol=0)\n    \n    As mentioned in the Notes section, `assert_array_equal` has special\n    handling for scalars. Here the test checks that each value in `x` is 3:\n    \n    >>> x = np.full((2, 5), fill_value=3)\n    >>> np.testing.assert_array_equal(x, 3)\n    \n    Use `strict` to raise an AssertionError when comparing a scalar with an\n    array:\n    \n    >>> np.testing.assert_array_equal(x, 3, strict=True)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not equal\n    <BLANKLINE>\n    (shapes (2, 5), () mismatch)\n     ACTUAL: array([[3, 3, 3, 3, 3],\n           [3, 3, 3, 3, 3]])\n     DESIRED: array(3)\n    \n    The `strict` parameter also ensures that the array data types match:\n    \n    >>> x = np.array([2, 2, 2])\n    >>> y = np.array([2., 2., 2.], dtype=np.float32)\n    >>> np.testing.assert_array_equal(x, y, strict=True)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not equal\n    <BLANKLINE>\n    (dtypes int64, float32 mismatch)\n     ACTUAL: array([2, 2, 2])\n     DESIRED: array([2., 2., 2.], dtype=float32)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c6502f27c713982002d340f3dda1baa76ab3c002ebefe0b43ae054f0a6b907b5",
            "fields": [
                {
                    "id": "1ppmt5wi",
                    "encoding": "",
                    "name": "actual",
                    "value": "",
                    "defaultValue": "",
                    "description": "The actual object to check.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2g2acp0u",
                    "encoding": "",
                    "name": "desired",
                    "value": "",
                    "defaultValue": "",
                    "description": "The desired, expected object.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ne7gfuww",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "The error message to be printed in case of failure.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hwoq2g0y",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, the conflicting values are appended to the error message.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7d3buzky",
                    "encoding": "",
                    "name": "strict",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, raise an AssertionError when either the shape or the data\ntype of the array_like objects does not match. The special\nhandling for scalars mentioned in the Notes section is disabled.\n\n.. versionadded:: 1.24.0",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "agx33038",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_array_equal",
                    "defaultValue": "numpy.testing.assert_array_equal",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "g_4tcd96",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "weslrsve",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "gn75jx24",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8k18u_nx",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4_9qj45c",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rs_5t0cz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "f9em4aa1",
            "name": "testing.assert_array_less",
            "description": "Raises an AssertionError if two array_like objects are not ordered by less\n    than.\n    \n    Given two array_like objects `x` and `y`, check that the shape is equal and\n    all elements of `x` are strictly less than the corresponding elements of\n    `y` (but see the Notes for the special handling of a scalar). An exception\n    is raised at shape mismatch or values that are not correctly ordered. In\n    contrast to the  standard usage in NumPy, no assertion is raised if both\n    objects have NaNs in the same positions.\n    \n    Parameters\n    ----------\n    x : array_like\n      The smaller object to check.\n    y : array_like\n      The larger object to compare.\n    err_msg : string\n      The error message to be printed in case of failure.\n    verbose : bool\n        If True, the conflicting values are appended to the error message.\n    strict : bool, optional\n        If True, raise an AssertionError when either the shape or the data\n        type of the array_like objects does not match. The special\n        handling for scalars mentioned in the Notes section is disabled.\n    \n        .. versionadded:: 2.0.0\n    \n    Raises\n    ------\n    AssertionError\n      If x is not strictly smaller than y, element-wise.\n    \n    See Also\n    --------\n    assert_array_equal: tests objects for equality\n    assert_array_almost_equal: test objects for equality up to precision\n    \n    Notes\n    -----\n    When one of `x` and `y` is a scalar and the other is array_like, the\n    function performs the comparison as though the scalar were broadcasted\n    to the shape of the array. This behaviour can be disabled with the `strict`\n    parameter.\n    \n    Examples\n    --------\n    The following assertion passes because each finite element of `x` is\n    strictly less than the corresponding element of `y`, and the NaNs are in\n    corresponding locations.\n    \n    >>> x = [1.0, 1.0, np.nan]\n    >>> y = [1.1, 2.0, np.nan]\n    >>> np.testing.assert_array_less(x, y)\n    \n    The following assertion fails because the zeroth element of `x` is no\n    longer strictly less than the zeroth element of `y`.\n    \n    >>> y[0] = 1\n    >>> np.testing.assert_array_less(x, y)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not strictly ordered `x < y`\n    <BLANKLINE>\n    Mismatched elements: 1 / 3 (33.3%)\n    Max absolute difference among violations: 0.\n    Max relative difference among violations: 0.\n     x: array([ 1.,  1., nan])\n     y: array([ 1.,  2., nan])\n    \n    Here, `y` is a scalar, so each element of `x` is compared to `y`, and\n    the assertion passes.\n    \n    >>> x = [1.0, 4.0]\n    >>> y = 5.0\n    >>> np.testing.assert_array_less(x, y)\n    \n    However, with ``strict=True``, the assertion will fail because the shapes\n    do not match.\n    \n    >>> np.testing.assert_array_less(x, y, strict=True)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not strictly ordered `x < y`\n    <BLANKLINE>\n    (shapes (2,), () mismatch)\n     x: array([1., 4.])\n     y: array(5.)\n    \n    With ``strict=True``, the assertion also fails if the dtypes of the two\n    arrays do not match.\n    \n    >>> y = [5, 5]\n    >>> np.testing.assert_array_less(x, y, strict=True)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not strictly ordered `x < y`\n    <BLANKLINE>\n    (dtypes float64, int64 mismatch)\n     x: array([1., 4.])\n     y: array([5, 5])",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6b1fa0a8e5c08502f8179bd075168da6d4d46070960f484f021a44012feb7999",
            "fields": [
                {
                    "id": "gpq2x4xn",
                    "encoding": "",
                    "name": "x",
                    "value": "",
                    "defaultValue": "",
                    "description": "The smaller object to check.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cwls4phz",
                    "encoding": "",
                    "name": "y",
                    "value": "",
                    "defaultValue": "",
                    "description": "The larger object to compare.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vjnvsal8",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "The error message to be printed in case of failure.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2_y2a7j4",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, the conflicting values are appended to the error message.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eejpp0nv",
                    "encoding": "",
                    "name": "strict",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True, raise an AssertionError when either the shape or the data\ntype of the array_like objects does not match. The special\nhandling for scalars mentioned in the Notes section is disabled.\n\n.. versionadded:: 2.0.0",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "03e7jui9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_array_less",
                    "defaultValue": "numpy.testing.assert_array_less",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "37l4o1do",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p_9bgwty",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "1qrtw7qz",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rcjn7keo",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uc40_8ss",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "aay5kis_",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "lggdoy6j",
            "name": "testing.assert_array_max_ulp",
            "description": "Check that all items of arrays differ in at most N Units in the Last Place.\n    \n    Parameters\n    ----------\n    a, b : array_like\n        Input arrays to be compared.\n    maxulp : int, optional\n        The maximum number of units in the last place that elements of `a` and\n        `b` can differ. Default is 1.\n    dtype : dtype, optional\n        Data-type to convert `a` and `b` to if given. Default is None.\n    \n    Returns\n    -------\n    ret : ndarray\n        Array containing number of representable floating point numbers between\n        items in `a` and `b`.\n    \n    Raises\n    ------\n    AssertionError\n        If one or more elements differ by more than `maxulp`.\n    \n    Notes\n    -----\n    For computing the ULP difference, this API does not differentiate between\n    various representations of NAN (ULP difference between 0x7fc00000 and 0xffc00000\n    is zero).\n    \n    See Also\n    --------\n    assert_array_almost_equal_nulp : Compare two arrays relatively to their\n        spacing.\n    \n    Examples\n    --------\n    >>> a = np.linspace(0., 1., 100)\n    >>> res = np.testing.assert_array_max_ulp(a, np.arcsin(np.sin(a)))",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2c5a4d18ff39321a8b7ecb66fd0483f808b30496f6541ce8aadd913f59935614",
            "fields": [
                {
                    "id": "b4t9ytqi",
                    "encoding": "",
                    "name": "a",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1etukkna",
                    "encoding": "",
                    "name": "b",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vtsl7y9n",
                    "encoding": "",
                    "name": "maxulp",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "The maximum number of units in the last place that elements of `a` and\n`b` can differ. Default is 1.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8x7whrnl",
                    "encoding": "",
                    "name": "dtype",
                    "value": "",
                    "defaultValue": "",
                    "description": "Data-type to convert `a` and `b` to if given. Default is None.",
                    "type": "dtype",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rnjltj4s",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_array_max_ulp",
                    "defaultValue": "numpy.testing.assert_array_max_ulp",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ltyip1xj",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ty_rdniw",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6nqhiuuf",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cbili0o9",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dcyhhgvi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cclmzwdf",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "jaypr3bj",
            "name": "testing.assert_equal",
            "description": "Raises an AssertionError if two objects are not equal.\n    \n    Given two objects (scalars, lists, tuples, dictionaries or numpy arrays),\n    check that all elements of these objects are equal. An exception is raised\n    at the first conflicting values.\n    \n    This function handles NaN comparisons as if NaN was a \"normal\" number.\n    That is, AssertionError is not raised if both objects have NaNs in the same\n    positions.  This is in contrast to the IEEE standard on NaNs, which says\n    that NaN compared to anything must return False.\n    \n    Parameters\n    ----------\n    actual : array_like\n        The object to check.\n    desired : array_like\n        The expected object.\n    err_msg : str, optional\n        The error message to be printed in case of failure.\n    verbose : bool, optional\n        If True, the conflicting values are appended to the error message.\n    strict : bool, optional\n        If True and either of the `actual` and `desired` arguments is an array,\n        raise an ``AssertionError`` when either the shape or the data type of\n        the arguments does not match. If neither argument is an array, this\n        parameter has no effect.\n    \n        .. versionadded:: 2.0.0\n    \n    Raises\n    ------\n    AssertionError\n        If actual and desired are not equal.\n    \n    See Also\n    --------\n    assert_allclose\n    assert_array_almost_equal_nulp,\n    assert_array_max_ulp,\n    \n    Notes\n    -----\n    By default, when one of `actual` and `desired` is a scalar and the other is\n    an array, the function checks that each element of the array is equal to\n    the scalar. This behaviour can be disabled by setting ``strict==True``.\n    \n    Examples\n    --------\n    >>> np.testing.assert_equal([4, 5], [4, 6])\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Items are not equal:\n    item=1\n     ACTUAL: 5\n     DESIRED: 6\n    \n    The following comparison does not raise an exception.  There are NaNs\n    in the inputs, but they are in the same positions.\n    \n    >>> np.testing.assert_equal(np.array([1.0, 2.0, np.nan]), [1, 2, np.nan])\n    \n    As mentioned in the Notes section, `assert_equal` has special\n    handling for scalars when one of the arguments is an array.\n    Here, the test checks that each value in `x` is 3:\n    \n    >>> x = np.full((2, 5), fill_value=3)\n    >>> np.testing.assert_equal(x, 3)\n    \n    Use `strict` to raise an AssertionError when comparing a scalar with an\n    array of a different shape:\n    \n    >>> np.testing.assert_equal(x, 3, strict=True)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not equal\n    <BLANKLINE>\n    (shapes (2, 5), () mismatch)\n     ACTUAL: array([[3, 3, 3, 3, 3],\n           [3, 3, 3, 3, 3]])\n     DESIRED: array(3)\n    \n    The `strict` parameter also ensures that the array data types match:\n    \n    >>> x = np.array([2, 2, 2])\n    >>> y = np.array([2., 2., 2.], dtype=np.float32)\n    >>> np.testing.assert_equal(x, y, strict=True)\n    Traceback (most recent call last):\n        ...\n    AssertionError:\n    Arrays are not equal\n    <BLANKLINE>\n    (dtypes int64, float32 mismatch)\n     ACTUAL: array([2, 2, 2])\n     DESIRED: array([2., 2., 2.], dtype=float32)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f48329ba3c78c9056d8843788dcdeeefc78a1a73be312c1f4eeb8dbbc6953b4b",
            "fields": [
                {
                    "id": "64r91moh",
                    "encoding": "",
                    "name": "actual",
                    "value": "",
                    "defaultValue": "",
                    "description": "The object to check.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ydfxuls4",
                    "encoding": "",
                    "name": "desired",
                    "value": "",
                    "defaultValue": "",
                    "description": "The expected object.",
                    "type": "arraylike",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jsomw2a_",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "The error message to be printed in case of failure.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l8g007n9",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "If True, the conflicting values are appended to the error message.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q0y95phg",
                    "encoding": "",
                    "name": "strict",
                    "value": false,
                    "defaultValue": false,
                    "description": "If True and either of the `actual` and `desired` arguments is an array,\nraise an ``AssertionError`` when either the shape or the data type of\nthe arguments does not match. If neither argument is an array, this\nparameter has no effect.\n\n.. versionadded:: 2.0.0",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ucf73viv",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_equal",
                    "defaultValue": "numpy.testing.assert_equal",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kj6w8ku7",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wvitmqu2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "zfl9jig3",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1786kbu4",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bcj__woi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9yy04d65",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "z0qidgeb",
            "name": "testing.assert_no_gc_cycles",
            "description": "Fail if the given callable produces any reference cycles.\n    \n    If called with all arguments omitted, may be used as a context manager::\n    \n        with assert_no_gc_cycles():\n            do_something()\n    \n    Parameters\n    ----------\n    func : callable\n        The callable to test.\n    \\*args : Arguments\n        Arguments passed to `func`.\n    \\*\\*kwargs : Kwargs\n        Keyword arguments passed to `func`.\n    \n    Returns\n    -------\n    Nothing. The result is deliberately discarded to ensure that all cycles\n    are found.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "17c4bb937cd88434c7ed2ea918143be83e1ff1390453fc38d2cec31ed4d69b9e",
            "fields": [
                {
                    "id": "a4bjf4ck",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "adsrxc1m",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c3uoapar",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_no_gc_cycles",
                    "defaultValue": "numpy.testing.assert_no_gc_cycles",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1npoi0cq",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fbms_lo3",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vrg2nw4p",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mlks292z",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bo66ko_2",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "47aump4u",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "5juhny_s",
            "name": "testing.assert_no_warnings",
            "description": "Fail if the given callable produces any warnings.\n    \n    If called with all arguments omitted, may be used as a context manager::\n    \n        with assert_no_warnings():\n            do_something()\n    \n    The ability to be used as a context manager is new in NumPy v1.11.0.\n    \n    Parameters\n    ----------\n    func : callable\n        The callable to test.\n    \\*args : Arguments\n        Arguments passed to `func`.\n    \\*\\*kwargs : Kwargs\n        Keyword arguments passed to `func`.\n    \n    Returns\n    -------\n    The value returned by `func`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "24e03df7636d86f1a94d801901218193c088d9f7e60a67b879a932cb3bbd16a5",
            "fields": [
                {
                    "id": "p6vj4bku",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xykk7vzu",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tb8oeg0n",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_no_warnings",
                    "defaultValue": "numpy.testing.assert_no_warnings",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d_yp9gxq",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "muk8k96g",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "e6jlye86",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "232h5cm3",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6x54xyi6",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_dvma53u",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "cdfbh31q",
            "name": "testing.assert_raises",
            "description": "assert_raises(exception_class, callable, *args, **kwargs)\n    assert_raises(exception_class)\n    \n    Fail unless an exception of class exception_class is thrown\n    by callable when invoked with arguments args and keyword\n    arguments kwargs. If a different type of exception is\n    thrown, it will not be caught, and the test case will be\n    deemed to have suffered an error, exactly as for an\n    unexpected exception.\n    \n    Alternatively, `assert_raises` can be used as a context manager:\n    \n    >>> from numpy.testing import assert_raises\n    >>> with assert_raises(ZeroDivisionError):\n    ...     1 / 0\n    \n    is equivalent to\n    \n    >>> def div(x, y):\n    ...     return x / y\n    >>> assert_raises(ZeroDivisionError, div, 1, 0)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8c0948eabfdea6c7a9ea4fc876d758e4174553d24603ead04adeeb0ffc4ef31b",
            "fields": [
                {
                    "id": "ewb5lr69",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f3ps05mo",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "81fhucta",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_raises",
                    "defaultValue": "numpy.testing.assert_raises",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vgy0ggkq",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8ugoen9y",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "oaw4xfu9",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mfg4qbc_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "c2kif3rm",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xc3i41z2",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "xseyz01w",
            "name": "testing.assert_raises_regex",
            "description": "assert_raises_regex(exception_class, expected_regexp, callable, *args,\n                        **kwargs)\n    assert_raises_regex(exception_class, expected_regexp)\n    \n    Fail unless an exception of class exception_class and with message that\n    matches expected_regexp is thrown by callable when invoked with arguments\n    args and keyword arguments kwargs.\n    \n    Alternatively, can be used as a context manager like `assert_raises`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "dc59838d43220a3ca4a38e041f3d16b966750c02bf1c341d0b3fa27a578621ee",
            "fields": [
                {
                    "id": "vc_lt_x8",
                    "encoding": "",
                    "name": "exception_class",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "t2862jnd",
                    "encoding": "",
                    "name": "expected_regexp",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3i7m8uer",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "io9nyehc",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "uikxcxl5",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_raises_regex",
                    "defaultValue": "numpy.testing.assert_raises_regex",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "onflf7pq",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9rk2j0dt",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "clqkzs30",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5ogfrktx",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "94bpxtb8",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "72e46z7s",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "nsyu0y74",
            "name": "testing.assert_string_equal",
            "description": "Test if two strings are equal.\n    \n    If the given strings are equal, `assert_string_equal` does nothing.\n    If they are not equal, an AssertionError is raised, and the diff\n    between the strings is shown.\n    \n    Parameters\n    ----------\n    actual : str\n        The string to test for equality against the expected string.\n    desired : str\n        The expected string.\n    \n    Examples\n    --------\n    >>> np.testing.assert_string_equal('abc', 'abc')\n    >>> np.testing.assert_string_equal('abc', 'abcd')\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    ...\n    AssertionError: Differences in strings:\n    - abc+ abcd?    +",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ae395e4401848a7119e9c56a167973fe24a51e6328720cd31dfe144ac2d5a28b",
            "fields": [
                {
                    "id": "39k_ndyj",
                    "encoding": "",
                    "name": "actual",
                    "value": "",
                    "defaultValue": "",
                    "description": "The string to test for equality against the expected string.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4t0n2fjh",
                    "encoding": "",
                    "name": "desired",
                    "value": "",
                    "defaultValue": "",
                    "description": "The expected string.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hsczlgan",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_string_equal",
                    "defaultValue": "numpy.testing.assert_string_equal",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bjzc239i",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k2z_4zmk",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kcbo_3ve",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zjukcdqz",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z4du7jwz",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eznj3249",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "1zgaj10s",
            "name": "testing.assert_warns",
            "description": "Fail unless the given callable throws the specified warning.\n    \n    A warning of class warning_class should be thrown by the callable when\n    invoked with arguments args and keyword arguments kwargs.\n    If a different type of warning is thrown, it will not be caught.\n    \n    If called with all arguments other than the warning class omitted, may be\n    used as a context manager::\n    \n        with assert_warns(SomeWarning):\n            do_something()\n    \n    The ability to be used as a context manager is new in NumPy v1.11.0.\n    \n    Parameters\n    ----------\n    warning_class : class\n        The class defining the warning that `func` is expected to throw.\n    func : callable, optional\n        Callable to test\n    *args : Arguments\n        Arguments for `func`.\n    **kwargs : Kwargs\n        Keyword arguments for `func`.\n    \n    Returns\n    -------\n    The value returned by `func`.\n    \n    Examples\n    --------\n    >>> import warnings\n    >>> def deprecated_func(num):\n    ...     warnings.warn(\"Please upgrade\", DeprecationWarning)\n    ...     return num*num\n    >>> with np.testing.assert_warns(DeprecationWarning):\n    ...     assert deprecated_func(4) == 16\n    >>> # or passing a func\n    >>> ret = np.testing.assert_warns(DeprecationWarning, deprecated_func, 4)\n    >>> assert ret == 16",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "e086510cf0363b9de0ace560614e5fec0e8afe395cde08b283f2a3ac297116e5",
            "fields": [
                {
                    "id": "d_3svqfs",
                    "encoding": "",
                    "name": "warning_class",
                    "value": "",
                    "defaultValue": "",
                    "description": "The class defining the warning that `func` is expected to throw.",
                    "type": "class",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nkm8l30y",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_hddmbl5",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z04vzlw4",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.assert_warns",
                    "defaultValue": "numpy.testing.assert_warns",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "99tmitcm",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "woig4u2s",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "o568d37d",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8wa400j0",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "882f9zym",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wt441dem",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "kjpin1bz",
            "name": "testing.break_cycles",
            "description": "Break reference cycles by calling gc.collect\n    Objects can call other objects' methods (for instance, another object's\n     __del__) inside their own __del__. On PyPy, the interpreter only runs\n    between calls to gc.collect, so multiple calls are needed to completely\n    release all cycles.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "88a6c2230af369a03bf84b907c3c8b2b6b27202275158ec703a20c8a9b4e43aa",
            "fields": [
                {
                    "id": "i3nafdy2",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.break_cycles",
                    "defaultValue": "numpy.testing.break_cycles",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tj9_ji9w",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8nb_iat2",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "jjuqyi0n",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7dmvput8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "01qi8921",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j2r75iq9",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "cj0aztc7",
            "name": "testing.build_err_msg",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "b95526d97694a718c3c9cddb375aef7ac1b91f2e1d0ca95299151bd3e075c659",
            "fields": [
                {
                    "id": "ixdhpwp0",
                    "encoding": "",
                    "name": "arrays",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z8zxs0x5",
                    "encoding": "",
                    "name": "err_msg",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "58s6uoay",
                    "encoding": "",
                    "name": "header",
                    "value": "Items are not equal:",
                    "defaultValue": "Items are not equal:",
                    "description": "",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7wckr0q2",
                    "encoding": "",
                    "name": "verbose",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qj01i35a",
                    "encoding": "",
                    "name": "names",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jb0i9ood",
                    "encoding": "",
                    "name": "precision",
                    "value": 8,
                    "defaultValue": 8,
                    "description": "",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vkqktxb_",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.build_err_msg",
                    "defaultValue": "numpy.testing.build_err_msg",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j23dulze",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "33lkrbn3",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "gm3p1g4f",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j4sog4s6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fmg7_4r1",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4vbs8ba4",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "8ftwc3b9",
            "name": "testing.check_support_sve",
            "description": "gh-22982",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cc8a55e8944c140c89d22e50947ef91375df5985af4f3e5ecb3ba29de885c881",
            "fields": [
                {
                    "id": "4dwm8duz",
                    "encoding": "",
                    "name": "__cache",
                    "value": [],
                    "defaultValue": [],
                    "description": "",
                    "type": "list",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "caytcc79",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.check_support_sve",
                    "defaultValue": "numpy.testing.check_support_sve",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "61s0_42j",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "237r98mq",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kcxh5bak",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zlc35q0r",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qp3lnu8c",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fiaiehne",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "zfmkqxu7",
            "name": "clear_and_catch_warnings.__init__",
            "description": "Specify whether to record warnings and if an alternative module\n    should be used other than sys.modules['warnings'].\n    \n    For compatibility with Python 3.0, please consider all arguments to be\n    keyword-only.\nContext manager that resets warning registry for catching warnings\n    \n    Warnings can be slippery, because, whenever a warning is triggered, Python\n    adds a ``__warningregistry__`` member to the *calling* module.  This makes\n    it impossible to retrigger the warning in this module, whatever you put in\n    the warnings filters.  This context manager accepts a sequence of `modules`\n    as a keyword argument to its constructor and:\n    \n    * stores and removes any ``__warningregistry__`` entries in given `modules`\n      on entry;\n    * resets ``__warningregistry__`` to its previous state on exit.\n    \n    This makes it possible to trigger any warning afresh inside the context\n    manager without disturbing the state of warnings outside.\n    \n    For compatibility with Python, please consider all arguments to be\n    keyword-only.\n    \n    Parameters\n    ----------\n    record : bool, optional\n        Specifies whether warnings should be captured by a custom\n        implementation of ``warnings.showwarning()`` and be appended to a list\n        returned by the context manager. Otherwise None is returned by the\n        context manager. The objects appended to the list are arguments whose\n        attributes mirror the arguments to ``showwarning()``.\n    modules : sequence, optional\n        Sequence of modules for which to reset warnings registry on entry and\n        restore on exit. To work correctly, all 'ignore' filters should\n        filter by one of these modules.\n    \n    Examples\n    --------\n    >>> import warnings\n    >>> with np.testing.clear_and_catch_warnings(\n    ...         modules=[np._core.fromnumeric]):\n    ...     warnings.simplefilter('always')\n    ...     warnings.filterwarnings('ignore', module='np._core.fromnumeric')\n    ...     # do something that raises a warning but ignore those in\n    ...     # np._core.fromnumeric",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "247488e789ad32c12ad2fbeb66f5ffbd37e56f2df2c4cb46756536e56d0191c8",
            "fields": [
                {
                    "id": "vsyeyqum",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.testing._private.utils.clear_and_catch_warnings.__init__ object",
                    "type": "Object:numpy.testing._private.utils.clear_and_catch_warnings",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "luvl_gs5",
                    "encoding": "",
                    "name": "record",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5zexfr_k",
                    "encoding": "",
                    "name": "modules",
                    "value": "builtins.tuple",
                    "defaultValue": "builtins.tuple",
                    "description": "",
                    "type": "builtins.tuple",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5u3mo4g1",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.testing._private.utils.clear_and_catch_warnings.__init__",
                    "defaultValue": "numpy.matlib.numpy.testing._private.utils.clear_and_catch_warnings.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ly0f12wv",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0c9gc2gc",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "tttmji0p",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kkjfv7z5",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing._private.utils.clear_and_catch_warnings",
                    "defaultValue": "numpy.testing._private.utils.clear_and_catch_warnings",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_z24j2rh",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ia41yvoz",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "22ntburg",
            "name": "testing.decorate_methods",
            "description": "Apply a decorator to all methods in a class matching a regular expression.\n    \n    The given decorator is applied to all public methods of `cls` that are\n    matched by the regular expression `testmatch`\n    (``testmatch.search(methodname)``). Methods that are private, i.e. start\n    with an underscore, are ignored.\n    \n    Parameters\n    ----------\n    cls : class\n        Class whose methods to decorate.\n    decorator : function\n        Decorator to apply to methods\n    testmatch : compiled regexp or str, optional\n        The regular expression. Default value is None, in which case the\n        nose default (``re.compile(r'(?:^|[\\b_\\.%s-])[Tt]est' % os.sep)``)\n        is used.\n        If `testmatch` is a string, it is compiled to a regular expression\n        first.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "232a341782c940827a05ae466b3cc05b13227b04f7f9cfd75811e27689d998b5",
            "fields": [
                {
                    "id": "g0j3iso5",
                    "encoding": "",
                    "name": "cls",
                    "value": "",
                    "defaultValue": "",
                    "description": "Class whose methods to decorate.",
                    "type": "class",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yh2tjkdx",
                    "encoding": "",
                    "name": "decorator",
                    "value": "",
                    "defaultValue": "",
                    "description": "Decorator to apply to methods",
                    "type": "function",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xjupdsmq",
                    "encoding": "",
                    "name": "testmatch",
                    "value": "",
                    "defaultValue": "",
                    "description": "The regular expression. Default value is None, in which case the\nnose default (``re.compile(r'(?:^|[\\b_\\.%s-])[Tt]est' % os.sep)``)\nis used.\nIf `testmatch` is a string, it is compiled to a regular expression\nfirst.",
                    "type": "compiled regexp or str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ahthhzom",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.decorate_methods",
                    "defaultValue": "numpy.testing.decorate_methods",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9it2zfx3",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kh5hkfhu",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "gpg6pb_n",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "61mbifhc",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rp8zoftb",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mwvj7u2v",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "1wft1j00",
            "name": "testing.jiffies",
            "description": "Return number of jiffies elapsed.\n    \n    Return number of jiffies (1/100ths of a second) that this\n    process has been scheduled in user mode. See man 5 proc.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "3a48c42271665f933abcf6b0fa14fdf0284fc5789c8da8c7505b6da1219168a9",
            "fields": [
                {
                    "id": "lebmxsva",
                    "encoding": "",
                    "name": "_proc_pid_stat",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ku5io_ip",
                    "encoding": "",
                    "name": "_load_time",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ue1jf1oe",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.jiffies",
                    "defaultValue": "numpy.testing.jiffies",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cvfbys2o",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "vds2m1ze",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "brj89tpi",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nipk0n_d",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lr7yktdq",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1j5fwy_g",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "z3v1gbpr",
            "name": "testing.measure",
            "description": "Return elapsed time for executing code in the namespace of the caller.\n    \n    The supplied code string is compiled with the Python builtin ``compile``.\n    The precision of the timing is 10 milli-seconds. If the code will execute\n    fast on this timescale, it can be executed many times to get reasonable\n    timing accuracy.\n    \n    Parameters\n    ----------\n    code_str : str\n        The code to be timed.\n    times : int, optional\n        The number of times the code is executed. Default is 1. The code is\n        only compiled once.\n    label : str, optional\n        A label to identify `code_str` with. This is passed into ``compile``\n        as the second argument (for run-time error messages).\n    \n    Returns\n    -------\n    elapsed : float\n        Total elapsed time in seconds for executing `code_str` `times` times.\n    \n    Examples\n    --------\n    >>> times = 10\n    >>> etime = np.testing.measure('for i in range(1000): np.sqrt(i**2)', times=times)\n    >>> print(\"Time for a single execution : \", etime / times, \"s\")  # doctest: +SKIP\n    Time for a single execution :  0.005 s",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "ac796d97f73f25c1c790ea8e5a97263ee53ea92c817af7f7e07519caec2ac64b",
            "fields": [
                {
                    "id": "rrr1_ttm",
                    "encoding": "",
                    "name": "code_str",
                    "value": "",
                    "defaultValue": "",
                    "description": "The code to be timed.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qso08cwn",
                    "encoding": "",
                    "name": "times",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "The number of times the code is executed. Default is 1. The code is\nonly compiled once.",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "20inw8js",
                    "encoding": "",
                    "name": "label",
                    "value": "",
                    "defaultValue": "",
                    "description": "A label to identify `code_str` with. This is passed into ``compile``\nas the second argument (for run-time error messages).",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "eu8ed2i9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.measure",
                    "defaultValue": "numpy.testing.measure",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "myxh_6xc",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "l4wunmxx",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "vdd9h4tt",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lvxhhvkf",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zyklyvzb",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5iizat43",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "fqwfz2a1",
            "name": "testing.memusage",
            "description": "Return virtual memory size in bytes of the running python.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6d9f9b2a2b72171e4e04648929d55e4a38aa9b29619a19f2e38492ef4c287f02",
            "fields": [
                {
                    "id": "687g2eo1",
                    "encoding": "",
                    "name": "_proc_pid_stat",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2irjslav",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.memusage",
                    "defaultValue": "numpy.testing.memusage",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fkulaq3c",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f2bekft4",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "1yea93e8",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lg1ir9pz",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d512qxj1",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "sdw_wvwe",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "hlcktcmx",
            "name": "testing.print_assert_equal",
            "description": "Test if two objects are equal, and print an error message if test fails.\n    \n    The test is performed with ``actual == desired``.\n    \n    Parameters\n    ----------\n    test_string : str\n        The message supplied to AssertionError.\n    actual : object\n        The object to test for equality against `desired`.\n    desired : object\n        The expected result.\n    \n    Examples\n    --------\n    >>> np.testing.print_assert_equal('Test XYZ of func xyz', [0, 1], [0, 1])\n    >>> np.testing.print_assert_equal('Test XYZ of func xyz', [0, 1], [0, 2])\n    Traceback (most recent call last):\n    ...\n    AssertionError: Test XYZ of func xyz failed\n    ACTUAL:\n    [0, 1]\n    DESIRED:\n    [0, 2]",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "403b9cc15f3a19deb5f05e5d006a407cb43a3d9e70c5693d55c0801be5c8b60a",
            "fields": [
                {
                    "id": "t8ur2hjf",
                    "encoding": "",
                    "name": "test_string",
                    "value": "",
                    "defaultValue": "",
                    "description": "The message supplied to AssertionError.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7nc2xvn3",
                    "encoding": "",
                    "name": "actual",
                    "value": "",
                    "defaultValue": "",
                    "description": "The object to test for equality against `desired`.",
                    "type": "object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3or8qrha",
                    "encoding": "",
                    "name": "desired",
                    "value": "",
                    "defaultValue": "",
                    "description": "The expected result.",
                    "type": "object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "egwh0ize",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.print_assert_equal",
                    "defaultValue": "numpy.testing.print_assert_equal",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f4p0ptn1",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hn_o24hv",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "t_m32cmb",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zsyg4uss",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ud4_8twv",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "90q2t5vx",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "drcg9n2j",
            "name": "testing.run_threaded",
            "description": "Runs a function many times in parallel",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "8c9cec2a03af7ff34832f65ec2b2d6a5fa5ed8fbe3c3c2b45345f630d3b280dc",
            "fields": [
                {
                    "id": "gpcti3gb",
                    "encoding": "",
                    "name": "func",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_4dsvoh6",
                    "encoding": "",
                    "name": "max_workers",
                    "value": 8,
                    "defaultValue": 8,
                    "description": "",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "cmbuti0p",
                    "encoding": "",
                    "name": "pass_count",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o3juir9a",
                    "encoding": "",
                    "name": "pass_barrier",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qhz9fe9d",
                    "encoding": "",
                    "name": "outer_iterations",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "",
                    "type": "int",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "z4twx0w1",
                    "encoding": "",
                    "name": "prepare_args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r8jmwew0",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.run_threaded",
                    "defaultValue": "numpy.testing.run_threaded",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zjwmrxw4",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k7c3kcir",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "da9rjazh",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f47ytdu3",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1falub_t",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hj4bfp5n",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "i2w07zfp",
            "name": "testing.rundocs",
            "description": "Run doctests found in the given file.\n    \n    By default `rundocs` raises an AssertionError on failure.\n    \n    Parameters\n    ----------\n    filename : str\n        The path to the file for which the doctests are run.\n    raise_on_error : bool\n        Whether to raise an AssertionError when a doctest fails. Default is\n        True.\n    \n    Notes\n    -----\n    The doctests can be run by the user/developer by adding the ``doctests``\n    argument to the ``test()`` call. For example, to run all tests (including\n    doctests) for ``numpy.lib``:\n    \n    >>> np.lib.test(doctests=True)  # doctest: +SKIP",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "cd940893a1c11b74d2aa91b066fa218f7f3c407fc9e6337cfc6892d882a99490",
            "fields": [
                {
                    "id": "z62lftq4",
                    "encoding": "",
                    "name": "filename",
                    "value": "",
                    "defaultValue": "",
                    "description": "The path to the file for which the doctests are run.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8lfiemqv",
                    "encoding": "",
                    "name": "raise_on_error",
                    "value": true,
                    "defaultValue": true,
                    "description": "Whether to raise an AssertionError when a doctest fails. Default is\nTrue.",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hh140q7j",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.rundocs",
                    "defaultValue": "numpy.testing.rundocs",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "spal23m9",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zpmgy2lf",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "uq_k_6_0",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "h3nljjy8",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "esff8u53",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "10cszjt8",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "8u2dthid",
            "name": "testing.runstring",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2c71df2556ee444eac2d9ffd0cd7784d3a31e5e25560051d41bf84920a3539ac",
            "fields": [
                {
                    "id": "osxd2_ms",
                    "encoding": "",
                    "name": "astr",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xak2isid",
                    "encoding": "",
                    "name": "dict",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_gksmzed",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.runstring",
                    "defaultValue": "numpy.testing.runstring",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "heju1b3t",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "jre3op2h",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "nu4882lk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "w7ib42eu",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "wdqhffxl",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "y9tgkbr6",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "g4v9qkyo",
            "name": "suppress_warnings.__init__",
            "description": "\nContext manager and decorator doing much the same as\n    ``warnings.catch_warnings``.\n    \n    However, it also provides a filter mechanism to work around\n    https://bugs.python.org/issue4180.\n    \n    This bug causes Python before 3.4 to not reliably show warnings again\n    after they have been ignored once (even within catch_warnings). It\n    means that no \"ignore\" filter can be used easily, since following\n    tests might need to see the warning. Additionally it allows easier\n    specificity for testing warnings and can be nested.\n    \n    Parameters\n    ----------\n    forwarding_rule : str, optional\n        One of \"always\", \"once\", \"module\", or \"location\". Analogous to\n        the usual warnings module filter mode, it is useful to reduce\n        noise mostly on the outmost level. Unsuppressed and unrecorded\n        warnings will be forwarded based on this rule. Defaults to \"always\".\n        \"location\" is equivalent to the warnings \"default\", match by exact\n        location the warning warning originated from.\n    \n    Notes\n    -----\n    Filters added inside the context manager will be discarded again\n    when leaving it. Upon entering all filters defined outside a\n    context will be applied automatically.\n    \n    When a recording filter is added, matching warnings are stored in the\n    ``log`` attribute as well as in the list returned by ``record``.\n    \n    If filters are added and the ``module`` keyword is given, the\n    warning registry of this module will additionally be cleared when\n    applying it, entering the context, or exiting it. This could cause\n    warnings to appear a second time after leaving the context if they\n    were configured to be printed once (default) and were already\n    printed before the context was entered.\n    \n    Nesting this context manager will work as expected when the\n    forwarding rule is \"always\" (default). Unfiltered and unrecorded\n    warnings will be passed out and be matched by the outer level.\n    On the outmost level they will be printed (or caught by another\n    warnings context). The forwarding rule argument can modify this\n    behaviour.\n    \n    Like ``catch_warnings`` this context manager is not threadsafe.\n    \n    Examples\n    --------\n    \n    With a context manager::\n    \n        with np.testing.suppress_warnings() as sup:\n            sup.filter(DeprecationWarning, \"Some text\")\n            sup.filter(module=np.ma.core)\n            log = sup.record(FutureWarning, \"Does this occur?\")\n            command_giving_warnings()\n            # The FutureWarning was given once, the filtered warnings were\n            # ignored. All other warnings abide outside settings (may be\n            # printed/error)\n            assert_(len(log) == 1)\n            assert_(len(sup.log) == 1)  # also stored in log attribute\n    \n    Or as a decorator::\n    \n        sup = np.testing.suppress_warnings()\n        sup.filter(module=np.ma.core)  # module must match exactly\n        @sup\n        def some_function():\n            # do something which causes a warning in np.ma.core\n            pass",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "87958a7f5e6b937b24e24cd22827407f494117785edd38393c33b381a64f1e2a",
            "fields": [
                {
                    "id": "de2j29za",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to suppress_warnings object",
                    "type": "Object:numpy.testing._private.utils.suppress_warnings",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "dh07k3sw",
                    "encoding": "",
                    "name": "forwarding_rule",
                    "value": "always",
                    "defaultValue": "always",
                    "description": "One of \"always\", \"once\", \"module\", or \"location\". Analogous to\nthe usual warnings module filter mode, it is useful to reduce\nnoise mostly on the outmost level. Unsuppressed and unrecorded\nwarnings will be forwarded based on this rule. Defaults to \"always\".\n\"location\" is equivalent to the warnings \"default\", match by exact\nlocation the warning warning originated from.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "et5m12w2",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.testing._private.utils.suppress_warnings.__init__",
                    "defaultValue": "numpy.matlib.numpy.testing._private.utils.suppress_warnings.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8qm4vsld",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "lc103ws3",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "jc__i3kk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mrshuh0h",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing._private.utils.suppress_warnings",
                    "defaultValue": "numpy.testing._private.utils.suppress_warnings",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7w93ehe6",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x4j41u25",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "33dj5ww9",
            "name": "suppress_warnings.filter",
            "description": "Add a new suppressing filter or apply it if the state is entered.\n    \n    Parameters\n    ----------\n    category : class, optional\n        Warning class to filter\n    message : string, optional\n        Regular expression matching the warning message.\n    module : module, optional\n        Module to filter for. Note that the module (and its file)\n        must match exactly and cannot be a submodule. This may make\n        it unreliable for external modules.\n    \n    Notes\n    -----\n    When added within a context, filters are only added inside\n    the context and will be forgotten when the context is exited.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "c9af993b2696346646847252dbb0d60a502f374c5e564bd0fbf1d19f2e41aba5",
            "fields": [
                {
                    "id": "4vpik4u8",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.testing._private.utils.suppress_warnings.filter object",
                    "type": "Object:numpy.testing._private.utils.suppress_warnings",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p_46ax0z",
                    "encoding": "",
                    "name": "category",
                    "value": "builtins.type",
                    "defaultValue": "builtins.type",
                    "description": "Warning class to filter",
                    "type": "builtins.type",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "mt7emegk",
                    "encoding": "",
                    "name": "message",
                    "value": "",
                    "defaultValue": "",
                    "description": "Regular expression matching the warning message.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "56n_v6ol",
                    "encoding": "",
                    "name": "module",
                    "value": "",
                    "defaultValue": "",
                    "description": "Module to filter for. Note that the module (and its file)\nmust match exactly and cannot be a submodule. This may make\nit unreliable for external modules.",
                    "type": "module",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6yp1svxc",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.testing._private.utils.suppress_warnings.filter",
                    "defaultValue": "numpy.matlib.numpy.testing._private.utils.suppress_warnings.filter",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "52_x35mw",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bcn4q112",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "cv4yd_td",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pktapd5h",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing._private.utils.suppress_warnings",
                    "defaultValue": "numpy.testing._private.utils.suppress_warnings",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r_hwkg06",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "95ne6qr9",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "sov46php",
            "name": "suppress_warnings.record",
            "description": "Append a new recording filter or apply it if the state is entered.\n    \n    All warnings matching will be appended to the ``log`` attribute.\n    \n    Parameters\n    ----------\n    category : class, optional\n        Warning class to filter\n    message : string, optional\n        Regular expression matching the warning message.\n    module : module, optional\n        Module to filter for. Note that the module (and its file)\n        must match exactly and cannot be a submodule. This may make\n        it unreliable for external modules.\n    \n    Returns\n    -------\n    log : list\n        A list which will be filled with all matched warnings.\n    \n    Notes\n    -----\n    When added within a context, filters are only added inside\n    the context and will be forgotten when the context is exited.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "bd80b925fab990fffb161ffa02a59c62f7a6f2fe200a67816d0cb9ddb3d313b1",
            "fields": [
                {
                    "id": "e9frp48u",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "Reference to numpy.testing._private.utils.suppress_warnings.record object",
                    "type": "Object:numpy.testing._private.utils.suppress_warnings",
                    "parameterType": "ComponentParameter",
                    "usage": "InputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u45y6_b5",
                    "encoding": "",
                    "name": "category",
                    "value": "builtins.type",
                    "defaultValue": "builtins.type",
                    "description": "Warning class to filter",
                    "type": "builtins.type",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gwdcapts",
                    "encoding": "",
                    "name": "message",
                    "value": "",
                    "defaultValue": "",
                    "description": "Regular expression matching the warning message.",
                    "type": "str",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "95bn19q_",
                    "encoding": "",
                    "name": "module",
                    "value": "",
                    "defaultValue": "",
                    "description": "Module to filter for. Note that the module (and its file)\nmust match exactly and cannot be a submodule. This may make\nit unreliable for external modules.",
                    "type": "module",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_7cbu08g",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.matlib.numpy.testing._private.utils.suppress_warnings.record",
                    "defaultValue": "numpy.matlib.numpy.testing._private.utils.suppress_warnings.record",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1m4f4wmk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x_rgrlvx",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "6vd41nxk",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ki7hauqf",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing._private.utils.suppress_warnings",
                    "defaultValue": "numpy.testing._private.utils.suppress_warnings",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9qvfp7cf",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3qhx4why",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "61meugin",
            "name": "testing.tempdir",
            "description": "Context manager to provide a temporary test folder.\n    \n    All arguments are passed as this to the underlying tempfile.mkdtemp\n    function.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "1409bb2eefe0cdb54ee71790d5e110f28d5a94bf39c3cd7a41c2aae8ea035037",
            "fields": [
                {
                    "id": "accwrk0y",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2scc1cm8",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1u8he_a1",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.tempdir",
                    "defaultValue": "numpy.testing.tempdir",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "67v5azl3",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "znbqxxqr",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "sjew1604",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zs5emz5x",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gs797zhm",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "yo5appp4",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "8ziryvc1",
            "name": "testing.temppath",
            "description": "Context manager for temporary files.\n    \n    Context manager that returns the path to a closed temporary file. Its\n    parameters are the same as for tempfile.mkstemp and are passed directly\n    to that function. The underlying file is removed when the context is\n    exited, so it should be closed at that time.\n    \n    Windows does not allow a temporary file to be opened if it is already\n    open, so the underlying file must be closed after opening before it\n    can be opened again.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6631c8ba5ee1e1d0e12bd14c8d09815b97fd7e9f7163c7f9125fb481889d1878",
            "fields": [
                {
                    "id": "4c6amlsz",
                    "encoding": "",
                    "name": "args",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "List",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "_n383fmm",
                    "encoding": "",
                    "name": "kwargs",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "278hs4t9",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.temppath",
                    "defaultValue": "numpy.testing.temppath",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0g05w07j",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2_nlmx0m",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "xpprg4j7",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xqbbfox7",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing",
                    "defaultValue": "numpy.testing",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "xnrspayy",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2ektiah9",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "teoq1uui",
            "name": "overrides.allows_array_function_override",
            "description": "Determine if a Numpy function can be overridden via `__array_function__`\n    \n    Parameters\n    ----------\n    func : callable\n        Function that may be overridable via `__array_function__`\n    \n    Returns\n    -------\n    bool\n        `True` if `func` is a function in the Numpy API that is\n        overridable via `__array_function__` and `False` otherwise.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "2caa1818a369c265bea31cf37d7271475ab652d5ab75890001636dcab260860c",
            "fields": [
                {
                    "id": "t7um0l4o",
                    "encoding": "",
                    "name": "func",
                    "value": "",
                    "defaultValue": "",
                    "description": "Function that may be overridable via `__array_function__`",
                    "type": "callable",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0o0l2rfs",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.overrides.allows_array_function_override",
                    "defaultValue": "numpy.testing.overrides.allows_array_function_override",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bb_cl5_w",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j0bfn5or",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "j8oxk76r",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4yjvfws6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.overrides",
                    "defaultValue": "numpy.testing.overrides",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "u52qnr8m",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "so4uv0to",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "_p_kfnyc",
            "name": "overrides.allows_array_ufunc_override",
            "description": "Determine if a function can be overridden via `__array_ufunc__`\n    \n    Parameters\n    ----------\n    func : callable\n        Function that may be overridable via `__array_ufunc__`\n    \n    Returns\n    -------\n    bool\n        `True` if `func` is overridable via `__array_ufunc__` and\n        `False` otherwise.\n    \n    Notes\n    -----\n    This function is equivalent to ``isinstance(func, np.ufunc)`` and\n    will work correctly for ufuncs defined outside of Numpy.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "159bb9ec9e9f621ff1342676815a205c8c239e603e274282e2aff4b9339490c7",
            "fields": [
                {
                    "id": "l3l1rg_x",
                    "encoding": "",
                    "name": "func",
                    "value": "",
                    "defaultValue": "",
                    "description": "Function that may be overridable via `__array_ufunc__`",
                    "type": "callable",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "j235r5wt",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.overrides.allows_array_ufunc_override",
                    "defaultValue": "numpy.testing.overrides.allows_array_ufunc_override",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k54j65vl",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "o9tb8jw7",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "bmrkxw43",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1la4jvcn",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.overrides",
                    "defaultValue": "numpy.testing.overrides",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gv_1ss0d",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nhx5olss",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "a6c0r8h4",
            "name": "overrides.get_overridable_numpy_array_functions",
            "description": "List all numpy functions overridable via `__array_function__`\n    \n    Parameters\n    ----------\n    None\n    \n    Returns\n    -------\n    set\n        A set containing all functions in the public numpy API that are\n        overridable via `__array_function__`.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "f94170423a50ebd729c2836a7c8753a9a61b92821d8d459a5a56e765754b67a2",
            "fields": [
                {
                    "id": "tyk5h1b7",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.overrides.get_overridable_numpy_array_functions",
                    "defaultValue": "numpy.testing.overrides.get_overridable_numpy_array_functions",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "klx_8ci4",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "p3yxu3cz",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "1uq_n8l7",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "5c9iwh40",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.overrides",
                    "defaultValue": "numpy.testing.overrides",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "48ofolqs",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "hq69svjf",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "tp1kqwe8",
            "name": "overrides.get_overridable_numpy_ufuncs",
            "description": "List all numpy ufuncs overridable via `__array_ufunc__`\n    \n    Parameters\n    ----------\n    None\n    \n    Returns\n    -------\n    set\n        A set containing all overridable ufuncs in the public numpy API.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "66edebe2c711b91ea83b74426ca41f1300a4169898eb01d15ea52ab1096871e5",
            "fields": [
                {
                    "id": "dq1xqbtf",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.overrides.get_overridable_numpy_ufuncs",
                    "defaultValue": "numpy.testing.overrides.get_overridable_numpy_ufuncs",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "n6n76uvb",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pk83y3gt",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "doxlp0hy",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "pje8esl6",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.overrides",
                    "defaultValue": "numpy.testing.overrides",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v_yulf1y",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "v1kgv3za",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PythonMemberFunction",
            "categoryType": "Application",
            "id": "booo3419",
            "name": "GenericObject.__init__",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "54df77600abdd73b2171702acb3a29db685cabd91647fbe258db47d4002b4d65",
            "fields": [
                {
                    "id": "g629humw",
                    "encoding": "",
                    "name": "self",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "Object:numpy.testing.print_coercion_tables.GenericObject",
                    "parameterType": "ComponentParameter",
                    "usage": "OutputPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "anq_p1d0",
                    "encoding": "",
                    "name": "v",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "r008ay92",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.print_coercion_tables.GenericObject.__init__",
                    "defaultValue": "numpy.testing.print_coercion_tables.GenericObject.__init__",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6avxtf7j",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zc_ck783",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "5r0m4tpo",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "8g3z8np1",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.print_coercion_tables.GenericObject",
                    "defaultValue": "numpy.testing.print_coercion_tables.GenericObject",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "gf2cyg_6",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0ypzucsx",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "hd0l6mws",
            "name": "print_coercion_tables.namedtuple",
            "description": "Returns a new subclass of tuple with named fields.\n    \n    >>> Point = namedtuple('Point', ['x', 'y'])\n    >>> Point.__doc__                   # docstring for the new class\n    'Point(x, y)'\n    >>> p = Point(11, y=22)             # instantiate with positional args or keywords\n    >>> p[0] + p[1]                     # indexable like a plain tuple\n    33\n    >>> x, y = p                        # unpack like a regular tuple\n    >>> x, y\n    (11, 22)\n    >>> p.x + p.y                       # fields also accessible by name\n    33\n    >>> d = p._asdict()                 # convert to a dictionary\n    >>> d['x']\n    11\n    >>> Point(**d)                      # convert from a dictionary\n    Point(x=11, y=22)\n    >>> p._replace(x=100)               # _replace() is like str.replace() but targets named fields\n    Point(x=100, y=22)",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "da0779d3d7e3272ebdc958ca0648315cc7386379434ea707c9da80af5d56e784",
            "fields": [
                {
                    "id": "jep3v0ui",
                    "encoding": "",
                    "name": "typename",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "0jzrmbt5",
                    "encoding": "",
                    "name": "field_names",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6nmvw5jb",
                    "encoding": "",
                    "name": "rename",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "7nyk77cy",
                    "encoding": "",
                    "name": "defaults",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "d896ltxr",
                    "encoding": "",
                    "name": "module",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "q8g75uue",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.print_coercion_tables.namedtuple",
                    "defaultValue": "numpy.testing.print_coercion_tables.namedtuple",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "is5m4k3u",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2mut3hjo",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "lt18duch",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fotwt_w0",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.print_coercion_tables",
                    "defaultValue": "numpy.testing.print_coercion_tables",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ocgvyure",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "kajptp3p",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "t_8c8t72",
            "name": "print_coercion_tables.obj2sctype",
            "description": "Return the scalar dtype or NumPy equivalent of Python type of an object.\n    \n    Parameters\n    ----------\n    rep : any\n        The object of which the type is returned.\n    default : any, optional\n        If given, this is returned for objects whose types can not be\n        determined. If not given, None is returned for those objects.\n    \n    Returns\n    -------\n    dtype : dtype or Python type\n        The data type of `rep`.\n    \n    See Also\n    --------\n    sctype2char, issctype, issubsctype, issubdtype\n    \n    Examples\n    --------\n    >>> from numpy._core.numerictypes import obj2sctype\n    >>> obj2sctype(np.int32)\n    <class 'numpy.int32'>\n    >>> obj2sctype(np.array([1., 2.]))\n    <class 'numpy.float64'>\n    >>> obj2sctype(np.array([1.j]))\n    <class 'numpy.complex128'>\n    \n    >>> obj2sctype(dict)\n    <class 'numpy.object_'>\n    >>> obj2sctype('string')\n    \n    >>> obj2sctype(1, default=list)\n    <class 'list'>",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "28abb935f4a19ebe4daff5508c77927ae8f883f638a22131dfe1beaddeb551d4",
            "fields": [
                {
                    "id": "y6pcr_8z",
                    "encoding": "",
                    "name": "rep",
                    "value": "",
                    "defaultValue": "",
                    "description": "The object of which the type is returned.",
                    "type": "any",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "6gar_y2_",
                    "encoding": "",
                    "name": "default",
                    "value": "",
                    "defaultValue": "",
                    "description": "If given, this is returned for objects whose types can not be\ndetermined. If not given, None is returned for those objects.",
                    "type": "any",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "osz1rdqp",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.print_coercion_tables.obj2sctype",
                    "defaultValue": "numpy.testing.print_coercion_tables.obj2sctype",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "06m9fnqk",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "s2wpnqa6",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "h5hd8wao",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1kyqofe_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.print_coercion_tables",
                    "defaultValue": "numpy.testing.print_coercion_tables",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "snrubu6p",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "zeutxt70",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "s821kx4b",
            "name": "print_coercion_tables.print_cancast_table",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "074d44b3f612a94929a3a4fcde0ea8c443ed94c21d4ea38ce30690e1eac18311",
            "fields": [
                {
                    "id": "d0lvrsp4",
                    "encoding": "",
                    "name": "ntypes",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "fuicvfs6",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.print_coercion_tables.print_cancast_table",
                    "defaultValue": "numpy.testing.print_coercion_tables.print_cancast_table",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "51mm356b",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "bhenywyi",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "kofsegpf",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "qgdahbu_",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.print_coercion_tables",
                    "defaultValue": "numpy.testing.print_coercion_tables",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "ts0gzlx9",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4bk756cm",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "js7glpo9",
            "name": "print_coercion_tables.print_coercion_table",
            "description": "",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "faad80b162ae899663ed82af51d81869c3eaeffe846c00da72952dc41b4740e5",
            "fields": [
                {
                    "id": "suqpjfap",
                    "encoding": "",
                    "name": "ntypes",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "43lg712g",
                    "encoding": "",
                    "name": "inputfirstvalue",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nx5xf1_u",
                    "encoding": "",
                    "name": "inputsecondvalue",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "2sqf6f42",
                    "encoding": "",
                    "name": "firstarray",
                    "value": "",
                    "defaultValue": "",
                    "description": "",
                    "type": "None",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "4u1v_du4",
                    "encoding": "",
                    "name": "use_promote_types",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rl2jmt1x",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.print_coercion_tables.print_coercion_table",
                    "defaultValue": "numpy.testing.print_coercion_tables.print_coercion_table",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "stb1k9at",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "nmnt3w4e",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "rujctktc",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "3tvu5t_p",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.print_coercion_tables",
                    "defaultValue": "numpy.testing.print_coercion_tables",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "k4u2cgdi",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "rye20mn4",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        },
        {
            "inputAppFields": [],
            "inputApplicationDescription": "",
            "inputApplicationId": null,
            "inputApplicationName": "",
            "inputApplicationType": "None",
            "outputAppFields": [],
            "outputApplicationDescription": "",
            "outputApplicationId": null,
            "outputApplicationName": "",
            "outputApplicationType": "None",
            "category": "PyFuncApp",
            "categoryType": "Application",
            "id": "mgpssqiw",
            "name": "print_coercion_tables.print_new_cast_table",
            "description": "Prints new casts, the values given are default \"can-cast\" values, not\n    actual ones.",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "6505f70fa35d17c36663e426e37e6af0e1a605914cefc9b52868d7056c526324",
            "fields": [
                {
                    "id": "f0x3vwnm",
                    "encoding": "",
                    "name": "can_cast",
                    "value": true,
                    "defaultValue": true,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "tzki4ggy",
                    "encoding": "",
                    "name": "legacy",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "iqee7vp2",
                    "encoding": "",
                    "name": "flags",
                    "value": false,
                    "defaultValue": false,
                    "description": "",
                    "type": "bool",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "1uhukp1d",
                    "encoding": "",
                    "name": "func_name",
                    "value": "numpy.testing.print_coercion_tables.print_new_cast_table",
                    "defaultValue": "numpy.testing.print_coercion_tables.print_new_cast_table",
                    "description": "Complete import path of function or just a function name which is also used in func_code below.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "x8xv16yg",
                    "encoding": "",
                    "name": "log-level",
                    "value": "NOTSET",
                    "defaultValue": "NOTSET",
                    "description": "Log-level to be used for this appplication. If empty or NOTSET, the global setting will be used.",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "NOTSET",
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CRITICAL"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "9a9ptxpm",
                    "encoding": "",
                    "name": "group_start",
                    "value": false,
                    "defaultValue": null,
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": false
                },
                {
                    "id": "f4rsx3cf",
                    "encoding": "",
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "i6j3chxo",
                    "encoding": "",
                    "name": "base_name",
                    "value": "numpy.testing.print_coercion_tables",
                    "defaultValue": "numpy.testing.print_coercion_tables",
                    "description": "The base class for this member function.",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "f_4go23a",
                    "encoding": "",
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "id": "b6zaf78g",
                    "encoding": "",
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": 1,
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}