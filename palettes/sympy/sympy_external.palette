{
    "modelData": {
        "filePath": "sympy_external.palette",
        "fileType": "palette",
        "shortDescription": "",
        "detailedDescription": "Unified place for determining if external dependencies are installed or not.\n\nYou should import all external modules using the import_module() function.\n\nFor example\n\n>>> from sympy.external import import_module\n>>> numpy = import_module('numpy')\n\nIf the resulting library is not installed, or if the installed version\nis less than a given minimum version, the function will return None.\nOtherwise, it will return the library. See the docstring of\nimport_module() for more information.",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE_test_repo",
        "eagleVersion": "",
        "eagleCommitHash": "",
        "schemaVersion": "AppRef",
        "readonly": true,
        "repositoryUrl": "tmp",
        "commitHash": "0.1",
        "downloadUrl": "",
        "signature": "a443bcc0e22e3328008dcfe27b869ae7d1bdb3f77bb4d0a162865d2d30edf1fe",
        "lastModifiedName": "wici",
        "lastModifiedEmail": "",
        "lastModifiedDatetime": 1695025464.651972,
        "numLGNodes": 1
    },
    "nodeDataArray": [
        {
            "category": "PythonApp",
            "key": -1,
            "name": "sympy.external.import_module",
            "description": "Import and return a module if it is installed.\n    \n    If the module is not installed, it returns None.\n    \n    A minimum version for the module can be given as the keyword argument\n    min_module_version.  This should be comparable against the module version.\n    By default, module.__version__ is used to get the module version.  To\n    override this, set the module_version_attr keyword argument.  If the\n    attribute of the module to get the version should be called (e.g.,\n    module.version()), then set module_version_attr_call_args to the args such\n    that module.module_version_attr(*module_version_attr_call_args) returns the\n    module's version.\n    \n    If the module version is less than min_module_version using the Python <\n    comparison, None will be returned, even if the module is installed. You can\n    use this to keep from importing an incompatible older version of a module.\n    \n    You can also specify a minimum Python version by using the\n    min_python_version keyword argument.  This should be comparable against\n    sys.version_info.\n    \n    If the keyword argument warn_not_installed is set to True, the function will\n    emit a UserWarning when the module is not installed.\n    \n    If the keyword argument warn_old_version is set to True, the function will\n    emit a UserWarning when the library is installed, but cannot be imported\n    because of the min_module_version or min_python_version options.\n    \n    Note that because of the way warnings are handled, a warning will be\n    emitted for each module only once.  You can change the default warning\n    behavior by overriding the values of WARN_NOT_INSTALLED and WARN_OLD_VERSION\n    in sympy.external.importtools.  By default, WARN_NOT_INSTALLED is False and\n    WARN_OLD_VERSION is True.\n    \n    This function uses __import__() to import the module.  To pass additional\n    options to __import__(), use the import_kwargs keyword argument.  For\n    example, to import a submodule A.B, you must pass a nonempty fromlist option\n    to __import__.  See the docstring of __import__().\n    \n    This catches ImportError to determine if the module is not installed.  To\n    catch additional errors, pass them as a tuple to the catch keyword\n    argument.\n    \n    Examples\n    ========\n    \n    >>> from sympy.external import import_module\n    \n    >>> numpy = import_module('numpy')\n    \n    >>> numpy = import_module('numpy', min_python_version=(2, 7),\n    ... warn_old_version=False)\n    \n    >>> numpy = import_module('numpy', min_module_version='1.5',\n    ... warn_old_version=False) # numpy.__version__ is a string\n    \n    >>> # gmpy does not have __version__, but it does have gmpy.version()\n    \n    >>> gmpy = import_module('gmpy', min_module_version='1.14',\n    ... module_version_attr='version', module_version_attr_call_args=(),\n    ... warn_old_version=False)\n    \n    >>> # To import a submodule, you must pass a nonempty fromlist to\n    >>> # __import__().  The values do not matter.\n    >>> p3 = import_module('mpl_toolkits.mplot3d',\n    ... import_kwargs={'fromlist':['something']})\n    \n    >>> # matplotlib.pyplot can raise RuntimeError when the display cannot be opened\n    >>> matplotlib = import_module('matplotlib',\n    ... import_kwargs={'fromlist':['pyplot']}, catch=(RuntimeError,))",
            "repositoryUrl": "dlg_paletteGen.generated",
            "commitHash": "0.1",
            "paletteDownloadUrl": "",
            "dataHash": "58c6007c65cff85f410d6528c22600b616dbf5c6470d822169af6185e008a0d3",
            "fields": [
                {
                    "name": "module",
                    "value": "None",
                    "defaultValue": "None",
                    "description": "",
                    "type": "Object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "min_module_version",
                    "value": "None",
                    "defaultValue": "None",
                    "description": "",
                    "type": "Object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "min_python_version",
                    "value": "None",
                    "defaultValue": "None",
                    "description": "",
                    "type": "Object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "warn_not_installed",
                    "value": "None",
                    "defaultValue": "None",
                    "description": "",
                    "type": "Object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "warn_old_version",
                    "value": "None",
                    "defaultValue": "None",
                    "description": "",
                    "type": "Object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "module_version_attr",
                    "value": "__version__",
                    "defaultValue": "__version__",
                    "description": "",
                    "type": "String",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "module_version_attr_call_args",
                    "value": "None",
                    "defaultValue": "None",
                    "description": "",
                    "type": "Object",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "import_kwargs",
                    "value": {},
                    "defaultValue": {},
                    "description": "",
                    "type": "dict",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "catch",
                    "value": "()",
                    "defaultValue": "()",
                    "description": "",
                    "type": "Json",
                    "parameterType": "ApplicationArgument",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": null,
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "group_start",
                    "value": "false",
                    "defaultValue": "dummy",
                    "description": "Is this node the start of a group?",
                    "type": "Boolean",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": "false"
                },
                {
                    "name": "execution_time",
                    "value": 2,
                    "defaultValue": 2,
                    "description": "Estimate of execution time (in seconds) for this application.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "num_cpus",
                    "value": 1,
                    "defaultValue": "dummy",
                    "description": "Number of cores used.",
                    "type": "Integer",
                    "parameterType": "ConstraintParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [],
                    "precious": false,
                    "positional": false,
                    "default_value": 1
                },
                {
                    "name": "func_name",
                    "value": "sympy.external.importtools.import_module",
                    "defaultValue": "sympy.external.importtools.import_module",
                    "description": "Complete import path of function",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "dropclass",
                    "value": "dlg.apps.pyfunc.PyFuncApp",
                    "defaultValue": "dlg.apps.pyfunc.PyFuncApp",
                    "description": "The python class that implements this application",
                    "type": "String",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": true,
                    "options": [],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "input_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Input port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                },
                {
                    "name": "output_parser",
                    "value": "pickle",
                    "defaultValue": "pickle",
                    "description": "Output port parsing technique",
                    "type": "Select",
                    "parameterType": "ComponentParameter",
                    "usage": "NoPort",
                    "readonly": false,
                    "options": [
                        "pickle",
                        "eval",
                        "npy",
                        "path",
                        "dataurl"
                    ],
                    "precious": false,
                    "positional": false
                }
            ]
        }
    ],
    "linkDataArray": []
}